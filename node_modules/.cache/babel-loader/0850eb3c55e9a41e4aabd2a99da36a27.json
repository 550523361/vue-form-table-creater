{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/listTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/listTable.vue","mtime":1553590176198},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport tableListComponent from './tableListComponent';\nimport tableQueryParamComponent from './tableQueryParamComponent';\nimport Vue from 'vue';\nVue.component('async-element', function (resolve, reject) {\n  resolve({\n    template: \"<div style=''>\\n                          <div style=\\\"padding: 5px 10px;color: #0056aa;font-weight: bolder;font-size: 14px;\\\">\\n                               {{$attrs.config.rowData.name}}\\n                          </div>\\n                          <div style=\\\"padding-left: 40px;padding-top: 10px;padding-bottom: 10px;\\\">\\n                              <label style=\\\"padding: 3px 10px;margin-right: 10px;margin-bottom: 10px;cursor: pointer;\\\"  :key=\\\"item.id+'_'+index\\\" v-for=\\\"(item,index) in $attrs.config.rowData.tagList\\\">\\n                                <input v-model=\\\"item.checked\\\" :id=\\\"'tag'+item.id\\\" type=\\\"checkbox\\\" @click=\\\"$attrs.config.column.click(item,$attrs.config.rowData,$event)\\\"><span style=\\\"padding-left: 5px;\\\">{{item.name}}</span>\\n                              </label>\\n                          </div>\\n\\n                      </div>\"\n  });\n});\nexport default {\n  name: 'list-table',\n  components: {\n    'my-table': tableListComponent,\n    'query-param': tableQueryParamComponent\n  },\n  data: function data() {\n    return {\n      readonly: {},\n      tableListConfig: {\n        watchProp: '',\n        columns: [],\n        operator: {\n          width: 200,\n          columns: []\n        },\n        url: '',\n        splitTables: 1,\n        showHeader: true,\n        stripe: true,\n        pager: {\n          pageSize: 15\n        }\n      },\n      queryConfig: {\n        queryElements: [],\n        containerStyle: {}\n      }\n    };\n  },\n  methods: {\n    clickHandler: function clickHandler(param) {\n      //console.log(\"clickHandler\",param)\n      var config = that.$attrs.config;\n\n      if (config.clickHandler && typeof config.clickHandler == \"function\") {\n        for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          params[_key - 1] = arguments[_key];\n        }\n\n        config.clickHandler.apply(config, [param].concat(params));\n      }\n    },\n    pagerDataHelper: function pagerDataHelper(param) {\n      //console.log(\"pagerDataHelper********\",param);\n      var config = that.$attrs.config;\n\n      if (config.pagerDataHelper && typeof config.pagerDataHelper == \"function\") {\n        for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          params[_key2 - 1] = arguments[_key2];\n        }\n\n        return config.pagerDataHelper.apply(config, [param].concat(params));\n      }\n\n      param.content.map(function (item) {\n        //console.log(\"idCheck==>\",item.idCheck)\n        return item;\n      });\n      return param;\n    },\n    clickConfig: function clickConfig(param, btn) {\n      for (var _len3 = arguments.length, params = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        params[_key3 - 2] = arguments[_key3];\n      }\n\n      var that = this;\n      var config = this.$attrs.config;\n\n      if (config.clickHandler && typeof config.clickHandler == \"function\") {\n        config.clickHandler.apply(config, [param, btn].concat(params));\n      }\n\n      if (btn.type == \"search\" || btn.type == \"tab\") {\n        that.$nextTick(function () {\n          var _this = this;\n\n          if (config.tableListConfig.beforeQuery && typeof config.tableListConfig.beforeQuery == \"function\") {\n            var _config$tableListConf;\n\n            //console.log(\"******search*****9999900000\",param)\n            var result = (_config$tableListConf = config.tableListConfig).beforeQuery.apply(_config$tableListConf, [param, btn].concat(params));\n\n            if (result instanceof _Promise) {\n              result.then(function (success) {\n                _this.$nextTick(function () {\n                  this.$refs.tableList.queryListByPager(1);\n                });\n              }, function (error) {\n                that.$message({\n                  message: error.msg,\n                  type: \"error\"\n                });\n              });\n            } else {\n              if (result) {\n                if (result.code == 1) {\n                  this.$nextTick(function () {\n                    this.$refs.tableList.queryListByPager(1);\n                  });\n                } else {\n                  console.log(\"result\", result);\n                  that.$message({\n                    message: result.msg || '检查不通过但是没有返回错误信息',\n                    type: \"error\"\n                  });\n                }\n              } else {\n                /*检查没有阻止 继续请求*/\n                this.$nextTick(function () {\n                  this.$refs.tableList.queryListByPager(1);\n                });\n              }\n            }\n          } else {\n            this.$refs.tableList.queryListByPager(1);\n          }\n        });\n      }\n    },\n    fresh: function fresh() {\n      this.$nextTick(function () {\n        this.$refs.tableList.queryListByPager(1);\n      });\n    }\n  },\n  created: function created() {\n    var that = this;\n    var config = that.$attrs.config;\n    that.readonly = this.$attrs.readData || {};\n    that.tableListConfig = _Object$assign(that.tableListConfig, config.tableListConfig);\n    that.queryConfig = _Object$assign(that.queryConfig, config.queryConfig);\n    that.$on(\"readonlyDataChanged\", function (newValue) {\n      that.readonly = newValue;\n    });\n    this.$watch(\"$attrs.config\", function (newData, oldData) {\n      that.tableListConfig = _Object$assign(that.tableListConfig, newData.tableListConfig);\n      that.readonly = _Object$assign(that.readonly, that.$attrs.config.readonly);\n      that.queryConfig.queryElements = newData.queryConfig.queryElements;\n      that.queryConfig.containerStyle = newData.queryConfig.containerStyle;\n    }, {\n      deep: true\n    });\n  },\n  computed: {\n    queryParam: function queryParam() {\n      return this.$refs.queryParam.queryParam;\n    }\n  }\n};",{"version":3,"sources":["listTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"list2\">\n    <slot name=\"beforeQuery\"></slot>\n    <query-param :queryConfig=\"queryConfig\" :readData=\"readonly\" :clickConfig=\"clickConfig\" ref=\"queryParam\"></query-param>\n    <slot name=\"beforeTable\"></slot>\n    <my-table :tableListConfig=\"tableListConfig\" :readData=\"readonly\" ref=\"tableList\"></my-table>\n    <slot name=\"afterTable\"></slot>\n  </div>\n</template>\n<script>\n  import tableListComponent from './tableListComponent'\n  import tableQueryParamComponent from './tableQueryParamComponent'\n  import Vue from 'vue'\n\n  Vue.component('async-element', function (resolve, reject) {\n          resolve({\n              template: `<div style=''>\n                            <div style=\"padding: 5px 10px;color: #0056aa;font-weight: bolder;font-size: 14px;\">\n                                 {{$attrs.config.rowData.name}}\n                            </div>\n                            <div style=\"padding-left: 40px;padding-top: 10px;padding-bottom: 10px;\">\n                                <label style=\"padding: 3px 10px;margin-right: 10px;margin-bottom: 10px;cursor: pointer;\"  :key=\"item.id+'_'+index\" v-for=\"(item,index) in $attrs.config.rowData.tagList\">\n                                  <input v-model=\"item.checked\" :id=\"'tag'+item.id\" type=\"checkbox\" @click=\"$attrs.config.column.click(item,$attrs.config.rowData,$event)\"><span style=\"padding-left: 5px;\">{{item.name}}</span>\n                                </label>\n                            </div>\n\n                        </div>`\n          })\n  })\n\n\n  export default {\n      name: 'list-table',\n      components:{\n          'my-table':tableListComponent,\n          'query-param':tableQueryParamComponent\n      },\n      data(){\n          return{\n              readonly:{},\n              tableListConfig:{watchProp:'',columns:[],operator:{width:200,columns:[]},url:'',splitTables:1,showHeader:true,stripe:true,pager:{pageSize:15}},\n              queryConfig:{queryElements:[],containerStyle:{}},\n          }\n      },\n      methods:{\n          clickHandler(param,...params){\n              //console.log(\"clickHandler\",param)\n              let config=that.$attrs.config;\n              if(config.clickHandler&& typeof config.clickHandler == \"function\"){\n                  config.clickHandler(param,...params)\n              }\n          },\n          pagerDataHelper(param,...params){\n              //console.log(\"pagerDataHelper********\",param);\n              let config=that.$attrs.config;\n              if(config.pagerDataHelper&& typeof config.pagerDataHelper == \"function\"){\n                  return config.pagerDataHelper(param,...params);\n              }\n              param.content.map(item=>{\n                  //console.log(\"idCheck==>\",item.idCheck)\n                  return item;\n              })\n              return param;\n          },\n          clickConfig(param,btn,...params){\n              let that=this;\n              let config=this.$attrs.config;\n              if(config.clickHandler&& typeof config.clickHandler == \"function\"){\n                  config.clickHandler(param,btn,...params);\n              }\n              if(btn.type==\"search\"||btn.type==\"tab\"){\n                  that.$nextTick(function () {\n                      if(config.tableListConfig.beforeQuery&& typeof config.tableListConfig.beforeQuery == \"function\"){\n                          //console.log(\"******search*****9999900000\",param)\n                          let result=config.tableListConfig.beforeQuery(param,btn,...params);\n                          if(result instanceof Promise){\n                              result.then(success=>{\n                                  this.$nextTick(function () {\n                                      this.$refs.tableList.queryListByPager(1);\n                                  })\n\n                              },error=>{\n                                  that.$message({\n                                      message:error.msg,\n                                      type:\"error\"\n                                  })\n                              })\n                          }else{\n                              if(result){\n                                  if(result.code==1){\n                                      this.$nextTick(function () {\n                                          this.$refs.tableList.queryListByPager(1);\n                                      })\n                                  }else{\n                                      console.log(\"result\",result)\n                                      that.$message({\n                                          message:result.msg||'检查不通过但是没有返回错误信息',\n                                          type:\"error\"\n                                      })\n                                  }\n                              }else{\n                                  /*检查没有阻止 继续请求*/\n                                  this.$nextTick(function () {\n                                      this.$refs.tableList.queryListByPager(1);\n                                  })\n                              }\n                          }\n                      }else{\n                          this.$refs.tableList.queryListByPager(1);\n                      }\n                  })\n              }\n          },\n          fresh(){\n              this.$nextTick(function () {\n                  this.$refs.tableList.queryListByPager(1);\n              })\n          }\n      },\n      created(){\n          let that = this;\n          let config=that.$attrs.config;\n          that.readonly=this.$attrs.readData||{};\n          that.tableListConfig=Object.assign(that.tableListConfig,config.tableListConfig);\n\n          that.queryConfig=Object.assign(that.queryConfig,config.queryConfig);\n          that.$on(\"readonlyDataChanged\",function (newValue) {\n              that.readonly=newValue;\n          })\n          this.$watch(\"$attrs.config\",function (newData,oldData) {\n              that.tableListConfig=Object.assign(that.tableListConfig,newData.tableListConfig);\n              that.readonly=Object.assign(that.readonly,that.$attrs.config.readonly);\n              that.queryConfig.queryElements=newData.queryConfig.queryElements;\n              that.queryConfig.containerStyle=newData.queryConfig.containerStyle;\n          },{\n              deep:true\n          })\n      },\n      computed:{\n          queryParam:function(){\n              return this.$refs.queryParam.queryParam;\n          }\n      }\n  }\n</script>\n\n<style>\n  .myBtn{\n    background: #333 !important;\n    text-align: center;\n    color: #fff!important;\n    cursor: pointer;\n  }\n</style>\n"],"sourceRoot":"src/components/tableList"}]}