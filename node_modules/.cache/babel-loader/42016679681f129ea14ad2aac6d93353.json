{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/tableListComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/tableListComponent.vue","mtime":1553657121770},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport _Promise from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _JSON$stringify from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport backendService from \"../remoteService/backendService\";\nexport default {\n  name: \"table-list\",\n  props: {},\n  data: function data() {\n    return {\n      queryParam: {\n        pageNum: 1,\n        pageSize: 20\n      },\n      tableListConfig: {\n        columns: [],\n        watchProp: \"\",\n        operator: {\n          width: 200,\n          columns: []\n        },\n        url: \"\",\n        splitTables: 1,\n        stripe: true,\n        showHeader: true\n      },\n      hasCheckBox: [],\n      tableDataSource: {\n        dataList: []\n      },\n      readonly: {},\n      context: null,\n      backendService: backendService\n    };\n  },\n  methods: {\n    batchChoose: function batchChoose($event, param) {\n      for (key in this.tableData.data.dataList) {\n        this.tableData.data.dataList[key].checked = $event.target.checked;\n      }\n    },\n    queryListByPager: function queryListByPager(pageNum) {\n      var that = this;\n      var arrtsConfig = this.$attrs;\n      var baseParam = {\n        pageNum: that.queryParam.pageNum,\n        pageSize: that.queryParam.pageSize\n      };\n      baseParam = _Object$assign(baseParam, that.tableListConfig.query);\n      var submitParam = JSON.parse(_JSON$stringify(that.$parent.queryParam));\n      submitParam.pageSize = arrtsConfig.tableListConfig.pager.pageSize || that.queryParam.pageSize;\n\n      if (submitParam.timeRange) {\n        submitParam[\"startTime\"] = that.$parent.queryParam.timeRange[0] == \"\" ? \"\" : that.$parent.queryParam.timeRange[0];\n        submitParam[\"endTime\"] = that.$parent.queryParam.timeRange[1] == \"\" ? \"\" : that.$parent.queryParam.timeRange[1];\n        delete submitParam[\"timeRange\"];\n      }\n\n      if (that.$parent.queryParam.deleteProps) {\n        //console.log(that.queryParam.deleteProps)\n        that.$parent.queryParam.deleteProps.forEach(function (item) {\n          delete submitParam[item];\n        });\n        delete submitParam[\"deleteProps\"];\n      }\n\n      submitParam.pageNum = pageNum;\n      baseParam = _Object$assign(baseParam, submitParam);\n      backendService.getData({\n        url: arrtsConfig.tableListConfig.url,\n        method: arrtsConfig.tableListConfig.method || \"post\",\n        data: baseParam\n      }).then(function (result) {\n        if (!result) {\n          if (typeof arrtsConfig.tableListConfig.errorDataHelper == \"function\") {\n            var dealResult = arrtsConfig.tableListConfig.errorDataHelper(result);\n\n            if (dealResult instanceof _Promise) {\n              dealResult.then(function (success) {\n                that.afterRequest(success.data);\n                that.tableDataSource = success.data;\n              }, function (error) {\n                console.log(\"失败!!!!!!!\", error);\n              });\n            } else {\n              that.afterRequest(dealResult);\n              console.log(\"dealResult\", dealResult);\n              that.tableDataSource = dealResult;\n            }\n          } else {\n            that.tableDataSource = [];\n            that.$message({\n              message: \"服务器错误!\",\n              type: \"error\"\n            });\n          }\n\n          return;\n        }\n\n        if (result.code == \"1\") {\n          if (typeof arrtsConfig.tableListConfig.pagerDataHelper == \"function\") {\n            var _dealResult = arrtsConfig.tableListConfig.pagerDataHelper(result.data);\n\n            if (_dealResult instanceof _Promise) {\n              _dealResult.then(function (success) {\n                that.afterRequest(success.data);\n                that.tableDataSource = success.data;\n                that.$refs.tableList_0 && that.toggleRowSelection(that.$refs.tableList_0[0]);\n              }, function (error) {\n                console.log(\"失败!!!!!!!\", error);\n              });\n            } else {\n              that.afterRequest(_dealResult);\n              that.tableDataSource = _dealResult;\n              that.$refs.tableList_0 && that.toggleRowSelection(that.$refs.tableList_0[0]);\n            }\n          } else {\n            that.afterRequest(result.data);\n            that.tableDataSource = result.data;\n            that.$refs.tableList_0 && that.toggleRowSelection(that.$refs.tableList_0[0]);\n          }\n        } else {\n          if (typeof arrtsConfig.tableListConfig.errorDataHelper == \"function\") {\n            var _dealResult2 = arrtsConfig.tableListConfig.errorDataHelper(result.data);\n\n            if (_dealResult2 instanceof _Promise) {\n              _dealResult2.then(function (success) {\n                that.afterRequest(success.data);\n                that.tableDataSource = success.data;\n              }, function (error) {\n                console.log(\"失败!!!!!!!\", error);\n              });\n            } else {\n              that.afterRequest(_dealResult2);\n              that.tableDataSource = _dealResult2;\n            }\n          } else {\n            that.tableDataSource = [];\n          }\n        }\n      });\n    },\n    toggleRowSelection: function toggleRowSelection(tableList) {\n      if (!tableList) return;\n      var timerId = setTimeout(function (data) {\n        if (tableList.data) {\n          var choosedRowIndexArray = []; //console.log(\"tableList.data\",tableList.data)\n\n          tableList.data.forEach(function (item, index) {\n            if (item.selectionChoosed) {\n              choosedRowIndexArray.push(index);\n            }\n          });\n          if (!choosedRowIndexArray.length) return;\n          choosedRowIndexArray.forEach(function (rowDataIndex) {\n            tableList.toggleRowSelection(tableList.data[rowDataIndex]);\n          });\n        }\n\n        clearTimeout(timerId);\n      }, 200);\n    },\n    afterRequest: function afterRequest(data) {\n      if (!data || !data.content) return;\n\n      if (!data.content instanceof Array) {\n        return;\n      }\n\n      var that = this;\n\n      if (that.hasCheckBox.length) {\n        data.content.map(function (item) {\n          that.hasCheckBox.forEach(function (checkBoxOperatorItem) {\n            item[checkBoxOperatorItem.prop + \"Check\"] = item[checkBoxOperatorItem.prop + \"Check\"] ? item[checkBoxOperatorItem.prop + \"Check\"] : false;\n          });\n          return item;\n        });\n      }\n\n      return data;\n    },\n    chooseAllClick: function chooseAllClick(data, operate) {\n      //console.log(data,operate);\n      if (this.tableListConfig.chooseAllClick && typeof this.tableListConfig.chooseAllClick === \"function\") {\n        this.tableListConfig.chooseAllClick(data, this.$refs.tableList_0[0].data);\n      }\n    },\n    operateClick: function operateClick(data, operate) {\n      //console.log(data,operate);\n      var that = this; //content.filter(item=>item[operate.prop+'Check'])\n\n      this.$nextTick(function () {\n        var result = operate[\"click\"] && operate[\"click\"](data, operate, this.tableDataSource.content.filter(function (item) {\n          return item[operate.prop + \"Check\"];\n        }));\n\n        if (result) {\n          console.log(\"operateClick\", result);\n\n          if (result instanceof _Promise) {\n            result.then(function (success) {\n              that.queryListByPager();\n            }, function (error) {});\n          }\n        }\n      });\n    },\n    headerClick: function headerClick(column, param) {\n      console.log(\"headerClick\", column, param); //column.label=column.label=='取消'?'全选':'取消';\n\n      column.checkedStyle = {\n        width: \"100%\",\n        display: \"inline-block\",\n        height: \"100%\",\n        textAlign: \"center\",\n        backgroundColor: \"rgba(\" + Math.ceil(Math.random() * 255) + \",\" + Math.ceil(Math.random() * 255) + \",\" + Math.ceil(Math.random() * 255) + \",1)\",\n        color: \"#fff\"\n      };\n\n      if (this.tableListConfig.headerClick && typeof this.tableListConfig.headerClick == \"function\") {\n        this.tableListConfig.headerClick(column, param, this.tableDataSource);\n      }\n    },\n    renderHeader: function renderHeader(h, params) {\n      //console.log(\"renderHeaderh  \",h,params)\n      return h(\"span\", {\n        classs: [params.column.checkedStyle || \"\"],\n        style: params.column.checkedStyle || {\n          backgroundColor: \"#f00\",\n          width: \"100%\",\n          display: \"inline-block\",\n          height: \"100%\",\n          textAlign: \"center\",\n          color: \"#fff\"\n        },\n        attrs: {\n          type: \"checkbox\",\n          checked: true\n        }\n      }, params.column.label);\n      return h(\"input\", {\n        classs: {\n          A: true,\n          B: true\n        },\n        style: {\n          backgroundColor: \"#f00\",\n          //width:'100%',\n          display: \"inline-block\",\n          // height:'100%',\n          textAlign: \"center\",\n          color: \"#fff\"\n        },\n        attrs: {\n          type: \"checkbox\",\n          checked: true\n        }\n      }, params.column.label);\n    },\n    tableRowClassName: function tableRowClassName(_ref) {\n      var row = _ref.row,\n          rowIndex = _ref.rowIndex;\n      //console.log(\"row, rowIndex\",row, rowIndex)\n\n      /*if (rowIndex === 0) {\n                    return 'warning-row';\n                } else if (rowIndex === 3) {\n                    return 'success-row';\n                }*/\n      return \"\";\n    },\n    headerRowClassName: function headerRowClassName(_ref2) {\n      var row = _ref2.row,\n          rowIndex = _ref2.rowIndex;\n      return \"defaultHeader\";\n    },\n    filterMethod: function filterMethod(value, row, column) {\n      //console.log(value, row, column);\n      return !value.used;\n    },\n    getContextIndex: function getContextIndex(index) {\n      //console.log(\"index\",index,this.tableListConfig.pager.pageSize)\n      var pageSize = this.tableListConfig.pager.pageSize;\n      var splitPageSize = (pageSize - pageSize % this.tableListConfig.splitTables) / this.tableListConfig.splitTables; //console.log(\"splitPageSize\",splitPageSize,index*splitPageSize+(index>0?1:0),(index+1)*splitPageSize,splitPageSize+(index==0?pageSize%this.tableListConfig.splitTables:0))\n\n      var dataCopy = JSON.parse(_JSON$stringify(this.tableDataSource.content || []));\n      dataCopy = dataCopy.map(function (item, index) {\n        if (item) {\n          item[\"_table_row_seq\"] = index + 1;\n          return item;\n        }\n      }).filter(function (item) {\n        return item != null;\n      }); //console.log(\"dataCopy\",dataCopy)\n\n      var offset = pageSize % this.tableListConfig.splitTables;\n      var tabelData = dataCopy.splice(index * splitPageSize + (index != 0 ? offset : 0), splitPageSize + (index == 0 ? offset : 0)); //console.log(\"tabelData\",tabelData)\n\n      return tabelData;\n    },\n    cellStyle: function cellStyle() {\n      //console.log(params)\n      return {\n        backgroundColor: \"#f00\"\n      };\n    }\n  },\n  created: function created() {\n    var that = this;\n    this.context = that;\n    this.tableListConfig = this.$attrs.tableListConfig;\n    var readonly = this.$attrs.readData || {};\n    that.readonly = readonly;\n    if (!this.tableListConfig.url) return;\n\n    if (this.tableListConfig.operator && this.tableListConfig.operator.columns) {\n      this.hasCheckBox = this.tableListConfig.operator.columns.filter(function (item) {\n        return item.type == \"checkbox\";\n      });\n    }\n\n    that.$watch(\"$attrs.tableListConfig\", function (newValue, oldValue) {\n      this.tableListConfig = newValue;\n    }, {\n      deep: true\n    });\n  }\n};",{"version":3,"sources":["tableListComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA,OAAA,cAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AAAA,QAAA,OAAA,EAAA,CAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OADA;AAEA,MAAA,eAAA,EAAA;AACA,QAAA,OAAA,EAAA,EADA;AAEA,QAAA,SAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA;AAAA,UAAA,KAAA,EAAA,GAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAHA;AAIA,QAAA,GAAA,EAAA,EAJA;AAKA,QAAA,WAAA,EAAA,CALA;AAMA,QAAA,MAAA,EAAA,IANA;AAOA,QAAA,UAAA,EAAA;AAPA,OAFA;AAWA,MAAA,WAAA,EAAA,EAXA;AAYA,MAAA,eAAA,EAAA;AACA,QAAA,QAAA,EAAA;AADA,OAZA;AAeA,MAAA,QAAA,EAAA,EAfA;AAgBA,MAAA,OAAA,EAAA,IAhBA;AAiBA,MAAA,cAAA,EAAA;AAjBA,KAAA;AAmBA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,qBAAA,MAAA,EAAA,KAAA,EAAA;AACA,WAAA,GAAA,IAAA,KAAA,SAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,aAAA,SAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,OAAA;AACA;AACA,KALA;AAMA,IAAA,gBANA,4BAMA,OANA,EAMA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,WAAA,GAAA,KAAA,MAAA;AAEA,UAAA,SAAA,GAAA;AACA,QAAA,OAAA,EAAA,IAAA,CAAA,UAAA,CAAA,OADA;AAEA,QAAA,QAAA,EAAA,IAAA,CAAA,UAAA,CAAA;AAFA,OAAA;AAKA,MAAA,SAAA,GAAA,eAAA,SAAA,EAAA,IAAA,CAAA,eAAA,CAAA,KAAA,CAAA;AAEA,UAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;AACA,MAAA,WAAA,CAAA,QAAA,GACA,WAAA,CAAA,eAAA,CAAA,KAAA,CAAA,QAAA,IAAA,IAAA,CAAA,UAAA,CAAA,QADA;;AAGA,UAAA,WAAA,CAAA,SAAA,EAAA;AACA,QAAA,WAAA,CAAA,WAAA,CAAA,GACA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,KAAA,EAAA,GACA,EADA,GAEA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,CAHA;AAIA,QAAA,WAAA,CAAA,SAAA,CAAA,GACA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,KAAA,EAAA,GACA,EADA,GAEA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,CAHA;AAIA,eAAA,WAAA,CAAA,WAAA,CAAA;AACA;;AAEA,UAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,WAAA,EAAA;AACA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,WAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA,WAAA,CAAA,IAAA,CAAA;AACA,SAFA;AAGA,eAAA,WAAA,CAAA,aAAA,CAAA;AACA;;AACA,MAAA,WAAA,CAAA,OAAA,GAAA,OAAA;AAEA,MAAA,SAAA,GAAA,eAAA,SAAA,EAAA,WAAA,CAAA;AACA,MAAA,cAAA,CACA,OADA,CACA;AACA,QAAA,GAAA,EAAA,WAAA,CAAA,eAAA,CAAA,GADA;AAEA,QAAA,MAAA,EAAA,WAAA,CAAA,eAAA,CAAA,MAAA,IAAA,MAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OADA,EAMA,IANA,CAMA,UAAA,MAAA,EAAA;AACA,YAAA,CAAA,MAAA,EAAA;AACA,cACA,OAAA,WAAA,CAAA,eAAA,CAAA,eAAA,IAAA,UADA,EAEA;AACA,gBAAA,UAAA,GAAA,WAAA,CAAA,eAAA,CAAA,eAAA,CACA,MADA,CAAA;;AAGA,gBAAA,UAAA,oBAAA,EAAA;AACA,cAAA,UAAA,CAAA,IAAA,CACA,UAAA,OAAA,EAAA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA;AACA,gBAAA,IAAA,CAAA,eAAA,GAAA,OAAA,CAAA,IAAA;AACA,eAJA,EAKA,UAAA,KAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA;AACA,eAPA;AASA,aAVA,MAUA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,UAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,UAAA;AACA,cAAA,IAAA,CAAA,eAAA,GAAA,UAAA;AACA;AACA,WArBA,MAqBA;AACA,YAAA,IAAA,CAAA,eAAA,GAAA,EAAA;AACA,YAAA,IAAA,CAAA,QAAA,CAAA;AACA,cAAA,OAAA,EAAA,QADA;AAEA,cAAA,IAAA,EAAA;AAFA,aAAA;AAIA;;AACA;AACA;;AACA,YAAA,MAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,cACA,OAAA,WAAA,CAAA,eAAA,CAAA,eAAA,IAAA,UADA,EAEA;AACA,gBAAA,WAAA,GAAA,WAAA,CAAA,eAAA,CAAA,eAAA,CACA,MAAA,CAAA,IADA,CAAA;;AAGA,gBAAA,WAAA,oBAAA,EAAA;AACA,cAAA,WAAA,CAAA,IAAA,CACA,UAAA,OAAA,EAAA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA;AACA,gBAAA,IAAA,CAAA,eAAA,GAAA,OAAA,CAAA,IAAA;AACA,gBAAA,IAAA,CAAA,KAAA,CAAA,WAAA,IACA,IAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CADA;AAEA,eANA,EAOA,UAAA,KAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA;AACA,eATA;AAWA,aAZA,MAYA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,WAAA;AACA,cAAA,IAAA,CAAA,eAAA,GAAA,WAAA;AACA,cAAA,IAAA,CAAA,KAAA,CAAA,WAAA,IACA,IAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CADA;AAEA;AACA,WAxBA,MAwBA;AACA,YAAA,IAAA,CAAA,YAAA,CAAA,MAAA,CAAA,IAAA;AACA,YAAA,IAAA,CAAA,eAAA,GAAA,MAAA,CAAA,IAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,WAAA,IACA,IAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CADA;AAEA;AACA,SA/BA,MA+BA;AACA,cACA,OAAA,WAAA,CAAA,eAAA,CAAA,eAAA,IAAA,UADA,EAEA;AACA,gBAAA,YAAA,GAAA,WAAA,CAAA,eAAA,CAAA,eAAA,CACA,MAAA,CAAA,IADA,CAAA;;AAGA,gBAAA,YAAA,oBAAA,EAAA;AACA,cAAA,YAAA,CAAA,IAAA,CACA,UAAA,OAAA,EAAA;AACA,gBAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA;AACA,gBAAA,IAAA,CAAA,eAAA,GAAA,OAAA,CAAA,IAAA;AACA,eAJA,EAKA,UAAA,KAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA;AACA,eAPA;AASA,aAVA,MAUA;AACA,cAAA,IAAA,CAAA,YAAA,CAAA,YAAA;AACA,cAAA,IAAA,CAAA,eAAA,GAAA,YAAA;AACA;AACA,WApBA,MAoBA;AACA,YAAA,IAAA,CAAA,eAAA,GAAA,EAAA;AACA;AACA;AACA,OA9FA;AA+FA,KA1IA;AA2IA,IAAA,kBA3IA,8BA2IA,SA3IA,EA2IA;AACA,UAAA,CAAA,SAAA,EAAA;AACA,UAAA,OAAA,GAAA,UAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,SAAA,CAAA,IAAA,EAAA;AACA,cAAA,oBAAA,GAAA,EAAA,CADA,CAEA;;AACA,UAAA,SAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,gBAAA,IAAA,CAAA,gBAAA,EAAA;AACA,cAAA,oBAAA,CAAA,IAAA,CAAA,KAAA;AACA;AACA,WAJA;AAMA,cAAA,CAAA,oBAAA,CAAA,MAAA,EAAA;AAEA,UAAA,oBAAA,CAAA,OAAA,CAAA,UAAA,YAAA,EAAA;AACA,YAAA,SAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,IAAA,CAAA,YAAA,CAAA;AACA,WAFA;AAGA;;AACA,QAAA,YAAA,CAAA,OAAA,CAAA;AACA,OAjBA,EAiBA,GAjBA,CAAA;AAkBA,KA/JA;AAgKA,IAAA,YAhKA,wBAgKA,IAhKA,EAgKA;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA;;AACA,UAAA,CAAA,IAAA,CAAA,OAAA,YAAA,KAAA,EAAA;AACA;AACA;;AACA,UAAA,IAAA,GAAA,IAAA;;AACA,UAAA,IAAA,CAAA,WAAA,CAAA,MAAA,EAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,WAAA,CAAA,OAAA,CAAA,UAAA,oBAAA,EAAA;AACA,YAAA,IAAA,CAAA,oBAAA,CAAA,IAAA,GAAA,OAAA,CAAA,GAAA,IAAA,CACA,oBAAA,CAAA,IAAA,GAAA,OADA,CAAA,GAGA,IAAA,CAAA,oBAAA,CAAA,IAAA,GAAA,OAAA,CAHA,GAIA,KAJA;AAKA,WANA;AAOA,iBAAA,IAAA;AACA,SATA;AAUA;;AACA,aAAA,IAAA;AACA,KAnLA;AAoLA,IAAA,cAAA,EAAA,wBAAA,IAAA,EAAA,OAAA,EAAA;AACA;AACA,UACA,KAAA,eAAA,CAAA,cAAA,IACA,OAAA,KAAA,eAAA,CAAA,cAAA,KAAA,UAFA,EAGA;AACA,aAAA,eAAA,CAAA,cAAA,CACA,IADA,EAEA,KAAA,KAAA,CAAA,WAAA,CAAA,CAAA,EAAA,IAFA;AAIA;AACA,KA/LA;AAgMA,IAAA,YAAA,EAAA,sBAAA,IAAA,EAAA,OAAA,EAAA;AACA;AACA,UAAA,IAAA,GAAA,IAAA,CAFA,CAEA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,YAAA,MAAA,GACA,OAAA,CAAA,OAAA,CAAA,IACA,OAAA,CAAA,OAAA,CAAA,CACA,IADA,EAEA,OAFA,EAGA,KAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,iBAAA,IAAA,CAAA,OAAA,CAAA,IAAA,GAAA,OAAA,CAAA;AAAA,SADA,CAHA,CAFA;;AASA,YAAA,MAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA,MAAA;;AACA,cAAA,MAAA,oBAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CACA,UAAA,OAAA,EAAA;AACA,cAAA,IAAA,CAAA,gBAAA;AACA,aAHA,EAIA,UAAA,KAAA,EAAA,CAAA,CAJA;AAMA;AACA;AACA,OArBA;AAsBA,KAzNA;AA0NA,IAAA,WAAA,EAAA,qBAAA,MAAA,EAAA,KAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,EAAA,MAAA,EAAA,KAAA,EADA,CAEA;;AACA,MAAA,MAAA,CAAA,YAAA,GAAA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,OAAA,EAAA,cAFA;AAGA,QAAA,MAAA,EAAA,MAHA;AAIA,QAAA,SAAA,EAAA,QAJA;AAKA,QAAA,eAAA,EACA,UACA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CADA,GAEA,GAFA,GAGA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAHA,GAIA,GAJA,GAKA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CALA,GAMA,KAZA;AAaA,QAAA,KAAA,EAAA;AAbA,OAAA;;AAeA,UACA,KAAA,eAAA,CAAA,WAAA,IACA,OAAA,KAAA,eAAA,CAAA,WAAA,IAAA,UAFA,EAGA;AACA,aAAA,eAAA,CAAA,WAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,eAAA;AACA;AACA,KAlPA;AAmPA,IAAA,YAnPA,wBAmPA,CAnPA,EAmPA,MAnPA,EAmPA;AACA;AACA,aAAA,CAAA,CACA,MADA,EAEA;AACA,QAAA,MAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,YAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,YAAA,IAAA;AACA,UAAA,eAAA,EAAA,MADA;AAEA,UAAA,KAAA,EAAA,MAFA;AAGA,UAAA,OAAA,EAAA,cAHA;AAIA,UAAA,MAAA,EAAA,MAJA;AAKA,UAAA,SAAA,EAAA,QALA;AAMA,UAAA,KAAA,EAAA;AANA,SAFA;AAUA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,OAAA,EAAA;AAFA;AAVA,OAFA,EAiBA,MAAA,CAAA,MAAA,CAAA,KAjBA,CAAA;AAmBA,aAAA,CAAA,CACA,OADA,EAEA;AACA,QAAA,MAAA,EAAA;AAAA,UAAA,CAAA,EAAA,IAAA;AAAA,UAAA,CAAA,EAAA;AAAA,SADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,eAAA,EAAA,MADA;AAEA;AACA,UAAA,OAAA,EAAA,cAHA;AAIA;AACA,UAAA,SAAA,EAAA,QALA;AAMA,UAAA,KAAA,EAAA;AANA,SAFA;AAUA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,OAAA,EAAA;AAFA;AAVA,OAFA,EAiBA,MAAA,CAAA,MAAA,CAAA,KAjBA,CAAA;AAmBA,KA3RA;AA4RA,IAAA,iBA5RA,mCA4RA;AAAA,UAAA,GAAA,QAAA,GAAA;AAAA,UAAA,QAAA,QAAA,QAAA;AACA;;AACA;;;;;AAKA,aAAA,EAAA;AACA,KApSA;AAqSA,IAAA,kBArSA,qCAqSA;AAAA,UAAA,GAAA,SAAA,GAAA;AAAA,UAAA,QAAA,SAAA,QAAA;AACA,aAAA,eAAA;AACA,KAvSA;AAwSA,IAAA,YAxSA,wBAwSA,KAxSA,EAwSA,GAxSA,EAwSA,MAxSA,EAwSA;AACA;AACA,aAAA,CAAA,KAAA,CAAA,IAAA;AACA,KA3SA;AA4SA,IAAA,eA5SA,2BA4SA,KA5SA,EA4SA;AACA;AACA,UAAA,QAAA,GAAA,KAAA,eAAA,CAAA,KAAA,CAAA,QAAA;AACA,UAAA,aAAA,GACA,CAAA,QAAA,GAAA,QAAA,GAAA,KAAA,eAAA,CAAA,WAAA,IACA,KAAA,eAAA,CAAA,WAFA,CAHA,CAMA;;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CACA,gBAAA,KAAA,eAAA,CAAA,OAAA,IAAA,EAAA,CADA,CAAA;AAGA,MAAA,QAAA,GAAA,QAAA,CACA,GADA,CACA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,gBAAA,CAAA,GAAA,KAAA,GAAA,CAAA;AACA,iBAAA,IAAA;AACA;AACA,OANA,EAOA,MAPA,CAOA,UAAA,IAAA;AAAA,eAAA,IAAA,IAAA,IAAA;AAAA,OAPA,CAAA,CAVA,CAkBA;;AACA,UAAA,MAAA,GAAA,QAAA,GAAA,KAAA,eAAA,CAAA,WAAA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,MAAA,CACA,KAAA,GAAA,aAAA,IAAA,KAAA,IAAA,CAAA,GAAA,MAAA,GAAA,CAAA,CADA,EAEA,aAAA,IAAA,KAAA,IAAA,CAAA,GAAA,MAAA,GAAA,CAAA,CAFA,CAAA,CApBA,CAwBA;;AACA,aAAA,SAAA;AACA,KAtUA;AAuUA,IAAA,SAvUA,uBAuUA;AACA;AACA,aAAA;AACA,QAAA,eAAA,EAAA;AADA,OAAA;AAGA;AA5UA,GAxBA;AAsWA,EAAA,OAAA,EAAA,mBAAA;AACA,QAAA,IAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,IAAA;AACA,SAAA,eAAA,GAAA,KAAA,MAAA,CAAA,eAAA;AACA,QAAA,QAAA,GAAA,KAAA,MAAA,CAAA,QAAA,IAAA,EAAA;AACA,IAAA,IAAA,CAAA,QAAA,GAAA,QAAA;AACA,QAAA,CAAA,KAAA,eAAA,CAAA,GAAA,EAAA;;AACA,QACA,KAAA,eAAA,CAAA,QAAA,IACA,KAAA,eAAA,CAAA,QAAA,CAAA,OAFA,EAGA;AACA,WAAA,WAAA,GAAA,KAAA,eAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,IAAA,UAAA;AAAA,OADA,CAAA;AAGA;;AACA,IAAA,IAAA,CAAA,MAAA,CACA,wBADA,EAEA,UAAA,QAAA,EAAA,QAAA,EAAA;AACA,WAAA,eAAA,GAAA,QAAA;AACA,KAJA,EAKA;AACA,MAAA,IAAA,EAAA;AADA,KALA;AASA;AA9XA,CAAA","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col\n        v-for=\"(item,index) in tableListConfig.splitTables\"\n        :span=\"24/tableListConfig.splitTables\"\n        :style=\"{\n                     paddingRight: tableListConfig.splitTables>1?(index==(tableListConfig.splitTables-1)?'0px':'5px'):'0px'\n                     }\"\n        :key=\"'_table_seq_'+index+'_'+tableListConfig.url\"\n      >\n        <el-table\n          :data=\"getContextIndex(index)\"\n          v-if=\"tableListConfig.splitTables==1||tableListConfig.splitTables>1&&getContextIndex(index).length\"\n          border\n          tooltip-effect=\"dark\"\n          :stripe=\"(tableListConfig.stripe==undefined?true:tableListConfig.stripe)\"\n          :show-header=\"tableListConfig.showHeader==undefined?true:tableListConfig.showHeader\"\n          @selection-change=\"chooseAllClick\"\n          @header-click=\"headerClick\"\n          :row-class-name=\"tableRowClassName\"\n          :header-row-class-name=\"headerRowClassName\"\n          :ref=\"'tableList_'+index\"\n          style=\"width: 100%\"\n        >\n          <el-table-column\n            type=\"selection\"\n            v-if=\"tableListConfig.selection\"\n            :selectable=\"filterMethod\"\n          ></el-table-column>\n          <el-table-column\n            v-for=\"(column,columnIndex) in tableListConfig.columns\"\n            :key=\"column.prop+'_'+columnIndex+'_'+index\"\n            :width=\"column.width?(column.width=='auto'?'':column.width):80\"\n            :prop=\"column.prop\"\n            v-if=\"column.viewHandler?column.viewHandler(column,$parent.queryParam,$parent.readonly,context):true\"\n            :label=\"column.label\"\n          >\n            <template slot-scope=\"scope\">\n              <span\n                v-if=\"column.type==null||column.type==''\"\n                @click=\"column['click']&&column['click'](scope.row,column,$event,context)\"\n              >\n                <span\n                  v-if=\"column.html\"\n                  v-html=\"column['columnHandler']&&typeof column.columnHandler=='function'?column.columnHandler(scope.row[column.prop],scope.row,column,context):column.columnHandler\"\n                ></span>\n                <span\n                  v-else\n                >{{column[\"columnHandler\"]&&typeof column.columnHandler==\"function\"?column.columnHandler(scope.row[column.prop],scope.row,context):scope.row[column.prop]}}</span>\n              </span>\n              <input\n                v-if=\"column.type=='input'\"\n                @keyup.enter=\"column['enter']&&column['enter']($event,scope.row,column)\"\n                @blur=\"column['blur']&&column['blur']($event,scope.row,column)\"\n                style=\"line-height: 30px;width: 100%;\"\n                v-model=\"scope.row[column.prop]\"\n                @change=\"column['change']&&column['change']($event,scope.row,column)\"\n              >\n              <input\n                v-if=\"column.type=='checkbox'\"\n                @click=\"column['click']&&column['click']($event,scope.row)\"\n                @change=\"column['change']&&column['change']($event,scope.row)\"\n                v-model=\"scope.row.checked\"\n                type=\"checkbox\"\n              >\n              <a\n                v-if=\"column.type=='href'\"\n                :href=\"scope.row[column.prop]\"\n                target=\"_blank\"\n                style=\"cursor: pointer;color: blue;\"\n                title=\"点击看看\"\n              >{{scope.row[column.prop]}}</a>\n              <input\n                v-if=\"column.type=='sortOrder'\"\n                type=\"number\"\n                v-model=\"scope.row[column.prop]\"\n                @change=\"column['change']&&column['change']($event,scope.row)\"\n                style=\"max-width: 40px;\"\n                alt\n              >\n              <label\n                v-if=\"column.type=='diy'\"\n                @click=\"column['click']&&column['click']($event,scope.row)\"\n              >{{column.diy&&column.diy(scope.row)}}</label>\n              <span v-if=\"(column.type=='image'||column.type=='img')&&scope.row[column.prop]\">\n                <img\n                  v-for=\"img in (scope.row[column.prop]+''||'').split(',')\"\n                  @click=\"column['click']&&column['click']($event,scope.row,img,scope.row[column.prop])\"\n                  :src=\"img\"\n                  :key=\"'img_'+img\"\n                  v-if=\"img\"\n                  style=\"max-width: 80px;vertical-align: middle;margin: 5px;\"\n                  alt\n                >\n              </span>\n              <span v-if=\"column.type=='element'\">\n                <async-element\n                  :config=\"{columnConfig:column.elementConfig,propValue:scope.row[column.prop],rowData:scope.row,column}||{aa:12}\"\n                >\n                  <slot name=\"listInfo\"></slot>\n                </async-element>\n              </span>\n            </template>\n          </el-table-column>\n          <el-table-column\n            fixed=\"right\"\n            :width=\"tableListConfig.operator.width?(tableListConfig.operator.width=='auto'?'':tableListConfig.operator.width):80\"\n            v-if=\"tableListConfig.operator.columns&&tableListConfig.operator.columns.length>0\"\n            :label=\"tableListConfig.operator.label||'操作'\"\n            :key=\"tableListConfig.url\"\n          >\n            <template slot-scope=\"scope\">\n              <div class=\"operateBtnContainer\">\n                <label\n                  :for=\"'checkbox_'+scope.row.id+operate.prop\"\n                  :style=\"scope.row[operate.prop+'Check']?operate.checkedStyle:(operate.styleHandler&&operate.styleHandler(scope.row[operate.prop],scope.row)||operate.style)\"\n                  v-if=\"\n                                       operate.viewHandler&&operate.viewHandler(operate,scope.row,$parent.queryParam,$parent.readonly,context)||\n                                       operate.viewHandler==null\n                                   \"\n                  v-for=\"(operate,operatIndex) in tableListConfig.operator.columns\"\n                  :key=\"operate.prop+'_'+operate.label+operatIndex+'_'+'_labelKey_'+(scope.row.id||scope.row.code)\"\n                  :class=\"[{'operateBtn':true}]\"\n                  @click=\"operate.type!='checkbox'?operateClick(scope.row,operate):''\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    v-if=\"operate.type=='checkbox'\"\n                    style=\"display: none;\"\n                    :id=\"'checkbox_'+scope.row.id+operate.prop\"\n                    v-model=\"scope.row['idCheck']\"\n                    @change=\"operate.type=='checkbox'?operateClick(scope.row,operate):''\"\n                  >\n                  <span\n                    v-if=\"!operate.viewHandler\"\n                  >{{(!scope.row[operate.prop+'Check'])?operate.label:(operate.cancleLabel||'取消')}}{{operate.map&&operate.map[scope.row[operate.prop]]}}</span>\n                  <span\n                    v-if=\"operate.viewHandler\"\n                  >{{operate.viewHandler(operate,scope.row,$parent.queryParam,$parent.readonly,context)}}</span>\n                </label>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-col>\n    </el-row>\n    <div class=\"block\">\n      <el-pagination\n        v-if=\"tableDataSource.total\"\n        layout=\"prev, pager, next\"\n        :total=\"tableDataSource.total\"\n        :page-size=\"tableDataSource.size\"\n        :current-page=\"tableDataSource.number\"\n        @current-change=\"queryListByPager\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport backendService from \"../remoteService/backendService\";\n\nexport default {\n  name: \"table-list\",\n  props: {},\n  data: function() {\n    return {\n      queryParam: { pageNum: 1, pageSize: 20 },\n      tableListConfig: {\n        columns: [],\n        watchProp: \"\",\n        operator: { width: 200, columns: [] },\n        url: \"\",\n        splitTables: 1,\n        stripe: true,\n        showHeader: true\n      },\n      hasCheckBox: [],\n      tableDataSource: {\n        dataList: []\n      },\n      readonly: {},\n      context: null,\n      backendService: backendService\n    };\n  },\n  methods: {\n    batchChoose: function($event, param) {\n      for (key in this.tableData.data.dataList) {\n        this.tableData.data.dataList[key].checked = $event.target.checked;\n      }\n    },\n    queryListByPager(pageNum) {\n      let that = this;\n      let arrtsConfig = this.$attrs;\n\n      let baseParam = {\n        pageNum: that.queryParam.pageNum,\n        pageSize: that.queryParam.pageSize\n      };\n\n      baseParam = Object.assign(baseParam, that.tableListConfig.query);\n\n      let submitParam = JSON.parse(JSON.stringify(that.$parent.queryParam));\n      submitParam.pageSize =\n        arrtsConfig.tableListConfig.pager.pageSize || that.queryParam.pageSize;\n\n      if (submitParam.timeRange) {\n        submitParam[\"startTime\"] =\n          that.$parent.queryParam.timeRange[0] == \"\"\n            ? \"\"\n            : that.$parent.queryParam.timeRange[0];\n        submitParam[\"endTime\"] =\n          that.$parent.queryParam.timeRange[1] == \"\"\n            ? \"\"\n            : that.$parent.queryParam.timeRange[1];\n        delete submitParam[\"timeRange\"];\n      }\n\n      if (that.$parent.queryParam.deleteProps) {\n        //console.log(that.queryParam.deleteProps)\n        that.$parent.queryParam.deleteProps.forEach(item => {\n          delete submitParam[item];\n        });\n        delete submitParam[\"deleteProps\"];\n      }\n      submitParam.pageNum = pageNum;\n\n      baseParam = Object.assign(baseParam, submitParam);\n      backendService\n        .getData({\n          url: arrtsConfig.tableListConfig.url,\n          method: arrtsConfig.tableListConfig.method || \"post\",\n          data: baseParam\n        })\n        .then(function(result) {\n          if (!result) {\n            if (\n              typeof arrtsConfig.tableListConfig.errorDataHelper == \"function\"\n            ) {\n              let dealResult = arrtsConfig.tableListConfig.errorDataHelper(\n                result\n              );\n              if (dealResult instanceof Promise) {\n                dealResult.then(\n                  success => {\n                    that.afterRequest(success.data);\n                    that.tableDataSource = success.data;\n                  },\n                  error => {\n                    console.log(\"失败!!!!!!!\", error);\n                  }\n                );\n              } else {\n                that.afterRequest(dealResult);\n                console.log(\"dealResult\", dealResult);\n                that.tableDataSource = dealResult;\n              }\n            } else {\n              that.tableDataSource = [];\n              that.$message({\n                message: \"服务器错误!\",\n                type: \"error\"\n              });\n            }\n            return;\n          }\n          if (result.code == \"1\") {\n            if (\n              typeof arrtsConfig.tableListConfig.pagerDataHelper == \"function\"\n            ) {\n              let dealResult = arrtsConfig.tableListConfig.pagerDataHelper(\n                result.data\n              );\n              if (dealResult instanceof Promise) {\n                dealResult.then(\n                  success => {\n                    that.afterRequest(success.data);\n                    that.tableDataSource = success.data;\n                    that.$refs.tableList_0 &&\n                      that.toggleRowSelection(that.$refs.tableList_0[0]);\n                  },\n                  error => {\n                    console.log(\"失败!!!!!!!\", error);\n                  }\n                );\n              } else {\n                that.afterRequest(dealResult);\n                that.tableDataSource = dealResult;\n                that.$refs.tableList_0 &&\n                  that.toggleRowSelection(that.$refs.tableList_0[0]);\n              }\n            } else {\n              that.afterRequest(result.data);\n              that.tableDataSource = result.data;\n              that.$refs.tableList_0 &&\n                that.toggleRowSelection(that.$refs.tableList_0[0]);\n            }\n          } else {\n            if (\n              typeof arrtsConfig.tableListConfig.errorDataHelper == \"function\"\n            ) {\n              let dealResult = arrtsConfig.tableListConfig.errorDataHelper(\n                result.data\n              );\n              if (dealResult instanceof Promise) {\n                dealResult.then(\n                  success => {\n                    that.afterRequest(success.data);\n                    that.tableDataSource = success.data;\n                  },\n                  error => {\n                    console.log(\"失败!!!!!!!\", error);\n                  }\n                );\n              } else {\n                that.afterRequest(dealResult);\n                that.tableDataSource = dealResult;\n              }\n            } else {\n              that.tableDataSource = [];\n            }\n          }\n        });\n    },\n    toggleRowSelection(tableList) {\n      if (!tableList) return;\n      let timerId = setTimeout(data => {\n        if (tableList.data) {\n          let choosedRowIndexArray = [];\n          //console.log(\"tableList.data\",tableList.data)\n          tableList.data.forEach((item, index) => {\n            if (item.selectionChoosed) {\n              choosedRowIndexArray.push(index);\n            }\n          });\n\n          if (!choosedRowIndexArray.length) return;\n\n          choosedRowIndexArray.forEach(rowDataIndex => {\n            tableList.toggleRowSelection(tableList.data[rowDataIndex]);\n          });\n        }\n        clearTimeout(timerId);\n      }, 200);\n    },\n    afterRequest(data) {\n      if (!data || !data.content) return;\n      if (!data.content instanceof Array) {\n        return;\n      }\n      let that = this;\n      if (that.hasCheckBox.length) {\n        data.content.map(item => {\n          that.hasCheckBox.forEach(checkBoxOperatorItem => {\n            item[checkBoxOperatorItem.prop + \"Check\"] = item[\n              checkBoxOperatorItem.prop + \"Check\"\n            ]\n              ? item[checkBoxOperatorItem.prop + \"Check\"]\n              : false;\n          });\n          return item;\n        });\n      }\n      return data;\n    },\n    chooseAllClick: function(data, operate) {\n      //console.log(data,operate);\n      if (\n        this.tableListConfig.chooseAllClick &&\n        typeof this.tableListConfig.chooseAllClick === \"function\"\n      ) {\n        this.tableListConfig.chooseAllClick(\n          data,\n          this.$refs.tableList_0[0].data\n        );\n      }\n    },\n    operateClick: function(data, operate) {\n      //console.log(data,operate);\n      let that = this; //content.filter(item=>item[operate.prop+'Check'])\n      this.$nextTick(function() {\n        let result =\n          operate[\"click\"] &&\n          operate[\"click\"](\n            data,\n            operate,\n            this.tableDataSource.content.filter(\n              item => item[operate.prop + \"Check\"]\n            )\n          );\n        if (result) {\n          console.log(\"operateClick\", result);\n          if (result instanceof Promise) {\n            result.then(\n              success => {\n                that.queryListByPager();\n              },\n              error => {}\n            );\n          }\n        }\n      });\n    },\n    headerClick: function(column, param) {\n      console.log(\"headerClick\", column, param);\n      //column.label=column.label=='取消'?'全选':'取消';\n      column.checkedStyle = {\n        width: \"100%\",\n        display: \"inline-block\",\n        height: \"100%\",\n        textAlign: \"center\",\n        backgroundColor:\n          \"rgba(\" +\n          Math.ceil(Math.random() * 255) +\n          \",\" +\n          Math.ceil(Math.random() * 255) +\n          \",\" +\n          Math.ceil(Math.random() * 255) +\n          \",1)\",\n        color: \"#fff\"\n      };\n      if (\n        this.tableListConfig.headerClick &&\n        typeof this.tableListConfig.headerClick == \"function\"\n      ) {\n        this.tableListConfig.headerClick(column, param, this.tableDataSource);\n      }\n    },\n    renderHeader(h, params) {\n      //console.log(\"renderHeaderh  \",h,params)\n      return h(\n        \"span\",\n        {\n          classs: [params.column.checkedStyle || \"\"],\n          style: params.column.checkedStyle || {\n            backgroundColor: \"#f00\",\n            width: \"100%\",\n            display: \"inline-block\",\n            height: \"100%\",\n            textAlign: \"center\",\n            color: \"#fff\"\n          },\n          attrs: {\n            type: \"checkbox\",\n            checked: true\n          }\n        },\n        params.column.label\n      );\n      return h(\n        \"input\",\n        {\n          classs: { A: true, B: true },\n          style: {\n            backgroundColor: \"#f00\",\n            //width:'100%',\n            display: \"inline-block\",\n            // height:'100%',\n            textAlign: \"center\",\n            color: \"#fff\"\n          },\n          attrs: {\n            type: \"checkbox\",\n            checked: true\n          }\n        },\n        params.column.label\n      );\n    },\n    tableRowClassName({ row, rowIndex }) {\n      //console.log(\"row, rowIndex\",row, rowIndex)\n      /*if (rowIndex === 0) {\n                    return 'warning-row';\n                } else if (rowIndex === 3) {\n                    return 'success-row';\n                }*/\n      return \"\";\n    },\n    headerRowClassName({ row, rowIndex }) {\n      return \"defaultHeader\";\n    },\n    filterMethod(value, row, column) {\n      //console.log(value, row, column);\n      return !value.used;\n    },\n    getContextIndex(index) {\n      //console.log(\"index\",index,this.tableListConfig.pager.pageSize)\n      let pageSize = this.tableListConfig.pager.pageSize;\n      let splitPageSize =\n        (pageSize - (pageSize % this.tableListConfig.splitTables)) /\n        this.tableListConfig.splitTables;\n      //console.log(\"splitPageSize\",splitPageSize,index*splitPageSize+(index>0?1:0),(index+1)*splitPageSize,splitPageSize+(index==0?pageSize%this.tableListConfig.splitTables:0))\n      let dataCopy = JSON.parse(\n        JSON.stringify(this.tableDataSource.content || [])\n      );\n      dataCopy = dataCopy\n        .map((item, index) => {\n          if (item) {\n            item[\"_table_row_seq\"] = index + 1;\n            return item;\n          }\n        })\n        .filter(item => item != null);\n      //console.log(\"dataCopy\",dataCopy)\n      let offset = pageSize % this.tableListConfig.splitTables;\n      let tabelData = dataCopy.splice(\n        index * splitPageSize + (index != 0 ? offset : 0),\n        splitPageSize + (index == 0 ? offset : 0)\n      );\n      //console.log(\"tabelData\",tabelData)\n      return tabelData;\n    },\n    cellStyle(...params) {\n      //console.log(params)\n      return {\n        backgroundColor: \"#f00\"\n      };\n    }\n  },\n  created: function() {\n    let that = this;\n    this.context = that;\n    this.tableListConfig = this.$attrs.tableListConfig;\n    let readonly = this.$attrs.readData || {};\n    that.readonly = readonly;\n    if (!this.tableListConfig.url) return;\n    if (\n      this.tableListConfig.operator &&\n      this.tableListConfig.operator.columns\n    ) {\n      this.hasCheckBox = this.tableListConfig.operator.columns.filter(\n        item => item.type == \"checkbox\"\n      );\n    }\n    that.$watch(\n      \"$attrs.tableListConfig\",\n      function(newValue, oldValue) {\n        this.tableListConfig = newValue;\n      },\n      {\n        deep: true\n      }\n    );\n  }\n};\n</script>\n\n<style scoped>\n.operateBtnContainer {\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n}\n.operateBtnContainer > label {\n}\n.checkedClass {\n  background: #ff00ff !important;\n  color: #000 !important;\n}\n.el-table .warning-row {\n  background: oldlace !important;\n}\n\n.el-table .success-row {\n  background: #f0f9eb;\n}\n.defaultHeader th,\n.defaultHeader tr {\n  background: #eef1f6;\n}\n.noPadding {\n  padding: 0px !important;\n}\n</style>"],"sourceRoot":"src/components/tableList"}]}