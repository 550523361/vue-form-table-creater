{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/formCreater/createFormElement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/formCreater/createFormElement.vue","mtime":1553853483847},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$keys from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _JSON$stringify from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'create-form-element',\n  data: function data() {\n    return {\n      type: 'inputElement',\n      elementItemType: 'input',\n      config: {},\n      form: {},\n      items: [],\n      elementConfig: {\n        inputElement: {\n          name: '输入框',\n          input: {\n            name: '输入框有验证功能',\n            testProp: \"\\n                            {\\n                                label:'\\u5C5E\\u6027\\u540D\\u79F0',\\n                                type:'input',\\n                                placeholder:'\\u5C5E\\u6027\\u540D\\u79F0\\u5360\\u4F4D',\\n                                defaultValue:'',\\n                                value:'',\\n                                prop:'propName',\\n                                subText:'*\\u6700\\u591A15\\u4E2A\\u5B57',\\n                                span:18,\\n                                style:{\\n                                    display:'inline-block',\\n                                    width:'auto',\\n                                    minWidth:'400px'\\n                                    },\\n                                viewHandler(...params){\\n                                    console.log(...params)    \\n                                }    \\n                            },\\n                        \",\n            options: _JSON$stringify({\n              label: '属性名称',\n              type: 'input',\n              placeholder: '属性名称占位',\n              defaultValue: '',\n              value: '',\n              prop: 'propName',\n              subText: '*最多15个字',\n              span: 18,\n              style: {\n                display: 'inline-block',\n                width: 'auto',\n                minWidth: '400px'\n              },\n              validateRules: [{\n                required: true\n              }, {\n                validator: function validator(_validator, value, callback) {\n                  var errorMessage = validate.validator(value, {\n                    required: true,\n                    maxlength: 15\n                  });\n                  errorMessage.then(function (data) {\n                    if (data.code == 1) {\n                      callback();\n                    } else {\n                      callback(new Error(data.msg));\n                    }\n                  });\n                },\n                trigger: \"change\"\n              }]\n            }, null, 4)\n          },\n          datetimerange: {\n            name: '时间范围',\n            options: _JSON$stringify({\n              label: '时间范围',\n              type: 'datetimerange',\n              placeholder: '请选择开始和结束时间',\n              prop: 'timerange',\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          addInput: {\n            name: '回车输入框',\n            options: _JSON$stringify({\n              label: '公司标签',\n              prop: 'enterpriseLabels',\n              formData: [],\n              type: 'addInput',\n              dataBus: true,\n              validateRules: [{\n                required: true\n              }, {\n                validator: function validator(_validator2, value, callback) {\n                  //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n                  console.log(\"value\", value);\n\n                  if (value.split(\"||||\").length > 5) {\n                    callback(new Error(\"标签最多不能大于5个\"));\n                  } else {\n                    callback();\n                  }\n                  /*errorMessage.then(data=>{\n                      if(data.code==1){\n                          callback();\n                      }else{\n                          callback(new Error(data.msg));\n                      }\n                  })*/\n\n                },\n                trigger: \"change\"\n              }]\n            }, null, 4)\n          },\n          groupElementInput: {\n            name: '分组元素',\n            options: _JSON$stringify({\n              label: '身份证背面',\n              type: 'upload',\n              placeholder: '身份证背面',\n              groupedName: 'idCardGroup',\n              defaultValue: '',\n              value: '',\n              style: {\n                width: 'auto'\n              },\n              containerStyle: {\n                width: 'auto'\n              },\n              groupedStyle: {\n                display: 'flex',\n                flexDirection: 'row',\n                justContent: 'flex-start',\n                alignItems: 'center',\n                backgroundColor: 'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                width: '80%',\n                marginLeft: '10%',\n                padding: '20px 0px'\n              },\n              prop: 'cardBackUrl',\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          watchElement: {\n            name: '观察元素 依赖其它元素值动态切换显示隐藏',\n            options: _JSON$stringify({\n              label: '企业简介',\n              type: 'input',\n              placeholder: '企业简介',\n              defaultValue: '',\n              inputType: 'textarea',\n              rows: 3,\n              value: '',\n              prop: 'enterpriseIntroduction',\n              subText: '最多100个字',\n              span: 18,\n              style: {\n                display: 'inline-block',\n                width: 'auto',\n                minWidth: '400px'\n              },\n              validateRules: [{\n                required: true\n              }, {\n                validator: function validator(_validator3, value, callback) {\n                  var errorMessage = validate.validator(value, {\n                    required: true,\n                    maxlength: 100\n                  });\n                  errorMessage.then(function (data) {\n                    if (data.code == 1) {\n                      callback();\n                    } else {\n                      callback(new Error(data.msg));\n                    }\n                  });\n                },\n                trigger: \"change\"\n              }],\n              watch: {\n                props: [\"enterpriseName\"],\n                watchValue: {\n                  enterpriseName: {\n                    \"好好啊\": true,\n                    \"ccc\": true\n                  },\n                  dddd: function dddd() {\n                    var _console;\n\n                    for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {\n                      data[_key] = arguments[_key];\n                    }\n\n                    (_console = console).log.apply(_console, [\">>>>>\"].concat(data));\n\n                    return false;\n                  },\n                  ee: null\n                }\n              }\n            }, null, 4)\n          },\n          provinceCityCasede: {\n            name: '省市县级联选择',\n            options: _JSON$stringify({\n              label: '省市区',\n              prop: 'userAreaLocal',\n              cascaderOptions: [],\n              type: 'cascader',\n              itemLabel: 'label',\n              itemValue: 'areaId',\n              default: [],\n              span: 12,\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          multiLineInput: {\n            name: '多行文本输入框',\n            options: _JSON$stringify({\n              label: '详细地址',\n              type: 'input',\n              placeholder: '详细地址',\n              defaultValue: '',\n              inputType: 'textarea',\n              rows: 3,\n              value: '',\n              prop: 'userAddress',\n              subText: '最多100个字',\n              span: 18,\n              style: {\n                display: 'inline-block',\n                width: 'auto',\n                minWidth: '400px'\n              },\n              validateRules: [{\n                required: true\n              }, {\n                validator: function validator(_validator4, value, callback) {\n                  var errorMessage = validate.validator(value, {\n                    required: true,\n                    maxlength: 100\n                  });\n                  errorMessage.then(function (data) {\n                    if (data.code == 1) {\n                      callback();\n                    } else {\n                      callback(new Error(data.msg));\n                    }\n                  });\n                },\n                trigger: \"change\"\n              }]\n            }, null, 4)\n          },\n          rightBtnInput: {\n            name: '右侧有按钮的输入框',\n            options: _JSON$stringify({\n              label: '手机验证码',\n              type: 'input',\n              placeholder: '手机验证码',\n              defaultValue: '',\n              value: '',\n              prop: 'verificationCode',\n              subText: '*4位验证码',\n              rightBtn: \"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n              rightBtnClick: function rightBtnClick(data) {\n                return '';\n              },\n              span: 18,\n              style: {\n                display: 'inline-block',\n                width: 'auto',\n                minWidth: '250px'\n              },\n              validateRules: [{\n                required: true\n              }, {\n                validator: function validator(_validator5, value, callback) {\n                  var errorMessage = validate.validator(value, {\n                    required: true,\n                    maxlength: 4\n                  });\n                  errorMessage.then(function (data) {\n                    if (data.code == 1) {\n                      callback();\n                    } else {\n                      callback(new Error(data.msg));\n                    }\n                  });\n                },\n                trigger: \"change\"\n              }]\n            }, null, 4)\n          }\n        },\n        selectElement: {\n          name: '下拉选择',\n          selectInputFirst: {\n            name: '下拉选择',\n            options: _JSON$stringify({\n              label: '下拉选择跳转类型选择',\n              prop: 'select',\n              dataUrl: '/jump/getJumpType.json',\n              initQuery: true,\n              type: 'select',\n              casecadeChild: [],\n              casecadeGrandsonList: [],\n              dataHandler: \"(data)=>{\\n                                console.log(data)\\n                                data.data.map(item=>{\\n                                    item.label=item.desc;\\n                                    item.value=item.code;\\n                                    return item;\\n                                })\\n                                return data.data\\n                            }\",\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          selectInputSecond: {\n            name: '下拉选择有数据处理转换函数',\n            options: _JSON$stringify({\n              label: '应用选择',\n              prop: 'appId',\n              dataUrl: '/jump/getRobotApp.json',\n              initQuery: true,\n              type: 'select',\n              propList: 'appList',\n              casecadeChild: \"appFunction\",\n              casecadeGrandsonList: [],\n              dataHandler: \"(data)=>{\\n                                console.log(data)\\n                                if(data.data.length==0) return [];\\n                                data.data.map(item=>{\\n                                    item.label=item.appNameCn;\\n                                    item.value=item.appNameUs;\\n                                    return item;\\n                                })\\n                                return data.data\\n                            }\",\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          selectInputThird: {\n            name: '下拉选择有衍生元素模板',\n            options: _JSON$stringify({\n              label: '功能选择',\n              prop: 'appFunction',\n              propList: 'appFunctionList',\n              dataUrl: '/jump/getRobotAppTarget.json',\n              initQuery: false,\n              param: {\n                appNameUs: \"appNameUs\"\n              },\n              extendsProp: [\"appNameUs\"],\n              casecadeChild: \"\",\n              groupedName: 'jumpParams',\n              casecadeGrandsonList: [],\n              extendChild: {\n                dataUrl: '/jump/getParamTemplate.json',\n                method: 'post',\n                prop: 'appFunction',\n                dataHandler: \"(data,parent)=>{\\n                                    console.log(data,\\\">>>>\\\",parent)\\n                                    if(!data.data||data.data.length==0) return [];\\n                                    data.data.map((item,seq)=>{\\n                                        item.label=item.targetDesc;\\n                                        item.value=item.target;\\n                                        item.type='input';\\n                                        //item.inputType='textarea';\\n                                        //item.rows=5;\\n                                        item.label=item.paramLabel;\\n                                        item.groupedName='jumpParams';\\n                                        item.order=parent.order+1+seq;\\n                                        item.prop='temp_appFunction#'+item.paramName;\\n                                        item.validateRules=[\\n                                                                {\\n                                                                    required:true\\n                                                                },\\n                                                            ]\\n                                        return item;\\n                                    })\\n                                    return data.data\\n                                }\",\n                extendsProp: [\"target\"]\n              },\n              type: 'select',\n              dataHandler: \"(data)=>{\\n                                console.log(data)\\n                                data.data.map(item=>{\\n                                    item.label=item.targetDesc;\\n                                    item.value=item.target;\\n                                    return item;\\n                                })\\n                                return data.data\\n                            }\",\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          }\n        },\n        uploadFile: {\n          name: '文件上传',\n          imagesUpload: {\n            name: '图片批量上传',\n            options: _JSON$stringify({\n              label: '公司宣传图',\n              prop: 'enterpriseShowImages',\n              formData: [],\n              defaultValue: [],\n              type: 'addImages',\n              dataBus: true,\n              imagesListConfig: {\n                imageConfig: {\n                  //size:2.45*1024*1024,\n                  width: 430,\n                  height: 270\n                },\n                readonly: false,\n\n                /*validatorHandler:validatorHandler,*/\n                data: [],\n                dataBus: true,\n                maxNum: 5,\n                tip: '请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n                prop: 'showUrls'\n              },\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          imageUpload: {\n            name: '图片上传',\n            options: _JSON$stringify({\n              label: '头像',\n              type: 'upload',\n              placeholder: '头像',\n              defaultValue: '',\n              value: '',\n              prop: 'businessLicense',\n              tip: '请上传高清图片，仅支持PNG格式。',\n              validateRules: [{\n                required: true\n              }]\n            }, null, 4)\n          },\n          fileUpload: {\n            name: '文件上传',\n            options: _JSON$stringify({\n              label: '应用APK',\n              name: '文件上传',\n              type: 'upload',\n              placeholder: '应用APK',\n              defaultValue: '',\n              span: 24,\n              value: '',\n              prop: 'apkUrl',\n              tip: '请上传高清图片作为应用ICON108*108像素，仅支持PNG格式，大小不超过300KB。',\n              imgUploadConfig: {\n                notImage: true,\n                beforeUpload: \"\\n                                    (...params)=>{\\n                                    //console.log(\\\">>>>>\\\",...params);\\n                                    let file=params[0];\\n                                    const AndroidAppType ='application/vnd.android.package-archive';\\n                                    /*if(!(file.type==AndroidAppType||/\\\\.apk$/.test(file.name))){\\n                                        return Promise.reject({code:0,msg:'\\u8BF7\\u9009\\u62E9apk\\u6587\\u4EF6'})\\n                                    }\\n                                    if(file.size>500*1024*1024){\\n                                        return Promise.reject({code:0,msg:'\\u5E94\\u7528\\u4E0D\\u80FD\\u5927\\u4E8E500Mb'})\\n                                    }*/\\n                                    return Promise.resolve({code:1,msg:'success'})\\n                                }\\n                                \",\n                successUpload: \"\\n                                    (response,file,queryItem,form)=>{\\n                                    //console.log(\\\">>>>>\\\",response,file,queryItem,form);\\n                                    form[\\\"appSizeView\\\"]=(file.size/1024/1024).toFixed(2)+'Mb';\\n                                    form[\\\"appSize\\\"]=file.size;\\n                                    return Promise.resolve({code:1,msg:'success',data:response.data.fileUrls[0]})\\n                                }\\n                                \"\n              }\n            }, null, 4)\n          }\n        },\n        getLine: {\n          name: '分割线',\n          fenGexian: {\n            name: '自定义分割线',\n            options: _JSON$stringify({\n              label: '',\n              type: 'html',\n              placeholder: '',\n              default: '<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">你的信息</div>',\n              background: 'transparent',\n              prop: 'labelInfoZCRXX'\n            }, null, 4)\n          },\n          callBackFenGeXian: {\n            name: '函数方式自定义分割线',\n            options: _JSON$stringify({\n              label: '',\n              type: 'html',\n              placeholder: '',\n              defaultValue: '',\n              dataHandler: function dataHandler(auditTypeName) {\n                return \"<div style=\\\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\\\"></div>\";\n              },\n              prop: 'auditTypeNameNoProp',\n              subText: '',\n              background: 'transparent'\n            }, null, 4)\n          }\n        },\n        buttons: {\n          name: '各种按钮',\n          chooseBtn: {\n            name: '选择按钮',\n            options: _JSON$stringify({\n              label: '选择应用',\n              type: 'chooseBtn',\n              placeholder: '',\n              default: '',\n              isPop: false,\n              readonly: false,\n              span: 24,\n              width: '800px',\n              dataBus: true,\n              chooseBtnLabel: '选择应用',\n              chooseResultViewHandler: \"(choosedResultArray,readonly)=>{\\n                               // console.log(choosedResultArray)\\n                                return _.flatten(Object.values(choosedResultArray)).map(item=>'<el-button type=\\\"info\\\">'+item.applicationName+'</el-button>').join(\\\",\\\")\\n                            }\",\n              popChooseViewHandler: \"(choosedResultArray,readonly)=>{\\n                               // console.log(choosedResultArray)\\n                                return _.flatten(Object.values(choosedResultArray)).map(item=>'<el-button type=\\\"info\\\">'+item.applicationName+'</el-button>').join(\\\",\\\")\\n                            }\",\n              tableListConfig: {\n                url: '/thirdparty/upgrade/getUpgradeInfoList.json',\n                queryElements: [{\n                  type: 'input',\n                  label: '应用名称',\n                  prop: 'applicationName'\n                }, {\n                  type: 'search',\n                  label: '应用名称'\n                }],\n                selection: false,\n                pager: {\n                  pageSize: 5\n                },\n                columns: [{\n                  label: '名称',\n                  prop: 'applicationName',\n                  width: 'auto'\n                }, {\n                  label: '版本号',\n                  prop: 'appVersion',\n                  width: '200px'\n                }, {\n                  label: '图标',\n                  prop: 'appIconUrl',\n                  type: 'img',\n                  width: '200px'\n                }],\n                operator: {\n                  columns: [{\n                    label: '选择',\n                    type: 'button'\n                  }]\n                }\n              },\n              prop: 'appIds'\n            }, null, 4)\n          }\n        }\n      },\n      templateHtml: \"\\n                {\\n                    label:'\\u5C5E\\u6027\\u540D\\u79F0',//\\u5C5E\\u6027\\u540D\\u79F0\\n                    prop:'prop',//\\u5C5E\\u6027\\u503C \\u5982name\\u3001 age\\u3001\\n                    type:'input',//\\u5B57\\u6BB5\\u7C7B\\u578B \\u5982 input,datetimerange,chooseBtn,addInput,upload,import,\\n                    inputType:'textarea',addImages,cascader,//input\\u7C7B\\u578B\\u662F\\u5426\\u663E\\u793A\\u4E3A\\u591A\\u884C\\u6587\\u672C\\u8F93\\u5165\\n                    rows:'3',//\\u663E\\u793A\\u591A\\u884C\\u6587\\u672C\\u884C\\u9AD8\\n                    placeholder:'',//\\u5C5E\\u6027\\u540D\\u79F0\\u5360\\u4F4D\\n                    defaultValue:'',//\\u9ED8\\u8BA4\\u503C\\n                    readonly:false,//\\u662F\\u5426\\u4E3A\\u53EA\\u8BFB\\n                    value:'',//\\u503C\\n                    html:true,//\\u662F\\u5426\\u663E\\u793Ahtml\\u65B9\\u5F0F\\n                    viewHandler:(proValue,formValue){//<div style=\\\"display:inline-block;color:#f00;font-size:12px;\\\">\\u56DE\\u8C03\\u5904\\u7406\\u51FD\\u6570\\u53C2\\u6570\\u9ED8\\u8BA4\\u4E3A</div>\\n                        console.log(\\\"aaa\\\")\\n                    },\\n                    subText:'',//\\u53F3\\u4FA7\\u63D0\\u793A\\u6587\\u5B57  \\u6BD4\\u5982\\u5B57\\u6570\\u63D0\\u793A \\u7528\\u6237\\u540D\\u5FC5\\u987B20\\u4E2A\\u5B57\\u4EE5\\u5185 \\u53EF\\u4EE5\\u4E3Ahtml\\n                                //<span style=\\\"color: #f0a\\\">\\u7EA2\\u8272\\u7684\\u5B57\\u4F53</span>\\n                    style:{ //\\u5143\\u7D20\\u6837\\u5F0F\\u63A7\\u5236\\n                        display:'inline-block',\\n                        width:'auto',\\n                        minWidth:'400px'\\n                    },\\n                    span:18,//\\u5143\\u7D20\\u5BB9\\u5668\\u5BBD\\u5EA6\\u73B0\\u5728 1-24,\\n                    validateRules:[//\\u6821\\u9A8C\\u89C4\\u5219\\n                        { //\\u5BF9\\u8C61\\u914D\\u7F6E\\u6A21\\u5F0F\\n                            required:true\\n                        },\\n                        { //\\u51FD\\u6570\\u914D\\u7F6E\\u6A21\\u5F0F\\n                            validator:(\\n                                            validator,//\\u6821\\u9A8C\\u6240\\u6709\\u89C4\\u5219\\n                                            value,//\\u5F53\\u524D\\u503C\\n                                            callback,//\\u5904\\u7406\\u5B8C\\u6210\\u4E4B\\u540E\\u7684\\u56DE\\u8C03 \\u5982 next()\\n                                            validate, //\\u6821\\u9A8C\\u8F85\\u52A9\\u51FD\\u6570 \\u6709\\u5404\\u79CD\\u57FA\\u7840\\u6821\\u9A8C \\u5982  mobile,\\u6570\\u5B57\\u7C7B\\u578B,email,version,password,\\n                                                                    //required,maxvalue,minvalue,maxlength,minlength,\\n                                            allRuleInOne,//\\u89C4\\u5219\\u6253\\u5305\\u4E4B\\u540E\\u5BF9\\u8C61\\n                                            that.form,//\\u5F53\\u524D\\u8868\\u5355\\u6240\\u6709\\u503C \\u4E3A\\u505A\\u5173\\u8054\\u6821\\u9A8C\\u65F6\\u5019\\u4F7F\\u7528\\n                                        )=>{//\\u51FD\\u6570\\u6A21\\u5F0F\\n                                                let errorMessage=validate.validator(value,{required:true,maxlength:15});\\n                                                errorMessage.then(data=>{\\n                                                    if(data.code==1){\\n                                                        callback();\\n                                                    }else{\\n                                                        callback(new Error(data.msg));\\n                                                    }\\n                                                })\\n                                            },\\n                            trigger:\\\"change\\\"//\\u6821\\u9A8C\\u51FD\\u6570\\u89E6\\u53D1\\u65B9\\u5F0F blur,change,click\\n                        }\\n\\n                    ],\\n                    formData:[],//\\u5F53type\\u4E3AaddInput\\u65F6 \\u7ED9\\u5C5E\\u6027\\u81EA\\u52A8\\u8D4B\\u503C,\\n                    dataBus:true,//\\u662F\\u5426\\u9700\\u8981\\u6570\\u636E\\u4F20\\u8F93 \\u9002\\u5408\\u81EA\\u5B9A\\u4E49\\u7C7B\\u5143\\u7D20\\u6709\\u81EA\\u5DF1\\u7684\\u5904\\u7406\\u903B\\u8F91 \\u5904\\u7406\\u5B8C\\u6210\\u540E\\u540C\\u6B65\\u6570\\u636E\\u51FD\\u6570\\n                    containerStyle:{//\\u5C5E\\u6027\\u5143\\u7D20\\u5BB9\\u5668 \\u9002\\u7528\\u4E8E\\u591A\\u4E2A\\u5C5E\\u6027\\u6392\\u5217\\u5728\\u4E00\\u884C\\u7B49 \\u6709\\u5355\\u72EC\\u5E03\\u5C40\\u7684\\u60C5\\u51B5\\n                        width:'auto'\\n                    },\\n                    groupedName:'\\u9ED8\\u8BA4\\u5206\\u7EC4',//\\u5206\\u7EC4\\u540D\\u79F0\\n                    groupedStyle:{//\\u5206\\u7EC4\\u6837\\u5F0F\\u5BF9\\u8C61  \\u53EF\\u4EE5\\u5C06\\u591A\\u4E2A\\u4E0D\\u540C\\u7684\\u5C5E\\u6027\\u8FDB\\u884C\\u5206\\u7EC4 \\u4EE5\\u4FBF\\u66F4\\u6E05\\u6670\\u660E\\u4E86\\u7684\\u663E\\u793A\\n                        display:'flex',\\n                        flexDirection:'row',\\n                        justContent:'flex-start',\\n                        alignItems:'center',\\n                        backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\\n                        width:'80%',\\n                        marginLeft:'10%',\\n                        padding: '20px 0px',\\n                    },\\n                    imagesListConfig:{//\\u56FE\\u7247\\u4E0A\\u4F20\\u65F6\\u5019\\u7684\\u5404\\u79CD\\u6821\\u9A8C\\n                        imageConfig:{//\\u7B80\\u5355\\u7684\\u9AD8\\u5BBD\\u5927\\u5C0F\\u6821\\u9A8C\\n                            //size:2.45*1024*1024,\\n                            width:430,\\n                            height:270\\n                        },\\n                        readonly:false,\\n                        /*validatorHandler:validatorHandler,*///\\u51FD\\u6570\\u5F0F\\u7684\\u6821\\u9A8C\\u4F60\\u81EA\\u5DF1\\u6765\\u51B3\\u5B9A\\u662F\\u5426\\u80FD\\u901A\\u8FC7\\n                        data:[],\\n                        dataBus:true,//\\u6807\\u8BB0\\u662F\\u5426\\u9700\\u8981\\u6570\\u636E\\u4F20\\u8F93\\n                        maxNum:5,//\\u591A\\u56FE\\u4E0A\\u4F20 \\u6700\\u5927\\u80FD\\u4E0A\\u4F20\\u4E2A\\u6570\\n                        tip:'\\u8BF7\\u4E0A\\u4F20\\u9AD8\\u6E05\\u56FE\\u7247430px*270px\\uFF0C\\u4EC5\\u652F\\u6301PNG\\u683C\\u5F0F\\u3002\\u6700\\u591A5\\u4E2A\\u56FE\\u7247',//\\u591A\\u56FE\\u4E0A\\u4F20\\u7684\\u63D0\\u793A\\u6027\\u6587\\u5B57\\n                        prop:'showUrls'\\n                    },\\n                    watch:{//\\u7EA7\\u8054\\u6216\\u5173\\u8054\\u5C5E\\u6027 \\u89C2\\u5BDF\\u5176\\u5B83\\u5C5E\\u6027\\u7684\\u914D\\u7F6E\\u5BF9\\u8C61\\n                        props:[\\\"enterpriseName\\\"],\\n                        watchValue:{\\n                            enterpriseName:{//\\u679A\\u4E3E\\u5176\\u5B83\\u5C5E\\u6027\\u7684\\u67D0\\u4E9B\\u503C\\u53EF\\u4EE5\\u663E\\u793A\\u6216\\u9690\\u85CF\\n                                \\\"\\u597D\\u597D\\u554A\\\":true,//\\u5F53\\u89C2\\u5BDF\\u5C5E\\u6027enterpriseName\\u4E3A\\u597D\\u597D\\u554A\\u7684\\u65F6\\u5019\\u53EF\\u4EE5\\u663E\\u793A\\n                                \\\"ccc\\\":true,\\n                                \\\"\\u770B\\u4E0D\\u89C1\\\":false//\\u5F53\\u89C2\\u5BDF\\u5C5E\\u6027enterpriseName\\u4E3A\\\"\\u770B\\u4E0D\\u89C1\\\"\\u7684\\u65F6\\u5019\\u4E0D\\u663E\\u793A\\n                            },\\n                            dddd: (...data)=>{//\\u51FD\\u6570\\u5F0F\\u6821\\u9A8C\\n                                console.log(\\\">>>>>\\\",...data)\\n                                return false\\n                            },\\n                            ee:null//\\u65E0\\u6548\\u7684\\u914D\\u7F6E\\u4F1A\\u88AB\\u5FFD\\u7565\\u6389\\n                        }\\n                    },\\n                    dataHandler(auditTypeName,...params){//\\u6839\\u636E\\u6570\\u636E\\u52A8\\u6001\\u663E\\u793A\\u5185\\u5BB9\\n                        return <span style=\\\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\\\">hahahah</span>\\n                    },\\n                    cascaderOptions:[],//\\u7EA7\\u8054\\u5BF9\\u8C61\\u663E\\u793A\\u6570\\u636E\\u6E90\\n                    itemLabel:'label',//\\u7EA7\\u8054\\u5BF9\\u8C61\\u7684\\u663E\\u793A\\u540D\\u79F0\\n                    itemValue:'areaId',//\\u7EA7\\u8054\\u5BF9\\u8C61\\u7684\\u663E\\u793A\\u503C\\n                    rightBtn:\\\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>\\u83B7\\u53D6\\u9A8C\\u8BC1\\u7801</span>\\\",\\n                    rightBtnClick:data=>{//\\u53F3\\u4FA7\\u9700\\u8981\\u6709\\u6309\\u94AE\\u7684\\u70B9\\u51FB\\u5904\\u7406\\u51FD\\u6570\\n                        return '';\\n                    },\\n                    dataUrl:'/jump/getJumpType.json',//\\u4E0B\\u62C9\\u9009\\u62E9\\u6570\\u636E\\u63A5\\u53E3\\u5730\\u5740\\n                    initQuery:true,//\\u662F\\u5426\\u9700\\u8981\\u521D\\u59CB\\u5316\\n                    dataHandler:`(data)=>{//\\u6570\\u636E\\u5904\\u7406\\u51FD\\u6570 \\u4E0B\\u62C9\\u663E\\u793A label \\u6216name  value\\u6216code\\n                        console.log(data)\\n                        (data.data||[]).map(item=>{\\n                            item.label=item.desc;\\n                            item.value=item.code;\\n                        })\\n                        return data.data\\n                    }`,\\n                }\\n            \"\n    };\n  },\n  methods: {\n    saveInput: function saveInput(param) {\n      console.log(param, this.form);\n      if (!this.form[this.config.prop]) return;\n      this.items.push(this.form[this.config.prop]);\n      this.form[this.config.prop] = \"\";\n\n      if (this.config.dataBus) {\n        if (typeof this.config.dataBus === \"function\") {\n          this.config.dataBus(this.config, this.items);\n        }\n      }\n    },\n    addQueryElement: function addQueryElement() {\n      if (this.config.dataBus) {\n        if (typeof this.config.dataBus === \"function\") {\n          this.config.dataBus(this.config, JSON.parse(this.elementConfig[this.type][this.elementItemType].options), {\n            functionType: this.type,\n            elementType: this.elementItemType\n          });\n        }\n      }\n    },\n    deleteItem: function deleteItem(item, index) {\n      this.items.splice(index, 1);\n\n      if (this.config.dataBus) {\n        if (typeof this.config.dataBus === \"function\") {\n          this.config.dataBus(this.config, this.items);\n        }\n      }\n    },\n    showTemplate: function showTemplate(template) {\n      return (template || '').replace(/\\n/g, \"<br/>\").replace(/\\s{4}/g, \"<span style='display: inline-block;width: 10px;'></span>\");\n    }\n  },\n  computed: {\n    currentChoosed: function currentChoosed() {\n      return _Object$keys(this.elementConfig[this.type]).filter(function (item, seq) {\n        return seq;\n      });\n    }\n  },\n  created: function created() {\n    var config = this.$attrs.config; //console.log(\"config\",config);\n\n    this.config = config;\n    var formData = config.formData;\n\n    if (formData) {\n      /*Object.keys(formData).forEach(key=>{\n          that.$set(that.form,key,formData[key]);\n      })*/\n      this.items = JSON.parse(_JSON$stringify(formData));\n\n      if (this.config.dataBus) {\n        if (typeof this.config.dataBus === \"function\") {\n          this.config.dataBus(this.config, this.items);\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["createFormElement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"addElement\">\n        <div style=\"padding: 15px 5px;background:linear-gradient(-180deg, rgb(102, 177, 255), #3483de59, #228dfdad);\">\n            <el-radio v-model=\"type\" :label=\"element\" style=\"margin-left: 0px;margin:10px;\" border  v-for=\"(element,index) in Object.keys(elementConfig)\" :key=\"index+'_radio_'+element\" >{{elementConfig[element].name}}</el-radio>\n        </div>\n        <div style=\"padding:10px;background:linear-gradient(-180deg, rgb(102, 177, 255), #c0c4cc, rgb(103, 194, 58)) !important;\">\n            <el-radio v-for=\"(element,index) in currentChoosed\"  :key=\"index\" v-model=\"elementItemType\"  border style=\"margin-bottom:15px;margin-right:15px;margin-top:10px;\" :label=\"element\">{{elementConfig[type][element].name}}</el-radio>\n        </div>\n        <div class=\"operateContainer\" style=\"background:#ddd\" v-if=\"elementConfig[type][elementItemType]\">\n                    <span class=\"optionsElementContainer\">\n                            <el-input v-model=\"elementConfig[type][elementItemType].options\" text-color=\"#fff\" type=\"textarea\" :rows=\"25\" style=\"font-size:12px;\" @keyup.enter.native=\"saveInput\" ></el-input>\n                    </span>\n                    <el-button type=\"success\" style=\"margin-top: 15px;\" @click=\"addQueryElement\">添加元素</el-button>\n                </div>\n                <div style=\"font-size: 12px;background:linear-gradient(-180deg, #66b1ff,rgba(0,0,0,.1),#67c23a)!important;margin-top:20px;\" v-html=\"showTemplate(templateHtml)\">\n        </div>\n    </div>\n</template>\n<script>\n    export default {\n        name: 'create-form-element',\n        data(){\n            return{\n                type:'inputElement',\n                elementItemType:'input',\n                config:{},\n                form:{},\n                items:[],\n                elementConfig:{\n                    inputElement:{\n                        name:'输入框',\n                        input:{\n                            name:'输入框有验证功能',\n                            testProp:`\n                                {\n                                    label:'属性名称',\n                                    type:'input',\n                                    placeholder:'属性名称占位',\n                                    defaultValue:'',\n                                    value:'',\n                                    prop:'propName',\n                                    subText:'*最多15个字',\n                                    span:18,\n                                    style:{\n                                        display:'inline-block',\n                                        width:'auto',\n                                        minWidth:'400px'\n                                        },\n                                    viewHandler(...params){\n                                        console.log(...params)    \n                                    }    \n                                },\n                            `,\n                            options:JSON.stringify({\n                                label:'属性名称',\n                                type:'input',\n                                placeholder:'属性名称占位',\n                                defaultValue:'',\n                                value:'',\n                                prop:'propName',\n                                subText:'*最多15个字',\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'400px'\n                                },\n\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                            },null,4)\n                        },\n                        datetimerange:{\n                            name:'时间范围',\n                            options:JSON.stringify({\n                                label:'时间范围',\n                                type:'datetimerange',\n                                placeholder:'请选择开始和结束时间',\n                                prop:'timerange',\n                                validateRules:[\n                                    {\n                                        required:true\n                                    }\n                                ]\n                            },null,4)\n                        },\n                        addInput:{\n                            name:'回车输入框',\n                            options:JSON.stringify({\n                                label:'公司标签',\n                                prop:'enterpriseLabels',\n                                formData:[],\n                                type:'addInput',\n                                dataBus:true,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n                                            console.log(\"value\",value)\n                                            if(value.split(\"||||\").length>5){\n                                                callback(new Error(\"标签最多不能大于5个\"));\n                                            }else{\n                                                callback();\n                                            }\n                                            /*errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })*/\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ]\n                            },null,4)\n                        },\n\n                        groupElementInput:{\n                            name:'分组元素',\n                            options:JSON.stringify({\n                                label:'身份证背面',\n                                type:'upload',\n                                placeholder:'身份证背面',\n                                groupedName:'idCardGroup',\n                                defaultValue:'',\n                                value:'',\n                                style:{\n                                    width:'auto'\n                                },\n                                containerStyle:{\n                                    width:'auto'\n                                },\n                                groupedStyle:{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    justContent:'flex-start',\n                                    alignItems:'center',\n                                    backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                                    width:'80%',\n                                    marginLeft:'10%',\n                                    padding: '20px 0px',\n                                },\n                                prop:'cardBackUrl',\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    }\n                                ],\n                            },null,4)\n                        },\n\n                        watchElement:{\n                            name:'观察元素 依赖其它元素值动态切换显示隐藏',\n                            options:JSON.stringify({\n                                label:'企业简介',\n                                type:'input',\n                                placeholder:'企业简介',\n                                defaultValue:'',\n                                inputType:'textarea',\n                                rows:3,\n                                value:'',\n                                prop:'enterpriseIntroduction',\n                                subText:'最多100个字',\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'400px',\n                                },\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                                watch:{\n                                    props:[\"enterpriseName\"],\n                                    watchValue:{\n                                        enterpriseName:{\n                                            \"好好啊\":true,\n                                            \"ccc\":true,\n                                        },\n                                        dddd: (...data)=>{\n                                            console.log(\">>>>>\",...data)\n                                            return false\n                                        },\n                                        ee:null\n                                    }\n                                }\n                            },null,4)\n                        },\n\n                        provinceCityCasede:{\n                            name:'省市县级联选择',\n                            options:JSON.stringify({\n                                label:'省市区',\n                                prop:'userAreaLocal',\n                                cascaderOptions:[],\n                                type:'cascader',\n                                itemLabel:'label',\n                                itemValue:'areaId',\n                                default:[],\n                                span:12,\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    }\n                                ]\n                            },null,4)\n                        },\n                        multiLineInput:{\n                            name:'多行文本输入框',\n                            options:JSON.stringify({\n                                label:'详细地址',\n                                type:'input',\n                                placeholder:'详细地址',\n                                defaultValue:'',\n                                inputType:'textarea',\n                                rows:3,\n                                value:'',\n                                prop:'userAddress',\n                                subText:'最多100个字',\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'400px',\n                                },\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                            },null,4)\n                        },\n                        rightBtnInput:{\n                            name:'右侧有按钮的输入框',\n                            options:JSON.stringify({\n                                label:'手机验证码',\n                                type:'input',\n                                placeholder:'手机验证码',\n                                defaultValue:'',\n                                value:'',\n                                prop:'verificationCode',\n                                subText:'*4位验证码',\n                                rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n                                rightBtnClick:data=>{\n                                    return '';\n                                },\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'250px'\n                                },\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:4});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                            },null,4)\n                        }\n                    },\n                    selectElement:{\n                        name:'下拉选择',\n                        selectInputFirst:{\n                            name:'下拉选择',\n                            options:JSON.stringify({\n                                label:'下拉选择跳转类型选择',\n                                prop:'select',\n                                dataUrl:'/jump/getJumpType.json',\n                                initQuery:true,\n                                type:'select',\n                                casecadeChild:[],\n                                casecadeGrandsonList:[],\n                                dataHandler:`(data)=>{\n                                    console.log(data)\n                                    data.data.map(item=>{\n                                        item.label=item.desc;\n                                        item.value=item.code;\n                                        return item;\n                                    })\n                                    return data.data\n                                }`,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                ]\n                            },null,4)\n                        },\n                        selectInputSecond:{\n                            name:'下拉选择有数据处理转换函数',\n                            options:JSON.stringify({\n                                label:'应用选择',\n                                prop:'appId',\n                                dataUrl:'/jump/getRobotApp.json',\n                                initQuery:true,\n                                type:'select',\n                                propList:'appList',\n                                casecadeChild:\"appFunction\",\n                                casecadeGrandsonList:[],\n                                dataHandler:`(data)=>{\n                                    console.log(data)\n                                    if(data.data.length==0) return [];\n                                    data.data.map(item=>{\n                                        item.label=item.appNameCn;\n                                        item.value=item.appNameUs;\n                                        return item;\n                                    })\n                                    return data.data\n                                }`,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                ]\n                            },null,4)\n                        },\n                        selectInputThird:{\n                            name:'下拉选择有衍生元素模板',\n                            options:JSON.stringify({\n                                label:'功能选择',\n                                prop:'appFunction',\n                                propList:'appFunctionList',\n                                dataUrl:'/jump/getRobotAppTarget.json',\n                                initQuery:false,\n                                param:{\n                                    appNameUs:\"appNameUs\"\n                                },\n                                extendsProp:[\"appNameUs\"],\n                                casecadeChild:\"\",\n                                groupedName:'jumpParams',\n                                casecadeGrandsonList:[],\n                                extendChild:{\n                                    dataUrl:'/jump/getParamTemplate.json',\n                                    method:'post',\n                                    prop:'appFunction',\n                                    dataHandler:`(data,parent)=>{\n                                        console.log(data,\">>>>\",parent)\n                                        if(!data.data||data.data.length==0) return [];\n                                        data.data.map((item,seq)=>{\n                                            item.label=item.targetDesc;\n                                            item.value=item.target;\n                                            item.type='input';\n                                            //item.inputType='textarea';\n                                            //item.rows=5;\n                                            item.label=item.paramLabel;\n                                            item.groupedName='jumpParams';\n                                            item.order=parent.order+1+seq;\n                                            item.prop='temp_appFunction#'+item.paramName;\n                                            item.validateRules=[\n                                                                    {\n                                                                        required:true\n                                                                    },\n                                                                ]\n                                            return item;\n                                        })\n                                        return data.data\n                                    }`,\n                                    extendsProp:[\"target\"]\n                                },\n                                type:'select',\n                                dataHandler:`(data)=>{\n                                    console.log(data)\n                                    data.data.map(item=>{\n                                        item.label=item.targetDesc;\n                                        item.value=item.target;\n                                        return item;\n                                    })\n                                    return data.data\n                                }`,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                ]\n                            },null,4)\n                        },\n                    },\n                    uploadFile:{\n                        name:'文件上传',\n                        imagesUpload:{\n                            name:'图片批量上传',\n                            options:JSON.stringify({\n                                label:'公司宣传图',\n                                prop:'enterpriseShowImages',\n                                formData:[],\n                                defaultValue:[],\n                                type:'addImages',\n                                dataBus:true,\n                                imagesListConfig:{\n                                    imageConfig:{\n                                        //size:2.45*1024*1024,\n                                        width:430,\n                                        height:270\n                                    },\n                                    readonly:false,\n                                    /*validatorHandler:validatorHandler,*/\n                                    data:[],\n                                    dataBus:true,\n                                    maxNum:5,\n                                    tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n                                    prop:'showUrls'\n                                },\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                    /*{\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                                            console.log(\"value\",value)\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }*/\n                                ]\n                            },null,4)\n                        },\n                        imageUpload:{\n                            name:'图片上传',\n                            options:JSON.stringify({\n                                label:'头像',\n                                type:'upload',\n                                placeholder:'头像',\n                                defaultValue:'',\n                                value:'',\n                                prop:'businessLicense',\n                                tip:'请上传高清图片，仅支持PNG格式。',\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    }\n                                ]\n                            },null,4)\n                        },\n                        fileUpload:{\n                            name:'文件上传',\n                            options:JSON.stringify({\n                                label:'应用APK',\n                                name:'文件上传',\n                                type:'upload',\n                                placeholder:'应用APK',\n                                defaultValue:'',\n                                span:24,\n                                value:'',\n                                prop:'apkUrl',\n                                tip:'请上传高清图片作为应用ICON108*108像素，仅支持PNG格式，大小不超过300KB。',\n                                imgUploadConfig:{\n                                    notImage:true,\n                                    beforeUpload:`\n                                        (...params)=>{\n                                        //console.log(\">>>>>\",...params);\n                                        let file=params[0];\n                                        const AndroidAppType ='application/vnd.android.package-archive';\n                                        /*if(!(file.type==AndroidAppType||/\\\\.apk$/.test(file.name))){\n                                            return Promise.reject({code:0,msg:'请选择apk文件'})\n                                        }\n                                        if(file.size>500*1024*1024){\n                                            return Promise.reject({code:0,msg:'应用不能大于500Mb'})\n                                        }*/\n                                        return Promise.resolve({code:1,msg:'success'})\n                                    }\n                                    `,\n                                    successUpload:`\n                                        (response,file,queryItem,form)=>{\n                                        //console.log(\">>>>>\",response,file,queryItem,form);\n                                        form[\"appSizeView\"]=(file.size/1024/1024).toFixed(2)+'Mb';\n                                        form[\"appSize\"]=file.size;\n                                        return Promise.resolve({code:1,msg:'success',data:response.data.fileUrls[0]})\n                                    }\n                                    `\n                                },\n                            },null,4)},\n                    },\n                    getLine:{\n                        name:'分割线',\n                        fenGexian:{\n                            name:'自定义分割线',\n                            options:JSON.stringify({\n                                label:'',\n                                type:'html',\n                                placeholder:'',\n                                default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">你的信息</div>',\n                                background:'transparent',\n                                prop:'labelInfoZCRXX',\n                            },null,4)\n                        },\n                        callBackFenGeXian:{\n                            name:'函数方式自定义分割线',\n                            options:JSON.stringify({\n                                label:'',\n                                type:'html',\n                                placeholder:'',\n                                defaultValue:'',\n                                dataHandler(auditTypeName,...params){\n                                    return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\"></div>`\n                                },\n                                prop:'auditTypeNameNoProp',\n                                subText:'',\n                                background:'transparent',\n                            },null,4)\n                        },\n                    },\n                    buttons:{\n                        name:'各种按钮',\n                        chooseBtn:{\n                            name:'选择按钮',\n                            options:JSON.stringify({\n                                label:'选择应用',\n                                type:'chooseBtn',\n                                placeholder:'',\n                                default:'',\n                                isPop:false,\n                                readonly:false,\n                                span:24,\n                                width:'800px',\n                                dataBus:true,\n                                chooseBtnLabel:'选择应用',\n                                chooseResultViewHandler:`(choosedResultArray,readonly)=>{\n                                   // console.log(choosedResultArray)\n                                    return _.flatten(Object.values(choosedResultArray)).map(item=>'<el-button type=\"info\">'+item.applicationName+'</el-button>').join(\",\")\n                                }`,\n                                popChooseViewHandler:`(choosedResultArray,readonly)=>{\n                                   // console.log(choosedResultArray)\n                                    return _.flatten(Object.values(choosedResultArray)).map(item=>'<el-button type=\"info\">'+item.applicationName+'</el-button>').join(\",\")\n                                }`,\n                                tableListConfig:{\n                                   url:'/thirdparty/upgrade/getUpgradeInfoList.json',\n                                   queryElements:[\n                                       {type:'input',label:'应用名称',prop:'applicationName'},\n                                       {type:'search',label:'应用名称',}\n                                   ],\n                                   selection:false,\n                                   pager:{\n                                       pageSize:5\n                                   },\n                                   columns:[\n                                       {\n                                           label:'名称',\n                                           prop:'applicationName',\n                                           width:'auto'\n                                       },\n                                       {\n                                           label:'版本号',\n                                           prop:'appVersion',\n                                           width:'200px'\n                                       },\n                                       {\n                                           label:'图标',\n                                           prop:'appIconUrl',\n                                           type:'img',\n                                           width:'200px'\n                                       }\n                                   ],\n                                   operator:{\n                                       columns:[\n                                           {\n                                               label:'选择',\n                                               type:'button'\n                                           }\n                                       ]\n                                   }\n                                },\n                                prop:'appIds',\n                            },null,4)\n                        },\n                    },\n                },\n                templateHtml:`\n                    {\n                        label:'属性名称',//属性名称\n                        prop:'prop',//属性值 如name、 age、\n                        type:'input',//字段类型 如 input,datetimerange,chooseBtn,addInput,upload,import,\n                        inputType:'textarea',addImages,cascader,//input类型是否显示为多行文本输入\n                        rows:'3',//显示多行文本行高\n                        placeholder:'',//属性名称占位\n                        defaultValue:'',//默认值\n                        readonly:false,//是否为只读\n                        value:'',//值\n                        html:true,//是否显示html方式\n                        viewHandler:(proValue,formValue){//<div style=\"display:inline-block;color:#f00;font-size:12px;\">回调处理函数参数默认为</div>\n                            console.log(\"aaa\")\n                        },\n                        subText:'',//右侧提示文字  比如字数提示 用户名必须20个字以内 可以为html\n                                    //<span style=\"color: #f0a\">红色的字体</span>\n                        style:{ //元素样式控制\n                            display:'inline-block',\n                            width:'auto',\n                            minWidth:'400px'\n                        },\n                        span:18,//元素容器宽度现在 1-24,\n                        validateRules:[//校验规则\n                            { //对象配置模式\n                                required:true\n                            },\n                            { //函数配置模式\n                                validator:(\n                                                validator,//校验所有规则\n                                                value,//当前值\n                                                callback,//处理完成之后的回调 如 next()\n                                                validate, //校验辅助函数 有各种基础校验 如  mobile,数字类型,email,version,password,\n                                                                        //required,maxvalue,minvalue,maxlength,minlength,\n                                                allRuleInOne,//规则打包之后对象\n                                                that.form,//当前表单所有值 为做关联校验时候使用\n                                            )=>{//函数模式\n                                                    let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                                                    errorMessage.then(data=>{\n                                                        if(data.code==1){\n                                                            callback();\n                                                        }else{\n                                                            callback(new Error(data.msg));\n                                                        }\n                                                    })\n                                                },\n                                trigger:\"change\"//校验函数触发方式 blur,change,click\n                            }\n\n                        ],\n                        formData:[],//当type为addInput时 给属性自动赋值,\n                        dataBus:true,//是否需要数据传输 适合自定义类元素有自己的处理逻辑 处理完成后同步数据函数\n                        containerStyle:{//属性元素容器 适用于多个属性排列在一行等 有单独布局的情况\n                            width:'auto'\n                        },\n                        groupedName:'默认分组',//分组名称\n                        groupedStyle:{//分组样式对象  可以将多个不同的属性进行分组 以便更清晰明了的显示\n                            display:'flex',\n                            flexDirection:'row',\n                            justContent:'flex-start',\n                            alignItems:'center',\n                            backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                            width:'80%',\n                            marginLeft:'10%',\n                            padding: '20px 0px',\n                        },\n                        imagesListConfig:{//图片上传时候的各种校验\n                            imageConfig:{//简单的高宽大小校验\n                                //size:2.45*1024*1024,\n                                width:430,\n                                height:270\n                            },\n                            readonly:false,\n                            /*validatorHandler:validatorHandler,*///函数式的校验你自己来决定是否能通过\n                            data:[],\n                            dataBus:true,//标记是否需要数据传输\n                            maxNum:5,//多图上传 最大能上传个数\n                            tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',//多图上传的提示性文字\n                            prop:'showUrls'\n                        },\n                        watch:{//级联或关联属性 观察其它属性的配置对象\n                            props:[\"enterpriseName\"],\n                            watchValue:{\n                                enterpriseName:{//枚举其它属性的某些值可以显示或隐藏\n                                    \"好好啊\":true,//当观察属性enterpriseName为好好啊的时候可以显示\n                                    \"ccc\":true,\n                                    \"看不见\":false//当观察属性enterpriseName为\"看不见\"的时候不显示\n                                },\n                                dddd: (...data)=>{//函数式校验\n                                    console.log(\">>>>>\",...data)\n                                    return false\n                                },\n                                ee:null//无效的配置会被忽略掉\n                            }\n                        },\n                        dataHandler(auditTypeName,...params){//根据数据动态显示内容\n                            return <span style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\">hahahah</span>\n                        },\n                        cascaderOptions:[],//级联对象显示数据源\n                        itemLabel:'label',//级联对象的显示名称\n                        itemValue:'areaId',//级联对象的显示值\n                        rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n                        rightBtnClick:data=>{//右侧需要有按钮的点击处理函数\n                            return '';\n                        },\n                        dataUrl:'/jump/getJumpType.json',//下拉选择数据接口地址\n                        initQuery:true,//是否需要初始化\n                        dataHandler:\\`(data)=>{//数据处理函数 下拉显示 label 或name  value或code\n                            console.log(data)\n                            (data.data||[]).map(item=>{\n                                item.label=item.desc;\n                                item.value=item.code;\n                            })\n                            return data.data\n                        }\\`,\n                    }\n                `,\n            }\n        },\n        methods:{\n            saveInput(param){\n                console.log(param,this.form);\n                if(!this.form[this.config.prop]) return;\n                this.items.push(this.form[this.config.prop]);\n                this.form[this.config.prop]=\"\";\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,this.items);\n                    }\n                }\n            },\n            addQueryElement(){\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,JSON.parse(this.elementConfig[this.type][this.elementItemType].options),{\n                            functionType:this.type,\n                            elementType:this.elementItemType,\n                        });\n                    }\n                }\n            },\n            deleteItem(item,index){\n                this.items.splice(index,1);\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,this.items);\n                    }\n                }\n            },\n            showTemplate(template){\n                return (template||'').replace(/\\n/g,\"<br/>\").replace(/\\s{4}/g,\"<span style='display: inline-block;width: 10px;'></span>\")\n            }\n\n        },\n        computed:{\n            currentChoosed(){\n                return Object.keys(this.elementConfig[this.type]).filter((item,seq)=>seq)\n            }\n        },\n        created() {\n            let config=this.$attrs.config;\n            //console.log(\"config\",config);\n            this.config=config;\n            let formData=config.formData;\n            if(formData){\n                /*Object.keys(formData).forEach(key=>{\n                    that.$set(that.form,key,formData[key]);\n                })*/\n                this.items=JSON.parse(JSON.stringify(formData))\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,this.items);\n                    }\n                }\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n    #container {\n        height: 300px;\n        width:800px;\n    }\n\n    .queryElement{\n        display: block;\n        width: 100%;\n        border:0px solid #f00;\n    }\n    .addInputItemContainer{\n        display: inline-block;\n        padding: 5px 10px;\n        border:1px solid #f00;\n        border-radius: 5px;\n        color: #f00;\n        line-height: 20px;\n        margin-right: 10px;\n        margin-bottom: 10px;\n        position: relative;\n    }\n    .deleteIcon{\n        display: inline-block;\n        position: absolute;\n        right: -8px;\n        top: -8px;\n        width: 16px;\n        height: 16px;\n        line-height: 16px;\n        font-size: 12px;\n        font-weight: bold;\n        text-align: center;\n        background: #f00;\n        color: #fff;\n        border-radius: 50%;\n        cursor: pointer;\n    }\n</style>\n<style>\n    .addElement{\n        text-align: left;\n    }\n    .addElement .el-radio{\n        min-width: 165px;\n        margin-right: 10px;\n\n    }\n    .optionsElementContainer{\n        display: inline-block;\n        border: 0px dashed #faa;\n        width: 60%;\n        margin-right: 20px;\n    }\n    .chooseItemElementContainer{\n        display: inline-block;\n        border: 1px dashed #faa;\n        padding: 10px 15px;\n        margin-bottom: 15px;\n        margin-right: 15px;\n        border-radius: 5px;\n    }\n    .operateContainer{\n        display: flex;\n        width: 100%;\n        border: 0px solid #f00;\n        flex-direction: row;\n        justify-content:flex-start;\n        align-items: center;\n    }\n</style>\n"],"sourceRoot":"src/components/formCreater"}]}