{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/views/baseInfo/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/views/baseInfo/index.vue","mtime":1553226104179},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport backendService from './../../components/remoteService/backendService';\nimport cityData from './../../components/cityData/data';\nimport validate from './../../components/validate/validate';\nimport formCreater from './../../components/formCreater/baseFormCreater';\nvar queryElements = [{\n  label: '',\n  type: 'html',\n  placeholder: '',\n  default: '<div style=\"border-bottom:1px solid #eee;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);color:#f00;\">审核信息</div>',\n  background: 'transparent',\n  prop: 'platformTypeCheckState'\n}, {\n  label: '详细信息',\n  type: 'html',\n  placeholder: '',\n  defaultValue: '',\n  dataHandler: function dataHandler(auditTypeName) {\n    var testText = '' + '1、身份证已过期<br/>  ' + '2、照片模糊不清<br/>  ' + '3、企业信息不存在<br/>  ' + '4、企业头像图片不清晰<br/>  ' + '5、营业执照与企业信息不匹配<br/>  ' + '6、身份证号码非法<br/>  ' + '7、企业简介描述中含有非法内容<br/>  ';\n\n    for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      params[_key - 1] = arguments[_key];\n    }\n\n    var remark = (params[0].remark || '').replace(/\\n/g, \"<br/>\");\n    return \"<div style=\\\"color: #f00;font-size: 14px;background: transparent;color:#ff2222;line-height: 25px;word-break: break-all;width: 80%;padding-top: 7px;\\\">\\n                \".concat(auditTypeName, \"\\n                <p style=\\\"color:#222;\\\">\\n                    \").concat(params[0].auditType == 0 ? '' : remark, \"\\n                </p>\\n             </div>\");\n  },\n  prop: 'auditTypeName',\n  subText: '',\n  background: 'transparent'\n}, {\n  label: '',\n  type: 'html',\n  placeholder: '',\n  defaultValue: '',\n  dataHandler: function dataHandler(auditTypeName) {\n    return \"<div style=\\\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\\\"></div>\";\n  },\n  prop: 'auditTypeNameNoProp',\n  subText: '',\n  background: 'transparent'\n}, {\n  label: '',\n  type: 'html',\n  placeholder: '',\n  default: '<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">企业信息</div>',\n  background: 'transparent',\n  prop: 'platformType'\n}, {\n  label: '企业名称',\n  type: 'input',\n  placeholder: '企业名称',\n  defaultValue: '',\n  value: '',\n  prop: 'enterpriseName',\n  subText: '*最多15个字',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '400px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 15\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '企业简介',\n  type: 'input',\n  placeholder: '企业简介',\n  defaultValue: '',\n  inputType: 'textarea',\n  rows: 3,\n  value: '',\n  prop: 'enterpriseIntroduction',\n  subText: '最多100个字',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '400px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator2, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 100\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }],\n  watch: {\n    props: [\"enterpriseName\"],\n    watchValue: {\n      enterpriseName: {\n        \"好好啊\": true,\n        \"ccc\": true\n      },\n      dddd: function dddd() {\n        var _console;\n\n        for (var _len2 = arguments.length, data = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          data[_key2] = arguments[_key2];\n        }\n\n        (_console = console).log.apply(_console, [\">>>>>\"].concat(data));\n\n        return false;\n      },\n      ee: null\n    }\n  }\n}, {\n  label: '公司标签',\n  prop: 'enterpriseLabels',\n  formData: [],\n  type: 'addInput',\n  dataBus: true,\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator3, value, callback) {\n      //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n      console.log(\"value\", value);\n\n      if (value.split(\"||||\").length > 5) {\n        callback(new Error(\"标签最多不能大于5个\"));\n      } else {\n        callback();\n      }\n      /*errorMessage.then(data=>{\n          if(data.code==1){\n              callback();\n          }else{\n              callback(new Error(data.msg));\n          }\n      })*/\n\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '公司宣传图',\n  prop: 'enterpriseShowImages',\n  formData: [],\n  defaultValue: [],\n  type: 'addImages',\n  dataBus: true,\n  imagesListConfig: {\n    imageConfig: {\n      //size:2.45*1024*1024,\n      width: 430,\n      height: 270\n    },\n    readonly: false,\n\n    /*validatorHandler:validatorHandler,*/\n    data: [],\n    dataBus: true,\n    maxNum: 5,\n    tip: '请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n    prop: 'showUrls'\n  },\n  validateRules: [{\n    required: true\n  }]\n}, {\n  label: '公司省',\n  prop: 'enterpriseProvince',\n  default: 1,\n  type: 'hidden'\n}, {\n  label: '公司市',\n  prop: 'enterpriseCity',\n  default: 1,\n  type: 'hidden'\n}, {\n  label: '公司区',\n  prop: 'enterpriseArea',\n  default: 1,\n  type: 'hidden'\n}, {\n  label: '公司区省市区',\n  prop: 'enterpriseAreaLocal',\n  cascaderOptions: cityData,\n  type: 'cascader',\n  itemLabel: 'label',\n  itemValue: 'areaId',\n  default: [],\n  span: 12,\n  validateRules: [{\n    required: true\n  }]\n}, {\n  label: '详细地址',\n  type: 'input',\n  placeholder: '详细地址',\n  defaultValue: '',\n  inputType: 'textarea',\n  rows: 3,\n  value: '',\n  prop: 'enterpriseAddress',\n  subText: '最多100个字',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '400px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator4, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 100\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '企业头像',\n  type: 'upload',\n  placeholder: '企业头像',\n  defaultValue: 1,\n  value: '',\n  prop: 'enterpriseIconUrl',\n  tip: '',\n  validateRules: [{\n    required: true\n  }]\n}, {\n  label: '营业执照',\n  type: 'upload',\n  placeholder: '营业执照',\n  defaultValue: 1,\n  value: '',\n  prop: 'businessLicense',\n  tip: '请上传高清图片，仅支持PNG格式。',\n  validateRules: [{\n    required: true\n  }]\n}, {\n  label: '',\n  type: 'html',\n  placeholder: '',\n  default: '<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">注册人信息</div>',\n  background: 'transparent',\n  prop: 'labelInfoZCRXX'\n}, {\n  label: '真实名称',\n  type: 'input',\n  placeholder: '真实名称',\n  defaultValue: '',\n  value: '',\n  prop: 'name',\n  subText: '*最多15个字',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '400px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator5, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 15\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '手机号码',\n  type: 'input',\n  placeholder: '手机号码',\n  defaultValue: '',\n  value: '',\n  prop: 'mobile',\n  subText: '*11个数字',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '400px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator6, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 11,\n        mobile: true\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '手机验证码',\n  type: 'input',\n  placeholder: '手机验证码',\n  defaultValue: '',\n  value: '',\n  prop: 'verificationCode',\n  subText: '*4位验证码',\n  rightBtn: \"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n  rightBtnClick: function rightBtnClick(data) {\n    return '';\n  },\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '250px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator7, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 4\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '用户详细地址',\n  type: 'textare',\n  placeholder: '用户详细地址',\n  defaultValue: 1,\n  value: '',\n  prop: 'userAddress',\n  items: [{\n    label: '周边商城',\n    value: 1,\n    code: 1\n  }, {\n    label: '物业缴费',\n    value: 2,\n    code: 2\n  }]\n}, {\n  label: '用户省',\n  prop: 'userProvince',\n  default: 1,\n  type: 'hidden'\n}, {\n  label: '用户市',\n  prop: 'userCity',\n  default: 1,\n  type: 'hidden'\n}, {\n  label: '用户区',\n  prop: 'userArea',\n  default: 1,\n  type: 'hidden'\n}, {\n  label: '用户区省市区',\n  prop: 'userAreaLocal',\n  cascaderOptions: cityData,\n  type: 'cascader',\n  itemLabel: 'label',\n  itemValue: 'areaId',\n  default: [],\n  span: 12,\n  validateRules: [{\n    required: true\n  }]\n}, {\n  label: '详细地址',\n  type: 'input',\n  placeholder: '详细地址',\n  defaultValue: '',\n  inputType: 'textarea',\n  rows: 3,\n  value: '',\n  prop: 'userAddress',\n  subText: '最多100个字',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto',\n    minWidth: '400px'\n  },\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator8, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        maxlength: 100\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '身份证号码',\n  type: 'input',\n  placeholder: '身份证号码',\n  defaultValue: '',\n  value: '',\n  subText: '<span style=\"margin-left: 20px;color:#21211f;\">请输入正确的身份证号码</span>',\n  span: 18,\n  style: {\n    display: 'inline-block',\n    width: 'auto'\n  },\n  prop: 'idCard',\n  tip: '',\n  validateRules: [{\n    required: true\n  }, {\n    validator: function validator(_validator9, value, callback) {\n      var errorMessage = validate.validator(value, {\n        required: true,\n        minlength: 16,\n        maxlength: 18\n      });\n      errorMessage.then(function (data) {\n        if (data.code == 1) {\n          callback();\n        } else {\n          callback(new Error(data.msg));\n        }\n      });\n    },\n    trigger: \"change\"\n  }]\n}, {\n  label: '身份证正面',\n  type: 'upload',\n  placeholder: '身份证正面',\n  defaultValue: '',\n  value: '',\n  groupedName: 'idCardGroup',\n  style: {\n    width: 'auto'\n  },\n  containerStyle: {\n    width: 'auto'\n  },\n  prop: 'cardFrontUrl',\n  validateRules: [{\n    required: true\n  }]\n}, {\n  label: '身份证背面',\n  type: 'upload',\n  placeholder: '身份证背面',\n  groupedName: 'idCardGroup',\n  defaultValue: '',\n  value: '',\n  style: {\n    width: 'auto'\n  },\n  containerStyle: {\n    width: 'auto'\n  },\n  groupedStyle: {\n    display: 'flex',\n    flexDirection: 'row',\n    justContent: 'flex-start',\n    alignItems: 'center',\n    backgroundColor: 'linear-gradient(180deg,#67c23a61, #409eff8c)',\n    width: '80%',\n    marginLeft: '10%',\n    padding: '20px 0px'\n  },\n  prop: 'cardBackUrl',\n  validateRules: [{\n    required: true\n  }]\n}];\nexport default {\n  name: 'list',\n  components: {\n    'form-creater': formCreater\n  },\n  data: function data() {\n    return {\n      validate: validate,\n      couponId: 0,\n      dataQuery: {\n        query: {}\n      },\n      config: {\n        queryElements: [],\n        cancle: this.cancle,\n        cancleBtnStyle: {\n          display: 'none'\n        },\n        saveBtnlabel: '保存信息'\n      },\n      timeDownId: 0,\n      canSendCode: true\n    };\n  },\n  methods: {\n    operateClick: function operateClick(data, operate) {\n      operate['click'] && operate['click'](data);\n    },\n    saveDataStep1: function saveDataStep1(params) {\n      console.log(\"****9999*****\", params, this);\n      var that = this;\n\n      if (params.enterpriseAreaLocal.length == 0) {\n        params.enterpriseArea = [0, 0, 0];\n      }\n\n      if (params.userAreaLocal.length == 0) {\n        params.enterpriseAreaLocal = [0, 0, 0];\n      }\n\n      params.enterpriseProvince = params.enterpriseAreaLocal[0];\n      params.enterpriseCity = params.enterpriseAreaLocal[1];\n      params.enterpriseArea = params.enterpriseAreaLocal[2];\n      params.userProvince = params.userAreaLocal[0];\n      params.userCity = params.userAreaLocal[1];\n      params.userArea = params.userAreaLocal[2];\n      var templateData = {};\n\n      var postData = _Object$assign(params, templateData);\n\n      postData.userName = \"\";\n      postData.userId = this.uid;\n      delete postData.labelInfoZCRXX;\n      delete postData.platformType;\n      delete postData.scopeValue;\n      delete postData.enterpriseAreaLocal;\n      delete postData.userAreaLocal;\n      return backendService.getData({\n        url: '/user/saveUserExtend.json',\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        method: \"post\",\n        data: postData\n      }).then(function (result) {\n        console.log(\"result\", result);\n\n        if (result.code == 1) {\n          that.$message({\n            message: '信息保存成功!',\n            type: 'success'\n          });\n\n          if (that.userInfo.userInfo.step == 2) {\n            that.getUserState();\n          } else {\n            that.$router.push(\"/mainLayout/appManager/list/appList2\");\n          }\n        } else {\n          that.$message({\n            message: result.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    cancle: function cancle() {\n      this.$router.push(\"/mainLayout/appManager/list/appList2\");\n    },\n    getUserState: function getUserState() {\n      var that = this;\n      this.$store.commit('GET_USER_STATE', {\n        cb: function cb(data) {\n          if (data == 1) {\n            that.$router.push('/mainLayout/activationEmail/activationEmail/' + that.form.username);\n          } else if (data == 2) {\n            that.$router.push('/mainLayout/baseInfo/companyInfo');\n            that.queryItemInfo();\n          } else if (data == 3) {\n            that.$router.push('/mainLayout/appManager/list/appList2/');\n          }\n        }\n      });\n    },\n    queryItemInfo: function queryItemInfo(id) {\n      var url = \"/user/getUserInfo.json\";\n      var that = this;\n      backendService.getData({\n        url: url,\n        method: \"post\",\n        data: {}\n      }).then(function (data) {\n        if (data.code == '1') {\n          data.data.enterpriseAreaLocal = [data.data.enterpriseProvince, data.data.enterpriseCity, data.data.enterpriseArea];\n          data.data.userAreaLocal = [data.data.userProvince, data.data.userCity, data.data.userArea];\n          that.config.queryElements = [];\n          that.config.queryElements = queryElements;\n          that.config.saveData = that.saveDataStep1;\n          that.config.formData = data.data;\n\n          if (data.data.auditType == 0) {\n            that.config.readonly = true;\n          } else if (data.data.auditType == 2) {\n            that.config.readonly = false;\n          } else {\n            that.config.readonly = true;\n          }\n        } else {\n          that.$message({\n            message: data.msg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    sendMobileCode: function sendMobileCode(data, queryItem) {\n      var url = \"/user/sendVrificationCode.json\";\n      var that = this;\n\n      if (!that.canSendCode) {\n        return;\n      }\n\n      var i = 0;\n      var seconds = 120;\n      var normalBtn = \"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\";\n\n      if (this.timeDownId) {\n        this.$message({\n          type: 'error',\n          message: \"请倒计时结束再获取!\"\n        });\n        return;\n      }\n\n      if (!/^\\d{11}$/.test(data.mobile)) {\n        that.$message({\n          message: '请填写手机号码',\n          type: 'error'\n        });\n        return;\n      }\n\n      that.canSendCode = false;\n      backendService.getData({\n        url: url,\n        method: \"post\",\n        data: {\n          mobile: data.mobile\n        }\n      }).then(function (data) {\n        if (data.code == '1') {\n          that.$message({\n            message: '验证码已发送',\n            type: 'success'\n          });\n          that.timeDownId && clearInterval(that.timeDownId);\n          that.timeDownId = setInterval(function (data) {\n            queryItem.rightBtn = \"<span style='border:1px solid #eee;padding:0px 15px;text-align:center;border-radius:5px;display:inline-block;margin-left:15px;color:#ddd;'><span style=\\\"color: #f00;\\\">\".concat(seconds - ++i, \"</span>\\u79D2\\u540E\\u91CD\\u65B0\\u83B7\\u53D6</span>\");\n\n            if (seconds - i <= 0) {\n              clearInterval(that.timeDownId);\n              that.timeDownId = 0;\n              queryItem.rightBtn = normalBtn;\n              that.canSendCode = true;\n            }\n          }, 1000);\n        } else {\n          that.$message({\n            message: data.msg,\n            type: 'error'\n          });\n          that.canSendCode = true;\n        }\n      });\n    }\n  },\n  computed: mapState({\n    userInfo: function userInfo(state) {\n      return state.login;\n    },\n    uid: function uid(state) {\n      return state.login.uid;\n    },\n    username: function username(state) {\n      return state.login.username;\n    }\n  }),\n  created: function created() {\n    var that = this;\n    that.config.queryElements = queryElements;\n    that.config.saveData = that.saveDataStep1;\n    this.config.readonly = false;\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n        <div>\n                <div style=\"text-align: center;margin-bottom: 20px;\">\n                        <el-steps :active=\"2\" align-center>\n                                <el-step title=\"账号注册\" description=\"\"></el-step>\n                                <el-step title=\"邮箱激活\" description=\"\"></el-step>\n                                <el-step title=\"完善企业资料\" description=\"\"></el-step>\n                        </el-steps>\n                </div>\n                <form-creater v-if=\"config.queryElements.length>0\" :config=\"config\" ref=\"formCreater\"></form-creater>\n        </div>\n\n</template>\n<script>\n    import {mapState} from 'vuex'\n    import backendService from './../../components/remoteService/backendService'\n    import cityData from './../../components/cityData/data'\n    import validate from './../../components/validate/validate'\n    import formCreater from './../../components/formCreater/baseFormCreater'\n\n    let queryElements=[\n        {\n            label:'',\n            type:'html',\n            placeholder:'',\n            default:'<div style=\"border-bottom:1px solid #eee;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);color:#f00;\">审核信息</div>',\n            background:'transparent',\n            prop:'platformTypeCheckState',\n        },\n        {\n            label:'详细信息',\n            type:'html',\n            placeholder:'',\n            defaultValue:'',\n            dataHandler(auditTypeName,...params){\n                let testText='' +\n                    '1、身份证已过期<br/>  ' +\n                    '2、照片模糊不清<br/>  ' +\n                    '3、企业信息不存在<br/>  ' +\n                    '4、企业头像图片不清晰<br/>  ' +\n                    '5、营业执照与企业信息不匹配<br/>  ' +\n                    '6、身份证号码非法<br/>  ' +\n                    '7、企业简介描述中含有非法内容<br/>  ' ;\n                let remark=(params[0].remark||'').replace(/\\n/g,\"<br/>\");\n                return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#ff2222;line-height: 25px;word-break: break-all;width: 80%;padding-top: 7px;\">\n                    ${auditTypeName}\n                    <p style=\"color:#222;\">\n                        ${params[0].auditType==0?'':remark}\n                    </p>\n                 </div>`\n            },\n            prop:'auditTypeName',\n            subText:'',\n            background:'transparent',\n        },{\n            label:'',\n            type:'html',\n            placeholder:'',\n            defaultValue:'',\n            dataHandler(auditTypeName,...params){\n                return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\"></div>`\n            },\n            prop:'auditTypeNameNoProp',\n            subText:'',\n            background:'transparent',\n        },{\n            label:'',\n            type:'html',\n            placeholder:'',\n            default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">企业信息</div>',\n            background:'transparent',\n            prop:'platformType',\n        },\n        {\n            label:'企业名称',\n            type:'input',\n            placeholder:'企业名称',\n            defaultValue:'',\n            value:'',\n            prop:'enterpriseName',\n            subText:'*最多15个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n         \n        {\n            label:'企业简介',\n            type:'input',\n            placeholder:'企业简介',\n            defaultValue:'',\n            inputType:'textarea',\n            rows:3,\n            value:'',\n            prop:'enterpriseIntroduction',\n            subText:'最多100个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px',\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n            watch:{\n                props:[\"enterpriseName\"],\n                watchValue:{\n                    enterpriseName:{\n                        \"好好啊\":true,\n                        \"ccc\":true,\n                    },\n                    dddd: (...data)=>{\n                        console.log(\">>>>>\",...data)\n                         return false\n                    },\n                    ee:null\n                }\n            }\n        },\n        {\n            label:'公司标签',\n            prop:'enterpriseLabels',\n            formData:[],\n            type:'addInput',\n            dataBus:true,\n            validateRules:[\n                {\n                    required:true\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n                        console.log(\"value\",value)\n                        if(value.split(\"||||\").length>5){\n                            callback(new Error(\"标签最多不能大于5个\"));\n                        }else{\n                            callback();\n                        }\n                        /*errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })*/\n                    },\n                    trigger:\"change\"\n                }\n            ]\n        },\n        {\n            label:'公司宣传图',\n            prop:'enterpriseShowImages',\n            formData:[],\n            defaultValue:[],\n            type:'addImages',\n            dataBus:true,\n            imagesListConfig:{\n                imageConfig:{\n                    //size:2.45*1024*1024,\n                    width:430,\n                    height:270\n                },\n                readonly:false,\n                /*validatorHandler:validatorHandler,*/\n                data:[],\n                dataBus:true,\n                maxNum:5,\n                tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n                prop:'showUrls'\n            },\n            validateRules:[\n                {\n                    required:true\n                },\n                /*{\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        console.log(\"value\",value)\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }*/\n            ]\n        },\n        {\n            label:'公司省',\n            prop:'enterpriseProvince',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'公司市',\n            prop:'enterpriseCity',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'公司区',\n            prop:'enterpriseArea',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'公司区省市区',\n            prop:'enterpriseAreaLocal',\n            cascaderOptions:cityData,\n            type:'cascader',\n            itemLabel:'label',\n            itemValue:'areaId',\n            default:[],\n            span:12,\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n        },\n        {\n            label:'详细地址',\n            type:'input',\n            placeholder:'详细地址',\n            defaultValue:'',\n            inputType:'textarea',\n            rows:3,\n            value:'',\n            prop:'enterpriseAddress',\n            subText:'最多100个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px',\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'企业头像',\n            type:'upload',\n            placeholder:'企业头像',\n            defaultValue:1,\n            value:'',\n            prop:'enterpriseIconUrl',\n            tip:'',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n\n        },\n        {\n            label:'营业执照',\n            type:'upload',\n            placeholder:'营业执照',\n            defaultValue:1,\n            value:'',\n            prop:'businessLicense',\n            tip:'请上传高清图片，仅支持PNG格式。',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n        },\n        {\n            label:'',\n            type:'html',\n            placeholder:'',\n            default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">注册人信息</div>',\n            background:'transparent',\n            prop:'labelInfoZCRXX',\n        },\n        {\n            label:'真实名称',\n            type:'input',\n            placeholder:'真实名称',\n            defaultValue:'',\n            value:'',\n            prop:'name',\n            subText:'*最多15个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'手机号码',\n            type:'input',\n            placeholder:'手机号码',\n            defaultValue:'',\n            value:'',\n            prop:'mobile',\n            subText:'*11个数字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:11,mobile:true});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'手机验证码',\n            type:'input',\n            placeholder:'手机验证码',\n            defaultValue:'',\n            value:'',\n            prop:'verificationCode',\n            subText:'*4位验证码',\n            rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n            rightBtnClick:data=>{\n                return '';\n            },\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'250px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:4});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'用户详细地址',\n            type:'textare',\n            placeholder:'用户详细地址',\n            defaultValue:1,\n            value:'',\n            prop:'userAddress',\n            items:[\n                {\n                    label:'周边商城',\n                    value:1,\n                    code:1\n                },\n                {\n                    label:'物业缴费',\n                    value:2,\n                    code:2\n                }\n            ]\n        },\n        \n        {\n            label:'用户省',\n            prop:'userProvince',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'用户市',\n            prop:'userCity',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'用户区',\n            prop:'userArea',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'用户区省市区',\n            prop:'userAreaLocal',\n            cascaderOptions:cityData,\n            type:'cascader',\n            itemLabel:'label',\n            itemValue:'areaId',\n            default:[],\n            span:12,\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n        },\n        {\n            label:'详细地址',\n            type:'input',\n            placeholder:'详细地址',\n            defaultValue:'',\n            inputType:'textarea',\n            rows:3,\n            value:'',\n            prop:'userAddress',\n            subText:'最多100个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px',\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'身份证号码',\n            type:'input',\n            placeholder:'身份证号码',\n            defaultValue:'',\n            value:'',\n            subText:'<span style=\"margin-left: 20px;color:#21211f;\">请输入正确的身份证号码</span>',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto'\n            },\n            prop:'idCard',\n            tip:'',\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,minlength:16,maxlength:18});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'身份证正面',\n            type:'upload',\n            placeholder:'身份证正面',\n            defaultValue:'',\n            value:'',\n            groupedName:'idCardGroup',\n            style:{\n                width:'auto'\n            },\n            containerStyle:{\n                width:'auto'\n            },\n            prop:'cardFrontUrl',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ],\n        },\n        {\n            label:'身份证背面',\n            type:'upload',\n            placeholder:'身份证背面',\n            groupedName:'idCardGroup',\n            defaultValue:'',\n            value:'',\n            style:{\n                width:'auto'\n            },\n            containerStyle:{\n                width:'auto'\n            },\n            groupedStyle:{\n                display:'flex',\n                flexDirection:'row',\n                justContent:'flex-start',\n                alignItems:'center',\n                backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                width:'80%',\n                marginLeft:'10%',\n                padding: '20px 0px',\n            },\n            prop:'cardBackUrl',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ],\n        },\n        \n         \n        \n    ];\n\n    export default {\n        name: 'list',\n        components:{\n            'form-creater':formCreater\n        },\n        data(){\n            return{\n                validate:validate,\n                couponId:0,\n                dataQuery:{\n                    query:{}\n                },\n                config:{\n                    queryElements:[],\n                    cancle:this.cancle,\n                    cancleBtnStyle:{\n                        display:'none'\n                    },\n                    saveBtnlabel:'保存信息'\n                },\n                timeDownId:0,\n                canSendCode:true,\n            }\n        },\n        methods:{\n            operateClick:function (data,operate) {\n                operate['click']&&operate['click'](data)\n            },\n            saveDataStep1(params){\n                console.log(\"****9999*****\",params,this);\n                let that=this;\n\n                if(params.enterpriseAreaLocal.length==0){\n                    params.enterpriseArea=[0,0,0]\n                }\n                if(params.userAreaLocal.length==0){\n                    params.enterpriseAreaLocal=[0,0,0]\n                }\n\n                params.enterpriseProvince=params.enterpriseAreaLocal[0];\n                params.enterpriseCity=params.enterpriseAreaLocal[1];\n                params.enterpriseArea=params.enterpriseAreaLocal[2]; \n\n                params.userProvince=params.userAreaLocal[0];\n                params.userCity=params.userAreaLocal[1];\n                params.userArea=params.userAreaLocal[2]; \n\n                var templateData={\n                      \n                };\n\n                \n\n                let postData=Object.assign(params,templateData)\n                postData.userName=\"\";\n                postData.userId=this.uid;\n\n                delete postData.labelInfoZCRXX;\n                delete postData.platformType;\n                delete postData.scopeValue;\n                delete postData.enterpriseAreaLocal;\n                delete postData.userAreaLocal;\n\n                return backendService.getData({\n                    url:'/user/saveUserExtend.json',\n                    headers:{\n                        \"Content-Type\":\"application/json; charset=utf-8\"\n                    },\n                    method:\"post\",\n                    data:postData\n                }).then(function (result) {\n                    console.log(\"result\",result)\n                    if(result.code==1){\n                        that.$message({\n                            message: '信息保存成功!',\n                            type: 'success'\n                        });\n                        if(that.userInfo.userInfo.step==2){\n                            that.getUserState()\n                        }else{\n                            that.$router.push(\"/mainLayout/appManager/list/appList2\");\n                        }\n                    }else{\n                        that.$message({\n                            message: result.msg,\n                            type: 'error'\n                        });\n                    }\n\n                })\n\n            },\n            cancle(){\n                this.$router.push(\"/mainLayout/appManager/list/appList2\");\n            },\n            getUserState(){\n                let that = this;\n                this.$store.commit('GET_USER_STATE',{\n                    cb: (data)=>{\n                        if(data==1){\n                            that.$router.push('/mainLayout/activationEmail/activationEmail/'+that.form.username)\n                        }else if(data==2){\n                            that.$router.push('/mainLayout/baseInfo/companyInfo')\n                            that.queryItemInfo()\n                        }else if(data==3){\n                            that.$router.push('/mainLayout/appManager/list/appList2/')\n                        }\n                    }\n                })\n            },\n            queryItemInfo(id){\n                let url=\"/user/getUserInfo.json\";\n                let that = this;\n                backendService.getData({\n                    url:url,\n                    method:\"post\",\n                    data:{\n                    }\n                }).then(function (data) {\n                    if(data.code == '1'){\n\n                        data.data.enterpriseAreaLocal=[data.data.enterpriseProvince,data.data.enterpriseCity,data.data.enterpriseArea];\n                        data.data.userAreaLocal=[data.data.userProvince,data.data.userCity,data.data.userArea];\n\n                        that.config.queryElements=[];\n                        that.config.queryElements=queryElements;\n                        that.config.saveData=that.saveDataStep1;\n                        that.config.formData=data.data;\n                        if(data.data.auditType==0){\n                            that.config.readonly=true;\n                        }else if(data.data.auditType==2){\n                            that.config.readonly=false;\n                        }else{\n                            that.config.readonly=true;\n                        }\n                    }else{\n                        that.$message({\n                            message: data.msg,\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n            sendMobileCode(data,queryItem){\n                let url=\"/user/sendVrificationCode.json\";\n                let that = this;\n                if(!that.canSendCode){\n                    return;\n                }\n                let i=0;\n                let seconds=120;\n                let normalBtn=\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\"\n                if(this.timeDownId){\n                    this.$message({type:'error',message:\"请倒计时结束再获取!\"})\n                    return;\n                }\n                if(!/^\\d{11}$/.test(data.mobile)){\n                    that.$message({\n                            message: '请填写手机号码',\n                            type: 'error'\n                    });  \n                    return;    \n                }\n                that.canSendCode=false;\n                backendService.getData({\n                    url:url,\n                    method:\"post\",\n                    data:{\n                        mobile:data.mobile\n                    }\n                }).then(function (data) {\n                    if(data.code == '1'){\n                        that.$message({\n                            message: '验证码已发送',\n                            type: 'success'\n                        });\n                        that.timeDownId&&clearInterval(that.timeDownId)\n                        that.timeDownId=setInterval(data=>{\n                            queryItem.rightBtn=`<span style='border:1px solid #eee;padding:0px 15px;text-align:center;border-radius:5px;display:inline-block;margin-left:15px;color:#ddd;'><span style=\"color: #f00;\">${seconds-++i}</span>秒后重新获取</span>`\n                            if(seconds-i<=0){\n                                clearInterval(that.timeDownId);\n                                that.timeDownId=0;\n                                queryItem.rightBtn=normalBtn;\n                                that.canSendCode=true;\n                            }\n                        },1000)\n                    }else{\n                        that.$message({\n                            message: data.msg,\n                            type: 'error'\n                        });\n                        that.canSendCode=true;\n                    }\n                })\n            }\n\n        },\n        computed:mapState({\n            userInfo: state => state.login,\n            uid: state => state.login.uid,\n            username: state => state.login.username,\n        }),\n        created() {\n\n            let that=this;\n                that.config.queryElements=queryElements;\n                that.config.saveData=that.saveDataStep1;\n                this.config.readonly=false;\n        }\n    }\n</script>\n\n<style scoped>\n    #container {\n        height: 300px;\n        width:800px;\n    }\n\n    .queryElement{\n        display: block;\n        width: 100%;\n        border:0px solid #f00;\n    }\n</style>\n<style>\n        .el-step__title,.el-step__description{\n                text-align: center;\n        }\n</style>\n"],"sourceRoot":"src/views/baseInfo"}]}