{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/eslint-loader/index.js??ref--13-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/validate/validate.js","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/validate/validate.js","mtime":1553072541567},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Promise from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport _typeof from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\n\n/**\n * Created by xkfeng on 2017/7/11.\n */\nimport backendService from \"./../remoteService/backendService\";\n/**\n * 复杂校验 完成 非空、字符(长度，maxlength,minlength)、数字(大小，位数 如 12.31  maxvalue,minvalue)、mobile、email、url、remote(异步远程校验。。可以携带参数)\n * 异步校验会发生在最后\n * @param value 表单元素值\n *  *\n * 一个完整的配置说明\n *  rulues:{\n *      required:true,\n *      mobile:true,//手机号码\n *      number:\"##.###\",//数字校验 占位符 整数位不大于2位 小数位最多3位 如99.999 9.99 9.9 9 0.9\n *      email:true,//邮箱\n *      url:true,//网址\n *      maxlength:19,//最大长度19个字符\n *      minlength:4,//最小长度4个字符\n *      maxvalue:11.12, //最大值为11.12 大一点都不行\n *      minvalue:11.11, //最小值为11.11 小一点都不行\n *      remote:true,//需要远程校验 服务参通过另外一个参数配置\n *\n *  }\n *\n * @param rulues //校验规则\n *\n *\n * param={\n *      remoteValidateRequiredParam:{\n *              provinceId:\"\",//自动取当前表单对应属性值用于请求参数\n *              id:\"\",//取当前表单的id域值作为查询参数\n *              name:\"\",//取当前表单name域值作为查询参数\n *\n *      },//依赖属性 用于请求时候携带的相干参数  比如 需要店铺全省不同名 此时需要依赖 provinceId id name 三个属性\n *      alias:{\n *                  provinceCode:\"provinceId\" //将参数参数名称 provinceCode以provinceId 名称查询 给查询参数取别名\n *              },//查询参数别名\n *      form:{},//当前表单引用 用于依赖请求校验或冲突校验\n *\n * }\n *\n *\n * @param param 异步校验参数配置 如商品名称全商家不重名，此时商户id可以配置上就可以自动携带作为查询条件\n\n * @param remoteService 远程异步校验服务地址配置对象 {httpMethod:\"post\",url:\"wwww.baidu.com\"}\n * @returns {{}} 返回验证结果 Promise实例(异步校验)\n */\n\nfunction baseValidate(value, rulues, param, remoteService) {\n  var _this = this;\n\n  var error = {};\n  var promise = null;\n  value = value || \"\";\n\n  var _loop2 = function _loop2(key) {\n    ////console.log(\"prop\",param.prop,\"keykeykey\",key)\n    var ruleValue = rulues[key];\n\n    if (key == \"required\" && value == \"\" && ruleValue) {\n      error[key] = \"不能为空\";\n      return \"break\";\n    } else if (key == \"maxlength\" && value.length > ruleValue) {\n      error[key] = \"不能超过\" + ruleValue + \"字符\";\n      return \"break\";\n    } else if (key == \"password\" && value.length > ruleValue) {\n      var passwordReg = /(?=.*\\d)(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{8,30}/;\n\n      if (passwordReg.test(value)) {\n        error[key] = \"密码中必须包含字母、数字、特称字符，至少8个字符，最多30个字符。\";\n        return \"break\";\n      }\n    } else if (key == \"minlength\" && value.length < ruleValue) {\n      error[key] = \"不能少于\" + ruleValue + \"字符\";\n      return \"break\";\n    } else if (key == \"number\" && value != \"\") {\n      value += \"\";\n      var numberCheckResult = /^\\d+(\\.\\d+)?$/.test(value); //console.log(\"numberCheckResult\",numberCheckResult)\n\n      if (!numberCheckResult) {\n        error[key] = \"请输入数字！\";\n        return \"break\";\n      } //console.log(\"ruleValue\",ruleValue)\n\n\n      var pattenStr = ruleValue;\n      var splitArr = pattenStr.split(\".\");\n      var aboveZero = null;\n      var bellowZero = \"\";\n\n      if (splitArr.length == 2) {\n        aboveZero = pattenStr.split(\".\")[0];\n        bellowZero = pattenStr.split(\".\")[1];\n      } else if (splitArr.length == 1) {\n        aboveZero = pattenStr.split(\".\")[0];\n      }\n\n      var valueArr = value.split(\".\");\n      var valueAboveZero = null;\n      var valueBellowZero = \"\";\n\n      if (valueArr.length == 2) {\n        valueAboveZero = value.split(\".\")[0];\n        valueBellowZero = value.split(\".\")[1];\n      } else if (valueArr.length == 1) {\n        valueAboveZero = value.split(\".\")[0];\n      }\n\n      if (/^0\\d+/.test(valueAboveZero)) {\n        error[key] = \"请输入合法数字,整数不能以两个0开头\";\n      } else if (valueAboveZero.length > aboveZero.length) {\n        error[key] = \"请输入合法数字,只允许\" + aboveZero.length + \"位整数\";\n      } else if (valueBellowZero.length > bellowZero.length) {\n        error[key] = \"请输入合法数字,只允许\" + bellowZero.length + \"位小数\";\n\n        if (bellowZero.length == 0) {\n          error[key] = \"请输入整数\";\n        }\n      } else if (valueBellowZero.length == 0 && valueArr.length == 2) {\n        error[key] = \"请输入合法数字,小数位不能为空！\";\n      }\n\n      if (rulues[\"maxvalue\"] || rulues[\"minvalue\"]) {} else {\n        return \"break\";\n      }\n    } else if (key == \"email\" && !/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(value)) {\n      error[key] = \"请输入合法邮箱！\";\n      return \"break\";\n    } else if (key == \"version\" && !/^[vV](\\d)+(\\.\\d+)*$/.test(value)) {\n      error[key] = \"版本号不正确 如 v1.2.3\";\n      return \"break\";\n    } else if (key == \"url\" && !/(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/.test(value)) {\n      error[key] = \"请输入合法地址\";\n      return \"break\";\n    } else if (key == \"mobile\" && !/^\\d{11}$/.test(value)) {\n      error[key] = \"请输入11位手机号码！\";\n      return \"break\";\n    } else if (key == \"maxvalue\" && value * 1 > ruleValue * 1) {\n      error[key] = \"不能大于\" + ruleValue;\n      return \"break\";\n    } else if (key == \"minvalue\" && value * 1 < ruleValue * 1) {\n      error[key] = \"不能小于\" + ruleValue;\n      return \"break\";\n    } else if (key == \"gt\") {\n      var targetValue = param[ruleValue] ? param[ruleValue] * 1 : 0;\n\n      if (targetValue >= value * 1) {\n        error[key] = \"不能小于\" + targetValue;\n        return \"break\";\n      }\n    } else if (key == \"lt\") {\n      var _targetValue = param[ruleValue] ? param[ruleValue] * 1 : 0;\n\n      if (_targetValue <= value * 1) {\n        error[key] = \"不能大于\" + _targetValue;\n        return \"break\";\n      }\n    } else if (key == \"eq\") {\n      var _targetValue2 = param[ruleValue];\n\n      if (_targetValue2 != value) {\n        error[key] = \"值不相等同\";\n        return \"break\";\n      }\n    } else if (key == \"checkboxRequired\") {\n      var grandfather = param[\"grandfather\"];\n      var formGroup = param[\"formGroup\"];\n\n      if (!formGroup) {\n        return \"continue\";\n      }\n\n      var grandfatherControl = formGroup.get(grandfather);\n      var lazyTimerId = setTimeout(function () {\n        var checkedNum = grandfatherControl.controls.filter(function (optionControl) {\n          return optionControl.value.checked;\n        }).length;\n\n        if (checkedNum == 0) {\n          grandfatherControl.setErrors({\n            \"required\": \"至少得选择一个吧！\"\n          });\n        }\n\n        clearTimeout(lazyTimerId);\n      }, 10);\n    } else if (key == \"arrayUploadRequired\") {\n      error = {};\n\n      var _grandfather = param[\"grandfather\"] + \"LinkValidate\";\n\n      var _formGroup = param[\"formGroup\"];\n\n      if (!_formGroup) {\n        return \"continue\";\n      }\n\n      var _grandfatherControl = _formGroup.get(_grandfather); //console.log(\"grandfatherControl\",grandfatherControl)\n\n\n      if (prop.parent) {\n        var _lazyTimerId = setTimeout(function () {\n          var checkedNum = prop.parent.parent.controls.filter(function (optionControl) {\n            if (optionControl instanceof FormGroup) {\n              return optionControl[\"value\"].value.imgId;\n            } else {\n              return optionControl.value.value.imgId;\n            }\n          }).length;\n\n          if (checkedNum < rulues[\"arrayUploadRequired\"] * 1) {\n            _grandfatherControl.setErrors({\n              \"required\": \"得至少上传！\" + rulues[\"arrayUploadRequired\"] + \"个图吧！\"\n            });\n\n            _grandfatherControl.setValue(\"得至少上传！\" + rulues[\"arrayUploadRequired\"] + \"个图吧！\");\n\n            _grandfatherControl.updateValueAndValidity(true, true);\n          } else {\n            _grandfatherControl.setErrors({});\n\n            _grandfatherControl.setValue(\"\");\n          }\n\n          clearTimeout(_lazyTimerId);\n        }, 10);\n      }\n    } else if (key == \"checkboxWatchers\") {\n      error = {};\n      var propName = param[\"prop\"];\n      var formModel = param[\"formModel\"];\n      var _formGroup2 = param[\"formGroup\"];\n\n      if (_formGroup2) {\n        var queryParam = {};\n        var _grandfather2 = param[\"grandfather\"];\n\n        if (!_formGroup2) {\n          return \"continue\";\n        }\n\n        var _grandfatherControl2 = _formGroup2.get(_grandfather2);\n\n        var _lazyTimerId2 = setTimeout(function () {\n          _grandfatherControl2.controls.forEach(function (optionControl) {\n            var isChecked = optionControl.value.checked;\n            var optionValue = optionControl.value.value;\n\n            for (var queryProp in formModel.elements) {\n              var item = formModel.elements[queryProp];\n              var innerProp = item.prop;\n\n              if (propName != innerProp && item.switcher && item.switcher[0].prop == propName) {\n                var watchersControl = _formGroup2.get(innerProp);\n\n                var watcherValue = item.switcher[0].showValue;\n\n                if (watcherValue == optionValue) {\n                  if (isChecked) {\n                    watchersControl.enable({\n                      onlySelf: false,\n                      emitEvent: false\n                    });\n                    item.hidden = false;\n                  } else {\n                    watchersControl.disable({\n                      onlySelf: false,\n                      emitEvent: false\n                    });\n                    item.hidden = true;\n                  }\n                }\n              }\n            }\n          });\n\n          clearTimeout(_lazyTimerId2);\n        }, 10);\n      }\n\n      return \"break\";\n    } else if (key == \"arrayWatchers\") {\n      error = {};\n      if (!prop.parent) return {\n        v: void 0\n      };\n      var _propName = prop.parent.controls[\"prop\"].value; // who am i\n\n      var _formModel = param[\"formModel\"];\n      var _formGroup3 = param[\"formGroup\"];\n\n      if (_formGroup3) {\n        var _queryParam = {};\n        var _grandfather3 = param[\"grandfather\"];\n\n        if (!_formGroup3) {\n          return \"continue\";\n        }\n\n        var formValues = {};\n\n        _formGroup3.value[_grandfather3].forEach(function (item) {\n          formValues[item.prop] = item.value;\n        });\n\n        var _grandfatherControl3 = _formGroup3.get(_grandfather3);\n\n        _formModel.elements.forEach(function (element) {\n          if (element.type == \"array\" && element.keyPropMap && _grandfather3 == element.prop) {\n            element.options.forEach(function (option) {\n              if (option.switchers && option.switchers.length > 0 && option.switchers[0].prop == _propName) {\n                if (option.remoteInfo != null) {\n                  option.remoteInfo.param[option.remoteInfo.param[\"extend\"]] = value;\n\n                  if (option.remoteInfo.propMap) {\n                    for (var propKey in option.remoteInfo.propMap) {\n                      option.remoteInfo.param[option.remoteInfo.propMap[propKey]] = propKey == _propName ? value : formValues[propKey];\n                    }\n                  }\n\n                  if (value == \"\" || value == null) {\n                    option[\"options\"] = option.remoteInfo.convert({});\n                  } else {\n                    ////console.log(\"element\",element.prop)\n                    _this.listData({\n                      url: option.remoteInfo.url,\n                      param: option.remoteInfo.param,\n                      httpMethod: option.remoteInfo.httpMethod\n                    }).subscribe(function (data) {\n                      option[\"options\"] = option.remoteInfo.convert(data.json()) || data.json();\n                    });\n                  }\n                }\n              }\n            });\n          }\n        });\n\n        _grandfatherControl3.controls.forEach(function (optionControl) {\n          if (optionControl.controls[\"switchers\"] && optionControl.controls[\"switchers\"].value[\"prop\"] == _propName && optionControl.controls[\"value\"].value != \"\") {\n            optionControl.controls[\"value\"].setValue(\"\");\n          }\n        }); //formGroup.get(grandfather+\"LinkValidate\").setErrors({});\n\n      }\n\n      return \"break\";\n    } else if (key == \"watchers\") {\n      error = {};\n      var _propName2 = param[\"prop\"];\n      var _formModel2 = param[\"formModel\"];\n      var _formGroup4 = prop.parent;\n\n      if (_formGroup4) {\n        var _queryParam2 = {};\n\n        for (var queryProp in _formModel2.elements) {\n          var item = _formModel2.elements[queryProp];\n          var innerProp = item.prop;\n\n          if (_propName2 != innerProp && item.switcher && item.switcher[0].prop == _propName2) {\n            var watchersControl = _formGroup4.get(innerProp);\n\n            var watcherValue = item.switcher[0].showValue;\n\n            if (watcherValue == prop.value) {\n              watchersControl.enable({\n                onlySelf: false,\n                emitEvent: false\n              });\n              item.hidden = false;\n            } else {\n              watchersControl.disable({\n                onlySelf: false,\n                emitEvent: false\n              });\n              item.hidden = true;\n            }\n          }\n        }\n      }\n\n      return \"break\";\n    } else if (key == \"remote\") {\n      //http 远程验证。。。\n      ////console.log(\"paramparamparam\",param)\n      var _formGroup5 = param.form;\n\n      if (_formGroup5) {\n        var _queryParam3 = {};\n        var alias = param.alias || {}; //别名请求比如省id为provinceId 实际请求参数名称为pId 属性名称与请求参数不一致的时候使用尽管不常用但是有可能用得到\n\n        for (var _queryProp in param.remoteValidateRequiredParam) {\n          if (!_formGroup5.hasOwnProperty(_queryProp)) {\n            continue;\n          }\n\n          _queryParam3[_queryProp] = _formGroup5[_queryProp];\n\n          if (alias[_queryProp]) {\n            _queryParam3[alias[_queryProp]] = _queryParam3[_queryProp];\n          }\n        }\n\n        promise = remoteValidate({\n          body: _queryParam3,\n          value: value\n        }, remoteService);\n      }\n    } else if (key == \"promise\") {\n      error = {}; //异步校验 返回promise。\n      ////console.log(\"paramparamparam\",param)\n\n      promise = new _Promise(function (resolve, reject) {\n        ruleValue({\n          value: value\n        }).then(function (success) {\n          //console.log(\"success\",success)\n          resolve(success);\n        }, function (errorData) {\n          reject({\n            errorData: errorData\n          });\n        });\n      });\n    }\n  };\n\n  _loop: for (var key in rulues) {\n    var _ret = _loop2(key);\n\n    switch (_ret) {\n      case \"break\":\n        break _loop;\n\n      case \"continue\":\n        continue;\n\n      default:\n        if (_typeof(_ret) === \"object\") return _ret.v;\n    }\n  }\n\n  var errorMessage = \"\";\n  var errorCode = \"\";\n\n  for (var message in error) {\n    errorMessage += error[message];\n    errorCode += message;\n  }\n\n  return promise ? promise : new _Promise(function (resolve) {\n    return resolve({\n      msg: errorMessage,\n      errorCode: errorCode,\n      code: errorMessage == \"\" ? 1 : 0\n    });\n  });\n}\n/**\n * 远程异步校验 放在这里是为了这个校验比较复杂 需要单独处理\n * @param param 校验参数\n */\n\n\nfunction remoteValidate(param, remoteService) {\n  var queryParam = {\n    url: remoteService.url,\n    baseUrl: remoteService.baseUrl,\n    data: param.body,\n    method: remoteService.httpMethod\n  };\n  return backendService.getData(queryParam);\n}\n/*\n* 错误提示信息\n*\n* */\n\n\nvar errorMessageMap = {\n  required: function required(param) {\n    return param.label + '不能为空';\n  },\n  maxlength: function maxlength(param) {\n    return param.label + \"最多允许输入\" + param.length + \"字符\";\n  },\n  minlength: function minlength(param) {\n    return param.label + \"至少输入\" + param.length + \"字符\";\n  },\n  number: function number(param) {\n    return param.label + \"必须为数字\";\n  },\n  integer: function integer(param) {\n    return param.label + \"必须为数字\";\n  },\n  email: function email(param) {\n    return param.label + \"应该是合法的邮箱地址\";\n  },\n  mobile: function mobile(param) {\n    return param.label + \"必须为11位手机号码\";\n  },\n  password: function password(param) {\n    return param.label + \"复杂度不够\";\n  },\n  version: function version(param) {\n    return param.label + \"版本号不正确\";\n  }\n};\nvar validator = {\n  validator: baseValidate,\n  errorMessageMap: errorMessageMap\n};\nexport default validator;",{"version":3,"sources":["/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/validate/validate.js"],"names":["backendService","baseValidate","value","rulues","param","remoteService","error","promise","key","ruleValue","length","passwordReg","test","numberCheckResult","pattenStr","splitArr","split","aboveZero","bellowZero","valueArr","valueAboveZero","valueBellowZero","targetValue","grandfather","formGroup","grandfatherControl","get","lazyTimerId","setTimeout","checkedNum","controls","filter","optionControl","checked","setErrors","clearTimeout","prop","parent","FormGroup","imgId","setValue","updateValueAndValidity","propName","formModel","queryParam","forEach","isChecked","optionValue","queryProp","elements","item","innerProp","switcher","watchersControl","watcherValue","showValue","enable","onlySelf","emitEvent","hidden","disable","formValues","element","type","keyPropMap","options","option","switchers","remoteInfo","propMap","propKey","convert","listData","url","httpMethod","subscribe","data","json","form","alias","remoteValidateRequiredParam","hasOwnProperty","remoteValidate","body","resolve","reject","then","success","errorData","errorMessage","errorCode","message","msg","code","baseUrl","method","getData","errorMessageMap","required","label","maxlength","minlength","number","integer","email","mobile","password","version","validator"],"mappings":"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","sourcesContent":["/**\n * Created by xkfeng on 2017/7/11.\n */\n\nimport backendService from \"./../remoteService/backendService\";\n\n/**\n * 复杂校验 完成 非空、字符(长度，maxlength,minlength)、数字(大小，位数 如 12.31  maxvalue,minvalue)、mobile、email、url、remote(异步远程校验。。可以携带参数)\n * 异步校验会发生在最后\n * @param value 表单元素值\n *  *\n * 一个完整的配置说明\n *  rulues:{\n *      required:true,\n *      mobile:true,//手机号码\n *      number:\"##.###\",//数字校验 占位符 整数位不大于2位 小数位最多3位 如99.999 9.99 9.9 9 0.9\n *      email:true,//邮箱\n *      url:true,//网址\n *      maxlength:19,//最大长度19个字符\n *      minlength:4,//最小长度4个字符\n *      maxvalue:11.12, //最大值为11.12 大一点都不行\n *      minvalue:11.11, //最小值为11.11 小一点都不行\n *      remote:true,//需要远程校验 服务参通过另外一个参数配置\n *\n *  }\n *\n * @param rulues //校验规则\n *\n *\n * param={\n *      remoteValidateRequiredParam:{\n *              provinceId:\"\",//自动取当前表单对应属性值用于请求参数\n *              id:\"\",//取当前表单的id域值作为查询参数\n *              name:\"\",//取当前表单name域值作为查询参数\n *\n *      },//依赖属性 用于请求时候携带的相干参数  比如 需要店铺全省不同名 此时需要依赖 provinceId id name 三个属性\n *      alias:{\n *                  provinceCode:\"provinceId\" //将参数参数名称 provinceCode以provinceId 名称查询 给查询参数取别名\n *              },//查询参数别名\n *      form:{},//当前表单引用 用于依赖请求校验或冲突校验\n *\n * }\n *\n *\n * @param param 异步校验参数配置 如商品名称全商家不重名，此时商户id可以配置上就可以自动携带作为查询条件\n\n * @param remoteService 远程异步校验服务地址配置对象 {httpMethod:\"post\",url:\"wwww.baidu.com\"}\n * @returns {{}} 返回验证结果 Promise实例(异步校验)\n */\nfunction baseValidate(value,rulues,param,remoteService){\n    let error={};\n    let promise=null;\n         value=value||\"\";\n\n    for(let key in rulues){\n        ////console.log(\"prop\",param.prop,\"keykeykey\",key)\n        let ruleValue=rulues[key];\n        if(key==\"required\"&&value==\"\"&&ruleValue){\n            error[key]=\"不能为空\";\n            break;\n        }else if(key==\"maxlength\"&&value.length>ruleValue){\n            error[key]=\"不能超过\"+ruleValue+\"字符\";\n            break;\n        }else if(key==\"password\"&&value.length>ruleValue){\n            let passwordReg=/(?=.*\\d)(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9]).{8,30}/;\n            if(passwordReg.test(value)){\n                error[key]=\"密码中必须包含字母、数字、特称字符，至少8个字符，最多30个字符。\";\n                break;\n            }\n        }else if(key==\"minlength\"&&value.length<ruleValue){\n            error[key]=\"不能少于\"+ruleValue+\"字符\";\n            break;\n        }else if(key==\"number\"&&value!=\"\"){\n            value+=\"\";\n            let numberCheckResult=/^\\d+(\\.\\d+)?$/.test(value);\n            //console.log(\"numberCheckResult\",numberCheckResult)\n            if(!numberCheckResult){\n                error[key]=\"请输入数字！\";\n                break;\n            }\n            //console.log(\"ruleValue\",ruleValue)\n            let pattenStr=ruleValue;\n            let splitArr=pattenStr.split(\".\");\n            let aboveZero=null;\n            let bellowZero=\"\";\n            if(splitArr.length==2){\n                aboveZero=pattenStr.split(\".\")[0];\n                bellowZero=pattenStr.split(\".\")[1];\n            }else if(splitArr.length==1){\n                aboveZero=pattenStr.split(\".\")[0];\n            }\n            let valueArr=value.split(\".\");\n            let valueAboveZero=null;\n            let valueBellowZero=\"\";\n            if(valueArr.length==2){\n                valueAboveZero=value.split(\".\")[0];\n                valueBellowZero=value.split(\".\")[1];\n            }else if(valueArr.length==1){\n                valueAboveZero=value.split(\".\")[0];\n            }\n\n            if(/^0\\d+/.test(valueAboveZero)){\n                error[key]=\"请输入合法数字,整数不能以两个0开头\";\n            }else if(valueAboveZero.length>aboveZero.length){\n                error[key]=\"请输入合法数字,只允许\"+aboveZero.length+\"位整数\";\n            }else if(valueBellowZero.length>bellowZero.length){\n                error[key]=\"请输入合法数字,只允许\"+bellowZero.length+\"位小数\";\n                if(bellowZero.length==0){\n                    error[key]=\"请输入整数\";\n                }\n            }else if(valueBellowZero.length==0&&valueArr.length==2){\n                error[key]=\"请输入合法数字,小数位不能为空！\";\n            }\n            if(rulues[\"maxvalue\"]||rulues[\"minvalue\"]){\n\n            }else{\n                break;\n            }\n        }else if(key==\"email\"&&!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(value)){\n            error[key]=\"请输入合法邮箱！\";\n            break;\n        }else if(key==\"version\"&&!/^[vV](\\d)+(\\.\\d+)*$/.test(value)){\n            error[key]=\"版本号不正确 如 v1.2.3\";\n            break;\n        }else if(key==\"url\"&&!/(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/.test(value)){\n            error[key]=\"请输入合法地址\";\n            break;\n        }else if(key==\"mobile\"&&!/^\\d{11}$/.test(value)){\n            error[key]=\"请输入11位手机号码！\";\n            break;\n        }else if(key==\"maxvalue\"&&value*1>ruleValue*1){\n            error[key]=\"不能大于\"+ruleValue;\n            break;\n        }else if(key==\"minvalue\"&&value*1<ruleValue*1){\n            error[key]=\"不能小于\"+ruleValue;\n            break;\n        }else if(key==\"gt\"){\n            let targetValue=param[ruleValue]?param[ruleValue]*1:0;\n            if(targetValue>=value*1){\n                error[key]=\"不能小于\"+targetValue;\n                break;\n            }\n        }else if(key==\"lt\"){\n            let targetValue=param[ruleValue]?param[ruleValue]*1:0;\n            if(targetValue<=value*1){\n                error[key]=\"不能大于\"+targetValue;\n                break;\n            }\n        }else if(key==\"eq\"){\n            let targetValue=param[ruleValue];\n            if(targetValue!=value){\n                error[key]=\"值不相等同\";\n                break;\n            }\n        }else if(key==\"checkboxRequired\"){\n            let grandfather=param[\"grandfather\"];\n            let formGroup=param[\"formGroup\"];\n            if(!formGroup){\n                continue;\n            }\n            let grandfatherControl=formGroup.get(grandfather);\n            let lazyTimerId=setTimeout(function () {\n                let checkedNum=grandfatherControl.controls.filter((optionControl)=>{\n                    return optionControl.value.checked;\n                }).length;\n                if(checkedNum==0){\n                    grandfatherControl.setErrors({\"required\":\"至少得选择一个吧！\"});\n                }\n                clearTimeout(lazyTimerId);\n            },10);\n        }else if(key==\"arrayUploadRequired\"){\n            error= {};\n            let grandfather=param[\"grandfather\"]+\"LinkValidate\";\n            let formGroup=param[\"formGroup\"];\n            if(!formGroup){\n                continue;\n            }\n            let grandfatherControl=formGroup.get(grandfather);\n            //console.log(\"grandfatherControl\",grandfatherControl)\n            if(prop.parent){\n                let lazyTimerId=setTimeout(function () {\n                    let checkedNum=prop.parent.parent.controls.filter((optionControl)=>{\n                        if(optionControl instanceof FormGroup ){\n                            return optionControl[\"value\"].value.imgId;\n                        }else{\n                            return optionControl.value.value.imgId;\n                        }\n                    }).length;\n                    if(checkedNum<rulues[\"arrayUploadRequired\"]*1){\n                        grandfatherControl.setErrors({\"required\":\"得至少上传！\"+rulues[\"arrayUploadRequired\"]+\"个图吧！\"});\n                        grandfatherControl.setValue(\"得至少上传！\"+rulues[\"arrayUploadRequired\"]+\"个图吧！\");\n                        grandfatherControl.updateValueAndValidity(true,true);\n                    }else{\n                        grandfatherControl.setErrors({});\n                        grandfatherControl.setValue(\"\");\n                    }\n                    clearTimeout(lazyTimerId);\n                },10);\n            }\n        }else if(key==\"checkboxWatchers\"){\n            error= {};\n            let propName=param[\"prop\"];\n            let formModel=param[\"formModel\"];\n            let formGroup=param[\"formGroup\"];\n            if(formGroup){\n                let queryParam={};\n                let grandfather=param[\"grandfather\"];\n                if(!formGroup){\n                    continue;\n                }\n                let grandfatherControl=formGroup.get(grandfather);\n                let lazyTimerId=setTimeout(function () {\n                    grandfatherControl.controls.forEach((optionControl)=>{\n                        let isChecked=optionControl.value.checked;\n                        let optionValue=optionControl.value.value;\n                        for(let queryProp in formModel.elements){\n                            let item=formModel.elements[queryProp];\n                            let innerProp=item.prop;\n                            if(propName!=innerProp&&item.switcher&&item.switcher[0].prop==propName){\n                                let watchersControl=formGroup.get(innerProp);\n                                let watcherValue=item.switcher[0].showValue;\n                                if(watcherValue==optionValue){\n                                    if(isChecked){\n                                        watchersControl.enable({onlySelf:false,emitEvent:false});\n                                        item.hidden=false;\n                                    }else{\n                                        watchersControl.disable({onlySelf:false,emitEvent:false});\n                                        item.hidden=true;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                    clearTimeout(lazyTimerId);\n                },10);\n            }\n            break;\n        }else if(key==\"arrayWatchers\"){\n            error= {};\n            if(!prop.parent) return;\n            let propName=prop.parent.controls[\"prop\"].value;// who am i\n            let formModel=param[\"formModel\"];\n            let formGroup=param[\"formGroup\"];\n            if(formGroup){\n                let queryParam={};\n                let grandfather=param[\"grandfather\"];\n                if(!formGroup){\n                    continue;\n                }\n                let formValues={};\n                formGroup.value[grandfather].forEach((item)=>{\n                    formValues[item.prop]=item.value;\n                });\n                let grandfatherControl=formGroup.get(grandfather);\n                formModel.elements.forEach((element)=>{\n                    if(element.type==\"array\"&&element.keyPropMap&&grandfather==element.prop){\n                        element.options.forEach((option)=>{\n                            if(option.switchers&&option.switchers.length>0&&option.switchers[0].prop==propName){\n                                if(option.remoteInfo!=null){\n                                    option.remoteInfo.param[option.remoteInfo.param[\"extend\"]]=value;\n                                    if(option.remoteInfo.propMap){\n                                        for(let propKey in option.remoteInfo.propMap){\n                                            option.remoteInfo.param[option.remoteInfo.propMap[propKey]]=propKey==propName?value:formValues[propKey];\n                                        }\n                                    }\n                                    if(value==\"\"||value==null){\n                                        option[\"options\"]=option.remoteInfo.convert({});\n                                    }else{\n                                        ////console.log(\"element\",element.prop)\n                                        this.listData({url:option.remoteInfo.url,param:option.remoteInfo.param,httpMethod:option.remoteInfo.httpMethod}).subscribe((data)=>{\n                                            option[\"options\"]=option.remoteInfo.convert(data.json())||data.json();\n                                        });\n                                    }\n                                }\n                            }\n                        })\n                    }\n                })\n                grandfatherControl.controls.forEach((optionControl)=>{\n                    if(optionControl.controls[\"switchers\"]&&optionControl.controls[\"switchers\"].value[\"prop\"]==propName&&optionControl.controls[\"value\"].value!=\"\"){\n                        optionControl.controls[\"value\"].setValue(\"\");\n                    }\n                });\n                //formGroup.get(grandfather+\"LinkValidate\").setErrors({});\n            }\n            break;\n        }else if(key==\"watchers\"){\n            error= {};\n            let propName=param[\"prop\"];\n            let formModel=param[\"formModel\"];\n            let formGroup=prop.parent;\n            if(formGroup){\n                let queryParam={};\n                for(let queryProp in formModel.elements){\n                    let item=formModel.elements[queryProp];\n                    let innerProp=item.prop;\n                    if(propName!=innerProp&&item.switcher&&item.switcher[0].prop==propName){\n                        let watchersControl=formGroup.get(innerProp);\n                        let watcherValue=item.switcher[0].showValue;\n                        if(watcherValue==prop.value){\n                            watchersControl.enable({onlySelf:false,emitEvent:false});\n                            item.hidden=false;\n                        }else{\n                            watchersControl.disable({onlySelf:false,emitEvent:false});\n                            item.hidden=true;\n                        }\n                    }\n                }\n            }\n            break;\n        }else if(key==\"remote\"){\n            //http 远程验证。。。\n            ////console.log(\"paramparamparam\",param)\n            let formGroup=param.form;\n            if(formGroup){\n                let queryParam={};\n                let alias=param.alias||{};//别名请求比如省id为provinceId 实际请求参数名称为pId 属性名称与请求参数不一致的时候使用尽管不常用但是有可能用得到\n                for(let queryProp in param.remoteValidateRequiredParam){\n                    if(!formGroup.hasOwnProperty(queryProp)){\n                        continue;\n                    }\n                    queryParam[queryProp]=formGroup[queryProp];\n                    if(alias[queryProp]){\n                        queryParam[alias[queryProp]]=queryParam[queryProp];\n                    }\n                }\n                promise=remoteValidate({body:queryParam,value:value},remoteService);\n            }\n        }else if(key==\"promise\"){\n            error= {};\n            //异步校验 返回promise。\n            ////console.log(\"paramparamparam\",param)\n                promise=new Promise(function (resolve,reject) {\n                    ruleValue({value:value}).then(success=>{\n                        //console.log(\"success\",success)\n                        resolve(success);\n                    },errorData=>{\n                        reject({errorData});\n                    });\n                })\n        }\n    }\n    let errorMessage=\"\";\n    let errorCode=\"\";\n    for(let message in error){\n        errorMessage+=error[message];\n        errorCode+=message;\n    }\n    return promise?promise:new Promise((resolve)=>resolve({msg:errorMessage,errorCode:errorCode,code:errorMessage==\"\"?1:0}));\n}\n\n/**\n * 远程异步校验 放在这里是为了这个校验比较复杂 需要单独处理\n * @param param 校验参数\n */\nfunction remoteValidate(param,remoteService){\n    let queryParam={\n        url:remoteService.url,\n        baseUrl:remoteService.baseUrl,\n        data:param.body,\n        method:remoteService.httpMethod\n    };\n    return  backendService.getData(queryParam);\n}\n\n/*\n* 错误提示信息\n*\n* */\nconst errorMessageMap={\n    required:(param)=>param.label+'不能为空',\n    maxlength:(param)=>param.label+\"最多允许输入\"+param.length+\"字符\",\n    minlength:(param)=>param.label+\"至少输入\"+param.length+\"字符\",\n    number:(param)=>param.label+\"必须为数字\",\n    integer:(param)=>param.label+\"必须为数字\",\n    email:(param)=>param.label+\"应该是合法的邮箱地址\",\n    mobile:(param)=>param.label+\"必须为11位手机号码\",\n    password:(param)=>param.label+\"复杂度不够\",\n    version:(param)=>param.label+\"版本号不正确\",\n}\nconst validator={validator:baseValidate,errorMessageMap:errorMessageMap}\nexport  default validator;"]}]}