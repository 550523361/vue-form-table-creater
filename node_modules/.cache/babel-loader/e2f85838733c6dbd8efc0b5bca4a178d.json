{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/views/templateModuleManager/list/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/views/templateModuleManager/list/index.vue","mtime":1553590927201},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _Object$assign from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _Array$isArray from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport _Promise from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _typeof from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport _Object$keys from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport _JSON$stringify from \"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport backendService from '../../../components/remoteService/backendService';\nimport listTable from '../../../components/tableList/listTable';\nimport baseTableConfig from '../../../components/tableList/TabListConfig';\nimport addQueryElement from '../../../components/formCreater/addQueryElement';\nimport createFormElement from '../../../components/formCreater/createFormElement';\nimport { formatDate } from '../../../components/format/format';\nimport validate from './../../../components/validate/validate';\nimport formCreater from './../../../components/formCreater/baseFormCreater';\nvar tableListConfig = JSON.parse(_JSON$stringify(baseTableConfig));\nvar baseBtnStyle = tableListConfig.baseBtnStyle;\nimport moduleConfigTemplateData from './../config/moduleConfig';\nvar moduleConfigData = moduleConfigTemplateData;\nexport default {\n  name: 'list',\n  components: {\n    'list-table': listTable,\n    'add-element': addQueryElement,\n    'create-form-element': createFormElement,\n    'form-creater': formCreater\n  },\n  data: function data() {\n    return {\n      formatUtil: formatDate,\n      tableListConfig: {\n        columns: [],\n        splitTables: 1,\n        operator: {\n          width: 200,\n          columns: []\n        },\n        url: '',\n        selection: false\n      },\n      queryConfig: {\n        queryElements: []\n      },\n      moduleConfig: {\n        editable: '',\n        menuConfig: []\n      },\n      chooseIds: [],\n      readonly: {},\n      validate: validate,\n      formCreateConfig: {\n        queryElements: [],\n        cancle: this.cancle,\n        cancleBtnStyle: {\n          display: 'none'\n        },\n        saveBtnlabel: '保存信息',\n        editorFormHandler: this.editorFormHandler,\n        editorModule: true\n      }\n    };\n  },\n  methods: {\n    prompt: function prompt(context) {\n      context.$prompt('请输入邮箱', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        inputErrorMessage: '邮箱格式不正确'\n      }).then(function (_ref) {\n        var value = _ref.value;\n        context.$message({\n          type: 'success',\n          message: '你的邮箱是: ' + value\n        });\n      }).catch(function () {\n        context.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    exportDataHandler: function exportDataHandler(param, btnInfo) {\n      var _this = this;\n\n      //console.log(\"param,btnInfo\",param,btnInfo)\n      var url = btnInfo.url;\n      var copyIds = JSON.parse(_JSON$stringify(this.chooseIds));\n      var ids = copyIds.map(function (item) {\n        return item.id;\n      }).join(\",\");\n      var queryParam = \"?1=1\";\n\n      if (ids) {\n        queryParam += \"&ids=\" + ids;\n      } //console.log(\"param\",param,this.chooseIds)\n\n\n      _Object$keys(param).forEach(function (key) {\n        if (param[key]) {\n          if (key == \"timeRange\") {\n            if (param[\"timeRange\"]) {\n              if (param[\"timeRange\"][0]) {\n                queryParam += \"&startTime=\" + _this.formatUtil(param[\"timeRange\"][0], \"yyyy-MM-dd hh:mm:ss\");\n              }\n\n              if (param[\"timeRange\"][1]) {\n                queryParam += \"&endTime=\" + _this.formatUtil(param[\"timeRange\"][1], \"yyyy-MM-dd hh:mm:ss\");\n              }\n            }\n          } else {\n            queryParam += \"&\" + key + \"=\" + param[key];\n          }\n        }\n      });\n\n      if (btnInfo.exportsParam) {\n        _Object$keys(btnInfo.exportsParam).forEach(function (key) {\n          if (!param[key]) {\n            queryParam += \"&\" + key + \"=\" + (param[key] || (_this.tableListConfig.query || {})[key]);\n          }\n        });\n      }\n\n      backendService.download({\n        url: url + queryParam\n      });\n    },\n    deleteRowHandler: function deleteRowHandler(rowData, btnInfo) {\n      console.log(rowData, btnInfo);\n      var url = btnInfo.url;\n      var that = this;\n      var textTemplate = [JSON.parse(_JSON$stringify(btnInfo.deleteTipText))];\n\n      if (typeof btnInfo.deleteTipText === \"string\") {} else if (_typeof(btnInfo.deleteTipText) === \"object\") {\n        textTemplate = [JSON.parse(_JSON$stringify(btnInfo.deleteTipText[rowData[btnInfo.prop]]))];\n      }\n\n      textTemplate = textTemplate.map(function (item, index) {\n        if (/(#+([a-zA-Z]+)#+)/g.test(item)) {\n          var tarText = /(#+([a-zA-Z]+)#+)/g.exec(item)[0];\n          var propertyText = /(#+([a-zA-Z]+)#+)/g.exec(item)[2];\n          item = item.replace(tarText, rowData[propertyText] || '');\n        }\n\n        return item;\n      });\n      var deleteParam = JSON.parse(_JSON$stringify(btnInfo.deleteParam));\n      var deletePostParam = {};\n\n      _Object$keys(deleteParam).forEach(function (key) {\n        if (_typeof(deleteParam[key]) === \"object\") {\n          console.log(key + \"==>\" + deleteParam[key] + \"==>\" + deleteParam[key][rowData[key]] + \"-->\" + rowData[key]);\n          deletePostParam[key] = deleteParam[key][rowData[key]];\n        } else {\n          deletePostParam[key] = rowData[key]; //console.log(key +\"==>\"+deleteParam[key]+\"-->\"+rowData[key])\n        }\n      });\n\n      return this.$confirm(textTemplate.join(\"\") || '确定要删除该记录?', \"确认信息\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function (success) {\n        return backendService.getData({\n          url: url,\n          method: \"post\",\n          data: deletePostParam\n        }).then(function (data) {\n          if (data.code == '1') {\n            that.$message({\n              message: '操作成功',\n              type: 'success'\n            });\n            return _Promise.resolve({\n              code: 1,\n              msg: 'freshPage'\n            });\n          } else {\n            that.$message({\n              message: data.msg,\n              type: 'error'\n            });\n          }\n        });\n      }, function (error) {\n        return _Promise.reject({\n          code: 0,\n          msg: \"不用刷新列表用户取消操作\"\n        });\n      });\n    },\n    clickHandler: function clickHandler(param, btnInfo) {\n      var _this$moduleConfig;\n\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      //console.log(\"clickHandler\",param,btnInfo)\n      if (btnInfo.exportBtn) {\n        this.exportDataHandler.apply(this, [param, btnInfo].concat(params));\n        return;\n      }\n\n      if (btnInfo.url) {\n        var _console;\n\n        var url = btnInfo.url;\n\n        (_console = console).log.apply(_console, [param, url].concat(params, [this]));\n\n        url = this.replaceTemplate(param, url, this.config.query);\n        this.$router.push(url);\n        return;\n      }\n\n      this.moduleConfig.clickHandler && (_this$moduleConfig = this.moduleConfig).clickHandler.apply(_this$moduleConfig, [this, param, btnInfo].concat(params));\n    },\n    pagerDataHelper: function pagerDataHelper(param) {\n      //console.log(\"pagerDataHelper********\",param);\n      param.content.map(function (item) {\n        return item;\n      });\n      return this.moduleConfig.pagerDataHelper && this.moduleConfig.pagerDataHelper(param) || param;\n    },\n    errorDataHelper: function errorDataHelper(param) {\n      console.log(\"pagerDataHelper***>>>>>>>>>>>>>*****\", param);\n      param.content.map(function (item) {\n        return item;\n      });\n      return this.moduleConfig.errorDataHelper && this.moduleConfig.errorDataHelper(param) || param;\n    },\n    clickConfig: function clickConfig(param) {\n      //console.log(\"clickConfig***++++++*****\",param);\n      this.moduleConfig.clickConfig && this.moduleConfig.clickConfig(param);\n    },\n    handleClose: function handleClose(param) {\n      this.moduleConfig.handleClose && this.moduleConfig.handleClose(param);\n    },\n    dataBus: function dataBus(configInfo, elementInfo, elementTypeInfo) {\n      this.moduleConfig.dataBus && this.moduleConfig.dataBus(this, configInfo, elementInfo, elementTypeInfo);\n    },\n    enterHandler: function enterHandler() {\n      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        params[_key2] = arguments[_key2];\n      }\n\n      //console.log(\"enterHandler\",params)\n      this.moduleConfig.enterHandler ? this.moduleConfig.enterHandler(params) : this.defaultHandler(params);\n    },\n    columnClickHandler: function columnClickHandler() {\n      var _this$moduleConfig2;\n\n      for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        params[_key3] = arguments[_key3];\n      }\n\n      //console.log(\"columnClickHandler\",params)\n      this.moduleConfig.columnClickHandler ? (_this$moduleConfig2 = this.moduleConfig).columnClickHandler.apply(_this$moduleConfig2, params.concat([this])) : this.defaultHandler.apply(this, params);\n    },\n    hoverHandler: function hoverHandler() {\n      for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        params[_key4] = arguments[_key4];\n      }\n\n      //console.log(\"hoverHandler\",params)\n      this.moduleConfig.hoverHandler ? this.moduleConfig.hoverHandler(params) : this.defaultHandler(params);\n    },\n    defaultHandler: function defaultHandler() {\n      for (var _len5 = arguments.length, params = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        params[_key5] = arguments[_key5];\n      }\n\n      //console.log(\"defaultHandler\",params)\n      this.moduleConfig.defaultHandler ? this.moduleConfig.defaultHandler(params) : '';\n    },\n    initColumn: function initColumn() {\n      var that = this;\n      var columnWidthAuto = 0;\n      this.tableListConfig.columns.map(function (column, index) {\n        if (column.width == \"auto\") {\n          ++columnWidthAuto;\n        }\n\n        if (index == that.tableListConfig.columns.length - 1 && columnWidthAuto == 0) {\n          column.width = \"auto\";\n        }\n\n        if (column.addEventListener) {\n          column.addEventListener.map(function (eventName) {\n            var eventHandlerName = eventName; //console.log(column.prop,\"eventName\",eventName)\n\n            if (eventName == \"click\") {\n              eventHandlerName = \"columnClick\";\n            }\n\n            column[eventName] = that[eventHandlerName + \"Handler\"] || that.defaultHandler;\n          });\n        }\n\n        var elementInfo = column;\n\n        if (that.$route.params.moduleName != \"createTableList\" && elementInfo.columnHandlerText) {\n          elementInfo.columnHandler = function (data) {\n            //console.log(\"*********>\",Array.isArray(data),data)\n            var compiledText = \"\";\n\n            if (_Array$isArray(data)) {\n              compiledText = data.map(function (objectItem) {\n                var textTemplate = JSON.parse(_JSON$stringify(elementInfo.columnHandlerText));\n                textTemplate = textTemplate.map(function (item, index) {\n                  var tarText = /(#+([a-zA-Z]+)#+)/g.exec(item)[0];\n                  var propertyText = /(#+([a-zA-Z]+)#+)/g.exec(item)[2];\n                  item = item.replace(tarText, objectItem[propertyText] || '');\n                  return item;\n                });\n                return textTemplate.join(\"\");\n              });\n            } else {\n              var text = elementInfo.columnHandlerText;\n\n              if (!_Array$isArray(text)) {\n                text = [text];\n              }\n\n              compiledText = text.map(function (item, index) {\n                if (/(#+([a-zA-Z]+)#+)/g.test(item)) {\n                  var tarText = /(#+([a-zA-Z]+)#+)/g.exec(item)[0];\n                  var propertyText = /(#+([a-zA-Z]+)#+)/g.exec(item)[2];\n                  item = item.replace(tarText, data[propertyText] || '');\n                }\n\n                return item;\n              });\n            }\n\n            return compiledText.join(\"\");\n          };\n        }\n      });\n    },\n    initPage: function initPage() {\n      var _this2 = this;\n\n      var that = this;\n      var moduleConfig = moduleConfigData.getConfig()[this.$route.params.moduleName];\n      that.moduleConfig = moduleConfig;\n      console.log(\"moduleConfig>>>>>>\", moduleConfig, this.$route.params);\n\n      if (!moduleConfig) {\n        alert(\"配置模块\" + this.$route.params.moduleName + \"未找到,请检查配置\");\n        return;\n      }\n\n      var queryElements = moduleConfig.queryElements;\n      tableListConfig.url = moduleConfig.url; //tableListConfig.query=Object.assign(,moduleConfig.query);//moduleConfig.query||\n\n      var queryParam = moduleConfig.query || {\n        pageNum: 1,\n        pageSize: 15\n      };\n\n      _Object$keys(moduleConfig.query || {}).forEach(function (key) {\n        queryParam[key] = _this2.$route.params[moduleConfig.query[key]] || '';\n      });\n\n      if (moduleConfig.readonly) {\n        that.readonly = moduleConfig.query;\n      }\n\n      tableListConfig.query = queryParam; //console.log(\"----====>>>>\",tableListConfig.query,queryParam)\n\n      tableListConfig.columns = moduleConfig.columns;\n      queryElements.map(function (item) {\n        if (queryParam[item.prop] != undefined && queryParam[item.prop] != \"\") {\n          item.defaultValue = queryParam[item.prop];\n          item.value = queryParam[item.prop];\n        }\n      });\n      that.queryConfig.queryElements = queryElements;\n      that.queryConfig.containerStyle = moduleConfig.containerStyle;\n      moduleConfig.operator.columns.map(function (item) {\n        if (!item.click) {\n          if (item.confirmDel) {\n            item.click = that.deleteRowHandler;\n          } else {\n            item.click = that.clickHandler;\n          }\n        }\n\n        if (item.viewHandler == true) {\n          item.viewHandler = function (btnInfo, rowData, queryParam, otherData) {\n            return btnInfo.map[rowData[btnInfo.prop]];\n          };\n        }\n\n        item.style = _Object$assign(JSON.parse(_JSON$stringify(baseBtnStyle)), item.style);\n        return item;\n      });\n      tableListConfig.operator = moduleConfig.operator;\n      tableListConfig.selection = moduleConfig.selection;\n      tableListConfig.splitTables = moduleConfig.splitTables || that.tableListConfig.splitTables;\n      tableListConfig.pagerDataHelper = moduleConfig.pagerDataHelper || that.pagerDataHelper;\n      tableListConfig.errorDataHelper = moduleConfig.errorDataHelper || that.errorDataHelper;\n      tableListConfig.chooseAllClick = that.chooseAllClick;\n      tableListConfig.clickConfig = that.clickConfig;\n      that.tableListConfig = tableListConfig;\n      this.initColumn();\n      this.$refs.tableList && this.$refs.tableList.fresh('commonModule');\n    },\n    initWatch: function initWatch() {\n      var that = this;\n      this.$watch(\"moduleConfig.menuConfig\", function (newData, oldData) {\n        this.moduleConfig.menuConfig = newData;\n        console.log(\"*******>menuConfig>>>>>>>>\", newData);\n      }, {\n        deep: true\n      });\n      this.$watch(\"tableListConfig.columns\", function (newData, oldData) {// this.initColumn(newData,oldData);\n      }, {\n        deep: true\n      });\n      this.$watch(\"moduleConfig.queryElements\", function (newData, oldData) {\n        this.queryConfig.queryElements = newData;\n      }, {\n        deep: true\n      });\n      this.$watch(\"moduleConfig.operator.columns\", function (newData, oldData) {\n        that.moduleConfig.operator.columns.map(function (item) {\n          //console.log(item)\n          if (!item.click) {\n            if (item.confirmDel) {\n              item.click = that.deleteRowHandler;\n            } else {\n              item.click = that.clickHandler;\n            }\n          }\n\n          if (item.viewHandler == true) {\n            item.viewHandler = function (btnInfo, rowData, queryParam, otherData) {\n              return btnInfo.map[rowData[btnInfo.prop]];\n            };\n          }\n\n          item.style = _Object$assign(JSON.parse(_JSON$stringify(baseBtnStyle)), item.style);\n          return item;\n        });\n      }, {\n        deep: false\n      });\n      this.$watch(\"moduleConfig.url\", function (newData, oldData) {\n        that.tableListConfig.url = newData;\n      });\n    },\n    chooseAllClick: function chooseAllClick() {\n      //console.log(\"chooseAllClick\",...params);\n      this.chooseIds = arguments.length <= 0 ? undefined : arguments[0];\n    },\n    getObjectValue: function getObjectValue(target, prop, otherParam) {\n      //获取属性值 属性不争取返回空 可以获取类似 student.school.address.no 深层次获取\n      var props = prop.split(\".\");\n      var i = 0;\n      var tempValue = target;\n\n      while (props.length - i >= 1) {\n        if (!tempValue) {\n          console.log(\"****为空***=---->\", props[i]);\n          break;\n        }\n\n        tempValue = tempValue[props[i]];\n        tempValue = tempValue == undefined ? otherParam[props[i]] : tempValue;\n        i++;\n      }\n\n      return tempValue;\n    },\n    replaceTemplate: function replaceTemplate(target, templateText, otherParam) {\n      var result = null;\n      var patt = new RegExp(\"#{2}(\\s+)?[\\.a-zA-Z\\d]+(\\s+)?#{2}\", \"g\");\n      console.log(\"target,templateText,otherParam\", target, templateText, otherParam);\n      var replaceText = [];\n\n      while ((result = patt.exec(templateText)) != null) {\n        var props = result[0];\n        var getResult = this.getObjectValue(target, props.replace(/#+/g, \"\"), otherParam);\n\n        if (getResult === '') {\n          getResult = null;\n        }\n\n        replaceText.push({\n          template: result[0],\n          value: getResult\n        });\n      }\n\n      replaceText.forEach(function (replaceItem) {\n        templateText = templateText.replace(replaceItem.template, replaceItem.value);\n      });\n      return templateText;\n    },\n    downLoad: function downLoad() {\n      var file = new File(['let config=' + _JSON$stringify(this.config, null, 4)], {\n        type: 'text',\n        encoding: 'UTF-8'\n      });\n      var a = document.createElement('a');\n      a.href = URL.createObjectURL(file);\n      a.download = '列表配置.js';\n      a.click();\n    },\n    getService: function getService() {\n      return backendService;\n    },\n    editorFormHandler: function editorFormHandler() {\n      var _this$moduleConfig3;\n\n      for (var _len6 = arguments.length, params = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        params[_key6] = arguments[_key6];\n      }\n\n      //console.log(\"defaultHandler\",params)\n      this.moduleConfig.editorFormHandler ? (_this$moduleConfig3 = this.moduleConfig).editorFormHandler.apply(_this$moduleConfig3, [this].concat(params)) : '';\n    }\n  },\n  created: function created() {\n    this.initPage();\n    this.initWatch();\n  },\n  mounted: function mounted() {\n    /*var editor = ace.edit(\"ace\");\n    editor.setTheme(\"ace/theme/twilight\");\n    editor.session.setMode(\"ace/mode/javascript\");\n    editor.setOptions({\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        enableLiveAutocompletion: false\n    });\n    editor.setValue(`\n      ${JSON.stringify(this.moduleConfig,null,4)}\n    `)*/\n  },\n  watch: {\n    '$route': function $route(to, from) {\n      //console.log(\"this.$route.params\",this.$route.params)\n      this.initPage();\n    }\n  },\n  computed: {\n    config: function config() {\n      var copyData = JSON.parse(_JSON$stringify(this.tableListConfig));\n      return _Object$assign(copyData, this.queryConfig);\n    },\n    choosedIdMap: function choosedIdMap() {\n      var dataMap = {};\n      this.chooseIds.forEach(function (item) {\n        dataMap[item.id] = item.id;\n      });\n      return dataMap;\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main\">\n    <div class=\"content\">\n      <div class=\"list\">\n        <div style=\"padding:0px 10px;background: #fff;\">\n          <list-table v-if=\"moduleConfig.editable!='create-form-element'\" :config=\"{tableListConfig,queryConfig,clickHandler,form:'merchant',readonly:readonly}\" ref=\"tableList\"></list-table>\n          <form-creater v-if=\"formCreateConfig.queryElements.length>0\" :config=\"formCreateConfig\" ref=\"formCreater\"></form-creater>\n          <add-element v-if=\"moduleConfig.editable=='add-element'\" :config=\"{dataBus:dataBus}\"></add-element>\n          <create-form-element v-if=\"moduleConfig.editable == 'create-form-element'\" :config=\"{dataBus:dataBus}\"></create-form-element>\n          <div style=\"margin-top: 20px;\" v-if=\"moduleConfig.editable=='add-element'\">\n            <textarea style=\"width: 100%;\" rows=\"35\" readonly v-model=\"JSON.stringify(config,null,4)\"/>\n            <!--<button @click=\"downLoad()\">导出内容</button>-->\n          </div>\n        </div>\n      </div>\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n<script>\n  import backendService from '../../../components/remoteService/backendService'\n  import listTable from '../../../components/tableList/listTable'\n  import baseTableConfig from '../../../components/tableList/TabListConfig'\n  import addQueryElement from '../../../components/formCreater/addQueryElement'\n  import createFormElement from '../../../components/formCreater/createFormElement'\n  import {formatDate} from '../../../components/format/format'\n  import validate from './../../../components/validate/validate'\n  import formCreater from './../../../components/formCreater/baseFormCreater'\n\n  let tableListConfig=JSON.parse(JSON.stringify(baseTableConfig));\n\n  let baseBtnStyle=tableListConfig.baseBtnStyle;\n  import moduleConfigTemplateData from './../config/moduleConfig'\n\n  let moduleConfigData = moduleConfigTemplateData;\n\n  export default {\n      name: 'list',\n      components:{\n          'list-table':listTable,\n          'add-element':addQueryElement,\n          'create-form-element':createFormElement,\n          'form-creater':formCreater,\n      },\n      data(){\n          return{\n              formatUtil:formatDate,\n              tableListConfig:{columns:[],splitTables:1,operator:{width:200,columns:[]},url:'',selection:false},\n              queryConfig:{queryElements:[]},\n              moduleConfig:{editable:'',menuConfig:[]},\n              chooseIds:[],\n              readonly:{},\n              validate:validate,\n\n              formCreateConfig:{\n                  queryElements:[],\n                  cancle:this.cancle,\n                  cancleBtnStyle:{\n                      display:'none'\n                  },\n                  saveBtnlabel:'保存信息',\n                  editorFormHandler:this.editorFormHandler,\n                  editorModule:true\n              },\n          }\n      },\n      methods:{\n          prompt(context){\n              context.$prompt('请输入邮箱', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n                  inputErrorMessage: '邮箱格式不正确'\n              }).then(({ value }) => {\n                  context.$message({\n                      type: 'success',\n                      message: '你的邮箱是: ' + value\n                  });\n              }).catch(() => {\n                  context.$message({\n                      type: 'info',\n                      message: '取消输入'\n                  });\n              });\n          },\n          exportDataHandler(param,btnInfo){\n              //console.log(\"param,btnInfo\",param,btnInfo)\n              let url=btnInfo.url;\n              let copyIds=JSON.parse(JSON.stringify(this.chooseIds));\n              let ids=copyIds.map(item=>item.id).join(\",\");\n              let queryParam=\"?1=1\";\n              if(ids){\n                  queryParam+=\"&ids=\"+ids;\n              }\n              //console.log(\"param\",param,this.chooseIds)\n              Object.keys(param).forEach(key=>{\n                  if(param[key]){\n                      if(key == \"timeRange\"){\n                          if(param[\"timeRange\"]){\n                              if(param[\"timeRange\"][0]){\n                                  queryParam+=\"&startTime=\"+this.formatUtil(param[\"timeRange\"][0],\"yyyy-MM-dd hh:mm:ss\");\n                              }\n                              if(param[\"timeRange\"][1]){\n                                  queryParam+=\"&endTime=\"+this.formatUtil(param[\"timeRange\"][1],\"yyyy-MM-dd hh:mm:ss\");\n                              }\n                          }\n                      }else{\n                          queryParam+=\"&\"+key+\"=\"+param[key];\n                      }\n                  }\n              })\n\n              if(btnInfo.exportsParam){\n                  Object.keys(btnInfo.exportsParam).forEach(key=>{\n                      if(!param[key]){\n                          queryParam+=\"&\"+key+\"=\"+(param[key]||(this.tableListConfig.query||{})[key]);\n                      }\n                  })\n              }\n\n              backendService.download({\n                  url:url+queryParam\n              })\n          },\n          deleteRowHandler(rowData,btnInfo){\n              console.log(rowData,btnInfo)\n              let url=btnInfo.url;\n              let that = this;\n              let textTemplate=[JSON.parse(JSON.stringify(btnInfo.deleteTipText))];\n              if(typeof btnInfo.deleteTipText === \"string\"){\n\n              }else if(typeof btnInfo.deleteTipText === \"object\"){\n                  textTemplate=[JSON.parse(JSON.stringify(btnInfo.deleteTipText[rowData[btnInfo.prop]]))]\n              }\n\n              textTemplate=textTemplate.map((item,index)=>{\n                  if(/(#+([a-zA-Z]+)#+)/g.test(item)){\n                      let tarText=/(#+([a-zA-Z]+)#+)/g.exec(item)[0];\n                      let propertyText=/(#+([a-zA-Z]+)#+)/g.exec(item)[2];\n                      item=item.replace(tarText,rowData[propertyText]||'');\n                  }\n                  return item;\n              })\n\n\n              let deleteParam=JSON.parse(JSON.stringify(btnInfo.deleteParam));\n              let deletePostParam={};\n              Object.keys(deleteParam).forEach(key=>{\n                  if(typeof deleteParam[key]  === \"object\"){\n                      console.log(key +\"==>\"+deleteParam[key]+\"==>\"+deleteParam[key][rowData[key]]+\"-->\"+rowData[key]);\n                      deletePostParam[key]=deleteParam[key][rowData[key]];\n                  }else{\n                      deletePostParam[key]=rowData[key];\n                      //console.log(key +\"==>\"+deleteParam[key]+\"-->\"+rowData[key])\n                  }\n              })\n              return this.$confirm(textTemplate.join(\"\")||'确定要删除该记录?',\"确认信息\", {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n              }).then(success=>{\n                  return backendService.getData({\n                      url:url,\n                      method:\"post\",\n                      data:deletePostParam\n                  }).then(function (data) {\n                      if(data.code == '1'){\n                          that.$message({\n                              message: '操作成功',\n                              type: 'success'\n                          });\n                          return Promise.resolve({code:1,msg:'freshPage'})\n                      }else{\n                          that.$message({\n                              message: data.msg,\n                              type: 'error'\n                          });\n                      }\n                  })\n              },error=>{\n                  return Promise.reject({code:0,msg:\"不用刷新列表用户取消操作\"})\n              })\n          },\n          clickHandler(param,btnInfo,...params){\n              //console.log(\"clickHandler\",param,btnInfo)\n              if(btnInfo.exportBtn){\n                  this.exportDataHandler(param,btnInfo,...params);\n                  return;\n              }\n              if(btnInfo.url){\n                  let url=btnInfo.url;\n                  console.log(param,url,...params,this)\n                  url=this.replaceTemplate(param,url,this.config.query);\n                  this.$router.push(url);\n                  return;\n              }\n              this.moduleConfig.clickHandler&&this.moduleConfig.clickHandler(this,param,btnInfo,...params)\n          },\n          pagerDataHelper(param){\n              //console.log(\"pagerDataHelper********\",param);\n              param.content.map(item=>{return item;})\n              return this.moduleConfig.pagerDataHelper&&this.moduleConfig.pagerDataHelper(param)||param;\n          },\n          errorDataHelper(param){\n              console.log(\"pagerDataHelper***>>>>>>>>>>>>>*****\",param);\n              param.content.map(item=>{return item;})\n              return this.moduleConfig.errorDataHelper&&this.moduleConfig.errorDataHelper(param)||param;\n          },\n          clickConfig(param){\n              //console.log(\"clickConfig***++++++*****\",param);\n              this.moduleConfig.clickConfig&&this.moduleConfig.clickConfig(param)\n          },\n          handleClose(param){\n              this.moduleConfig.handleClose&&this.moduleConfig.handleClose(param)\n          },\n          dataBus(configInfo,elementInfo,elementTypeInfo){\n              this.moduleConfig.dataBus&&this.moduleConfig.dataBus(this,configInfo,elementInfo,elementTypeInfo)\n          },\n          enterHandler(...params){\n              //console.log(\"enterHandler\",params)\n              this.moduleConfig.enterHandler?this.moduleConfig.enterHandler(params):this.defaultHandler(params)\n          },\n          columnClickHandler(...params){\n              //console.log(\"columnClickHandler\",params)\n              this.moduleConfig.columnClickHandler?this.moduleConfig.columnClickHandler(...params,this):this.defaultHandler(...params)\n          },\n          hoverHandler(...params){\n              //console.log(\"hoverHandler\",params)\n              this.moduleConfig.hoverHandler?this.moduleConfig.hoverHandler(params):this.defaultHandler(params)\n          },\n          defaultHandler(...params){\n              //console.log(\"defaultHandler\",params)\n              this.moduleConfig.defaultHandler?this.moduleConfig.defaultHandler(params):''\n          },\n          initColumn(){\n              let that=this;\n              let columnWidthAuto=0;\n              this.tableListConfig.columns.map((column,index)=>{\n                  if(column.width==\"auto\"){\n                      ++columnWidthAuto;\n                  }\n\n                  if(index==(that.tableListConfig.columns.length-1)&&columnWidthAuto==0){\n                      column.width=\"auto\";\n                  }\n                  if(column.addEventListener){\n                      column.addEventListener.map(eventName=>{\n                          let eventHandlerName=eventName;\n                          //console.log(column.prop,\"eventName\",eventName)\n                          if(eventName==\"click\"){\n                              eventHandlerName=\"columnClick\";\n                          }\n                          column[eventName]=that[eventHandlerName+\"Handler\"]||that.defaultHandler;\n                      })\n                  }\n                  let elementInfo=column;\n                  if(that.$route.params.moduleName!=\"createTableList\"&&elementInfo.columnHandlerText){\n                      elementInfo.columnHandler=(data)=>{\n                          //console.log(\"*********>\",Array.isArray(data),data)\n                          let compiledText=\"\";\n                          if(Array.isArray(data)){\n                              compiledText=data.map(objectItem=>{\n                                  let textTemplate=JSON.parse(JSON.stringify(elementInfo.columnHandlerText));\n                                  textTemplate=textTemplate.map((item,index)=>{\n                                      let tarText=/(#+([a-zA-Z]+)#+)/g.exec(item)[0];\n                                      let propertyText=/(#+([a-zA-Z]+)#+)/g.exec(item)[2];\n                                      item=item.replace(tarText,objectItem[propertyText]||'');\n                                      return item;\n                                  })\n                                  return textTemplate.join(\"\");\n                              })\n                          }else{\n                              let text=elementInfo.columnHandlerText;\n                              if(!Array.isArray(text)){\n                                  text=[text];\n                              }\n                              compiledText=text.map((item,index)=>{\n                                  if(/(#+([a-zA-Z]+)#+)/g.test(item)){\n                                      let tarText=/(#+([a-zA-Z]+)#+)/g.exec(item)[0];\n                                      let propertyText=/(#+([a-zA-Z]+)#+)/g.exec(item)[2];\n                                      item=item.replace(tarText,data[propertyText]||'');\n                                  }\n                                  return item;\n                              })\n                          }\n                          return compiledText.join(\"\");\n                      }\n                  }\n              })\n          },\n          initPage(){\n              let that = this;\n\n              let moduleConfig=moduleConfigData.getConfig()[this.$route.params.moduleName];\n              that.moduleConfig=moduleConfig;\n\n              console.log(\"moduleConfig>>>>>>\",moduleConfig,this.$route.params)\n\n              if(!moduleConfig){\n                  alert(\"配置模块\"+this.$route.params.moduleName+\"未找到,请检查配置\");\n                  return;\n              }\n              let queryElements=moduleConfig.queryElements;\n              tableListConfig.url=moduleConfig.url;\n              //tableListConfig.query=Object.assign(,moduleConfig.query);//moduleConfig.query||\n              let queryParam=moduleConfig.query||{\n                  pageNum: 1,\n                  pageSize: 15,\n              };\n              Object.keys(moduleConfig.query||{}).forEach(key=>{\n                  queryParam[key]=this.$route.params[moduleConfig.query[key]]||''\n              })\n\n              if(moduleConfig.readonly){\n                  that.readonly=moduleConfig.query;\n              }\n\n              tableListConfig.query=queryParam;\n              //console.log(\"----====>>>>\",tableListConfig.query,queryParam)\n              tableListConfig.columns=moduleConfig.columns;\n\n              queryElements.map(item=>{\n                  if(queryParam[item.prop]!=undefined&&queryParam[item.prop]!=\"\"){\n                      item.defaultValue=queryParam[item.prop];\n                      item.value=queryParam[item.prop];\n                  }\n              })\n\n              that.queryConfig.queryElements=queryElements;\n              that.queryConfig.containerStyle=moduleConfig.containerStyle;\n              moduleConfig.operator.columns.map(item=>{\n                  if(!item.click){\n                      if(item.confirmDel){\n                          item.click=that.deleteRowHandler;\n                      }else{\n                          item.click=that.clickHandler;\n                      }\n                  }\n                  if(item.viewHandler==true){\n                      item.viewHandler=(btnInfo,rowData,queryParam,otherData)=>{\n                          return btnInfo.map[rowData[btnInfo.prop]]\n                      }\n                  }\n                  item.style=Object.assign(JSON.parse(JSON.stringify(baseBtnStyle)),item.style);\n                  return item;\n              });\n\n              tableListConfig.operator=moduleConfig.operator;\n              tableListConfig.selection=moduleConfig.selection;\n              tableListConfig.splitTables=moduleConfig.splitTables||that.tableListConfig.splitTables;\n              tableListConfig.pagerDataHelper=moduleConfig.pagerDataHelper||that.pagerDataHelper;\n              tableListConfig.errorDataHelper=moduleConfig.errorDataHelper||that.errorDataHelper;\n              tableListConfig.chooseAllClick=that.chooseAllClick;\n              tableListConfig.clickConfig=that.clickConfig;\n\n              that.tableListConfig=tableListConfig;\n\n              this.initColumn();\n\n\n              this.$refs.tableList&&this.$refs.tableList.fresh('commonModule');\n          },\n          initWatch(){\n              let that=this;\n              this.$watch(\"moduleConfig.menuConfig\",function (newData,oldData) {\n                  this.moduleConfig.menuConfig=newData;\n                  console.log(\"*******>menuConfig>>>>>>>>\",newData)\n              },{\n                  deep:true\n              })\n\n              this.$watch(\"tableListConfig.columns\",function (newData,oldData) {\n                 // this.initColumn(newData,oldData);\n              },{\n                  deep:true\n              })\n              this.$watch(\"moduleConfig.queryElements\",function (newData,oldData) {\n                  this.queryConfig.queryElements=newData;\n              },{\n                  deep:true\n              })\n\n              this.$watch(\"moduleConfig.operator.columns\",function (newData,oldData) {\n                  that.moduleConfig.operator.columns.map(item=>{\n                      //console.log(item)\n                      if(!item.click){\n                          if(item.confirmDel){\n                              item.click=that.deleteRowHandler;\n                          }else{\n                              item.click=that.clickHandler;\n                          }\n                      }\n                      if(item.viewHandler==true){\n                          item.viewHandler=(btnInfo,rowData,queryParam,otherData)=>{\n                              return btnInfo.map[rowData[btnInfo.prop]]\n                          }\n                      }\n                      item.style=Object.assign(JSON.parse(JSON.stringify(baseBtnStyle)),item.style);\n                      return item;\n                  });\n              },{\n                  deep:false\n              })\n\n              this.$watch(\"moduleConfig.url\",function (newData,oldData) {\n                  that.tableListConfig.url=newData;\n              })\n          },\n          chooseAllClick(...params){\n              //console.log(\"chooseAllClick\",...params);\n              this.chooseIds=params[0];\n          },\n          getObjectValue(target ,prop,otherParam){//获取属性值 属性不争取返回空 可以获取类似 student.school.address.no 深层次获取\n              let props=prop.split(\".\");\n              let i=0;\n              let tempValue=target;\n              while (props.length-i>=1){\n                  if(!tempValue){\n                      console.log(\"****为空***=---->\",props[i])\n                      break;\n                  }\n                  tempValue=tempValue[props[i]];\n                  tempValue=tempValue==undefined?otherParam[props[i]]:tempValue;\n                  i++;\n              }\n              return tempValue;\n          },\n          replaceTemplate(target,templateText,otherParam) {\n              let result=null;\n              let patt = new RegExp(\"#{2}(\\s+)?[\\.a-zA-Z\\d]+(\\s+)?#{2}\",\"g\");\n\n              console.log(\"target,templateText,otherParam\",target,templateText,otherParam)\n              let replaceText=[];\n              while ((result=patt.exec(templateText))!=null){\n                  let props=result[0];\n                  let getResult=this.getObjectValue(target,props.replace(/#+/g,\"\"),otherParam);\n                  if(getResult===''){\n                      getResult=null;\n                  }\n                  replaceText.push({\n                      template:result[0],\n                      value:getResult\n                  })\n              }\n\n              replaceText.forEach(replaceItem=>{\n                  templateText=templateText.replace(replaceItem.template,replaceItem.value)\n              })\n\n              return templateText;\n          },\n          downLoad(){\n              let file=new File(['let config='+JSON.stringify(this.config,null,4)],{\n                  type: 'text',\n                  encoding: 'UTF-8'\n              });\n\n              var a = document.createElement('a');\n              a.href = URL.createObjectURL(file);\n              a.download ='列表配置.js';\n              a.click();\n\n          },\n          getService(){\n              return backendService;\n          },\n          editorFormHandler(...params){\n              //console.log(\"defaultHandler\",params)\n              this.moduleConfig.editorFormHandler?this.moduleConfig.editorFormHandler(this,...params):''\n          },\n      },\n      created(){\n          this.initPage();\n          this.initWatch();\n\n      },\n      mounted(){\n          /*var editor = ace.edit(\"ace\");\n          editor.setTheme(\"ace/theme/twilight\");\n          editor.session.setMode(\"ace/mode/javascript\");\n          editor.setOptions({\n              enableBasicAutocompletion: true,\n              enableSnippets: true,\n              enableLiveAutocompletion: false\n          });\n          editor.setValue(`\n            ${JSON.stringify(this.moduleConfig,null,4)}\n          `)*/\n      },\n      watch:{\n          '$route'(to,from){\n              //console.log(\"this.$route.params\",this.$route.params)\n              this.initPage();\n          }\n      },\n      computed:{\n          config:function () {\n              let copyData=JSON.parse(JSON.stringify(this.tableListConfig));\n              return Object.assign(copyData,this.queryConfig)\n          },\n          choosedIdMap:function () {\n              let dataMap={};\n              this.chooseIds.forEach(item=>{\n                  dataMap[item.id]=item.id;\n              })\n              return dataMap;\n          }\n      }\n  }\n</script>\n\n<style>\n  .formMessage{\n    width: 600px;\n  }\n</style>\n"],"sourceRoot":"src/views/templateModuleManager/list"}]}