{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/formCreater/createFormElement.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/formCreater/createFormElement.vue","mtime":1553853483847},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.addElement{\n    text-align: left;\n}\n.addElement .el-radio{\n    min-width: 165px;\n    margin-right: 10px;\n\n}\n.optionsElementContainer{\n    display: inline-block;\n    border: 0px dashed #faa;\n    width: 60%;\n    margin-right: 20px;\n}\n.chooseItemElementContainer{\n    display: inline-block;\n    border: 1px dashed #faa;\n    padding: 10px 15px;\n    margin-bottom: 15px;\n    margin-right: 15px;\n    border-radius: 5px;\n}\n.operateContainer{\n    display: flex;\n    width: 100%;\n    border: 0px solid #f00;\n    flex-direction: row;\n    justify-content:flex-start;\n    align-items: center;\n}\n",{"version":3,"sources":["createFormElement.vue"],"names":[],"mappingss1BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"createFormElement.vue","sourceRoot":"src/components/formCreater","sourcesContent":["<template>\n    <div class=\"addElement\">\n        <div style=\"padding: 15px 5px;background:linear-gradient(-180deg, rgb(102, 177, 255), #3483de59, #228dfdad);\">\n            <el-radio v-model=\"type\" :label=\"element\" style=\"margin-left: 0px;margin:10px;\" border  v-for=\"(element,index) in Object.keys(elementConfig)\" :key=\"index+'_radio_'+element\" >{{elementConfig[element].name}}</el-radio>\n        </div>\n        <div style=\"padding:10px;background:linear-gradient(-180deg, rgb(102, 177, 255), #c0c4cc, rgb(103, 194, 58)) !important;\">\n            <el-radio v-for=\"(element,index) in currentChoosed\"  :key=\"index\" v-model=\"elementItemType\"  border style=\"margin-bottom:15px;margin-right:15px;margin-top:10px;\" :label=\"element\">{{elementConfig[type][element].name}}</el-radio>\n        </div>\n        <div class=\"operateContainer\" style=\"background:#ddd\" v-if=\"elementConfig[type][elementItemType]\">\n                    <span class=\"optionsElementContainer\">\n                            <el-input v-model=\"elementConfig[type][elementItemType].options\" text-color=\"#fff\" type=\"textarea\" :rows=\"25\" style=\"font-size:12px;\" @keyup.enter.native=\"saveInput\" ></el-input>\n                    </span>\n                    <el-button type=\"success\" style=\"margin-top: 15px;\" @click=\"addQueryElement\">添加元素</el-button>\n                </div>\n                <div style=\"font-size: 12px;background:linear-gradient(-180deg, #66b1ff,rgba(0,0,0,.1),#67c23a)!important;margin-top:20px;\" v-html=\"showTemplate(templateHtml)\">\n        </div>\n    </div>\n</template>\n<script>\n    export default {\n        name: 'create-form-element',\n        data(){\n            return{\n                type:'inputElement',\n                elementItemType:'input',\n                config:{},\n                form:{},\n                items:[],\n                elementConfig:{\n                    inputElement:{\n                        name:'输入框',\n                        input:{\n                            name:'输入框有验证功能',\n                            testProp:`\n                                {\n                                    label:'属性名称',\n                                    type:'input',\n                                    placeholder:'属性名称占位',\n                                    defaultValue:'',\n                                    value:'',\n                                    prop:'propName',\n                                    subText:'*最多15个字',\n                                    span:18,\n                                    style:{\n                                        display:'inline-block',\n                                        width:'auto',\n                                        minWidth:'400px'\n                                        },\n                                    viewHandler(...params){\n                                        console.log(...params)    \n                                    }    \n                                },\n                            `,\n                            options:JSON.stringify({\n                                label:'属性名称',\n                                type:'input',\n                                placeholder:'属性名称占位',\n                                defaultValue:'',\n                                value:'',\n                                prop:'propName',\n                                subText:'*最多15个字',\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'400px'\n                                },\n\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                            },null,4)\n                        },\n                        datetimerange:{\n                            name:'时间范围',\n                            options:JSON.stringify({\n                                label:'时间范围',\n                                type:'datetimerange',\n                                placeholder:'请选择开始和结束时间',\n                                prop:'timerange',\n                                validateRules:[\n                                    {\n                                        required:true\n                                    }\n                                ]\n                            },null,4)\n                        },\n                        addInput:{\n                            name:'回车输入框',\n                            options:JSON.stringify({\n                                label:'公司标签',\n                                prop:'enterpriseLabels',\n                                formData:[],\n                                type:'addInput',\n                                dataBus:true,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n                                            console.log(\"value\",value)\n                                            if(value.split(\"||||\").length>5){\n                                                callback(new Error(\"标签最多不能大于5个\"));\n                                            }else{\n                                                callback();\n                                            }\n                                            /*errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })*/\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ]\n                            },null,4)\n                        },\n\n                        groupElementInput:{\n                            name:'分组元素',\n                            options:JSON.stringify({\n                                label:'身份证背面',\n                                type:'upload',\n                                placeholder:'身份证背面',\n                                groupedName:'idCardGroup',\n                                defaultValue:'',\n                                value:'',\n                                style:{\n                                    width:'auto'\n                                },\n                                containerStyle:{\n                                    width:'auto'\n                                },\n                                groupedStyle:{\n                                    display:'flex',\n                                    flexDirection:'row',\n                                    justContent:'flex-start',\n                                    alignItems:'center',\n                                    backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                                    width:'80%',\n                                    marginLeft:'10%',\n                                    padding: '20px 0px',\n                                },\n                                prop:'cardBackUrl',\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    }\n                                ],\n                            },null,4)\n                        },\n\n                        watchElement:{\n                            name:'观察元素 依赖其它元素值动态切换显示隐藏',\n                            options:JSON.stringify({\n                                label:'企业简介',\n                                type:'input',\n                                placeholder:'企业简介',\n                                defaultValue:'',\n                                inputType:'textarea',\n                                rows:3,\n                                value:'',\n                                prop:'enterpriseIntroduction',\n                                subText:'最多100个字',\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'400px',\n                                },\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                                watch:{\n                                    props:[\"enterpriseName\"],\n                                    watchValue:{\n                                        enterpriseName:{\n                                            \"好好啊\":true,\n                                            \"ccc\":true,\n                                        },\n                                        dddd: (...data)=>{\n                                            console.log(\">>>>>\",...data)\n                                            return false\n                                        },\n                                        ee:null\n                                    }\n                                }\n                            },null,4)\n                        },\n\n                        provinceCityCasede:{\n                            name:'省市县级联选择',\n                            options:JSON.stringify({\n                                label:'省市区',\n                                prop:'userAreaLocal',\n                                cascaderOptions:[],\n                                type:'cascader',\n                                itemLabel:'label',\n                                itemValue:'areaId',\n                                default:[],\n                                span:12,\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    }\n                                ]\n                            },null,4)\n                        },\n                        multiLineInput:{\n                            name:'多行文本输入框',\n                            options:JSON.stringify({\n                                label:'详细地址',\n                                type:'input',\n                                placeholder:'详细地址',\n                                defaultValue:'',\n                                inputType:'textarea',\n                                rows:3,\n                                value:'',\n                                prop:'userAddress',\n                                subText:'最多100个字',\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'400px',\n                                },\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                            },null,4)\n                        },\n                        rightBtnInput:{\n                            name:'右侧有按钮的输入框',\n                            options:JSON.stringify({\n                                label:'手机验证码',\n                                type:'input',\n                                placeholder:'手机验证码',\n                                defaultValue:'',\n                                value:'',\n                                prop:'verificationCode',\n                                subText:'*4位验证码',\n                                rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n                                rightBtnClick:data=>{\n                                    return '';\n                                },\n                                span:18,\n                                style:{\n                                    display:'inline-block',\n                                    width:'auto',\n                                    minWidth:'250px'\n                                },\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    },\n                                    {\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:4});\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }\n                                ],\n                            },null,4)\n                        }\n                    },\n                    selectElement:{\n                        name:'下拉选择',\n                        selectInputFirst:{\n                            name:'下拉选择',\n                            options:JSON.stringify({\n                                label:'下拉选择跳转类型选择',\n                                prop:'select',\n                                dataUrl:'/jump/getJumpType.json',\n                                initQuery:true,\n                                type:'select',\n                                casecadeChild:[],\n                                casecadeGrandsonList:[],\n                                dataHandler:`(data)=>{\n                                    console.log(data)\n                                    data.data.map(item=>{\n                                        item.label=item.desc;\n                                        item.value=item.code;\n                                        return item;\n                                    })\n                                    return data.data\n                                }`,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                ]\n                            },null,4)\n                        },\n                        selectInputSecond:{\n                            name:'下拉选择有数据处理转换函数',\n                            options:JSON.stringify({\n                                label:'应用选择',\n                                prop:'appId',\n                                dataUrl:'/jump/getRobotApp.json',\n                                initQuery:true,\n                                type:'select',\n                                propList:'appList',\n                                casecadeChild:\"appFunction\",\n                                casecadeGrandsonList:[],\n                                dataHandler:`(data)=>{\n                                    console.log(data)\n                                    if(data.data.length==0) return [];\n                                    data.data.map(item=>{\n                                        item.label=item.appNameCn;\n                                        item.value=item.appNameUs;\n                                        return item;\n                                    })\n                                    return data.data\n                                }`,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                ]\n                            },null,4)\n                        },\n                        selectInputThird:{\n                            name:'下拉选择有衍生元素模板',\n                            options:JSON.stringify({\n                                label:'功能选择',\n                                prop:'appFunction',\n                                propList:'appFunctionList',\n                                dataUrl:'/jump/getRobotAppTarget.json',\n                                initQuery:false,\n                                param:{\n                                    appNameUs:\"appNameUs\"\n                                },\n                                extendsProp:[\"appNameUs\"],\n                                casecadeChild:\"\",\n                                groupedName:'jumpParams',\n                                casecadeGrandsonList:[],\n                                extendChild:{\n                                    dataUrl:'/jump/getParamTemplate.json',\n                                    method:'post',\n                                    prop:'appFunction',\n                                    dataHandler:`(data,parent)=>{\n                                        console.log(data,\">>>>\",parent)\n                                        if(!data.data||data.data.length==0) return [];\n                                        data.data.map((item,seq)=>{\n                                            item.label=item.targetDesc;\n                                            item.value=item.target;\n                                            item.type='input';\n                                            //item.inputType='textarea';\n                                            //item.rows=5;\n                                            item.label=item.paramLabel;\n                                            item.groupedName='jumpParams';\n                                            item.order=parent.order+1+seq;\n                                            item.prop='temp_appFunction#'+item.paramName;\n                                            item.validateRules=[\n                                                                    {\n                                                                        required:true\n                                                                    },\n                                                                ]\n                                            return item;\n                                        })\n                                        return data.data\n                                    }`,\n                                    extendsProp:[\"target\"]\n                                },\n                                type:'select',\n                                dataHandler:`(data)=>{\n                                    console.log(data)\n                                    data.data.map(item=>{\n                                        item.label=item.targetDesc;\n                                        item.value=item.target;\n                                        return item;\n                                    })\n                                    return data.data\n                                }`,\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                ]\n                            },null,4)\n                        },\n                    },\n                    uploadFile:{\n                        name:'文件上传',\n                        imagesUpload:{\n                            name:'图片批量上传',\n                            options:JSON.stringify({\n                                label:'公司宣传图',\n                                prop:'enterpriseShowImages',\n                                formData:[],\n                                defaultValue:[],\n                                type:'addImages',\n                                dataBus:true,\n                                imagesListConfig:{\n                                    imageConfig:{\n                                        //size:2.45*1024*1024,\n                                        width:430,\n                                        height:270\n                                    },\n                                    readonly:false,\n                                    /*validatorHandler:validatorHandler,*/\n                                    data:[],\n                                    dataBus:true,\n                                    maxNum:5,\n                                    tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n                                    prop:'showUrls'\n                                },\n                                validateRules:[\n                                    {\n                                        required:true\n                                    },\n                                    /*{\n                                        validator:(validator,value,callback)=>{\n                                            let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                                            console.log(\"value\",value)\n                                            errorMessage.then(data=>{\n                                                if(data.code==1){\n                                                    callback();\n                                                }else{\n                                                    callback(new Error(data.msg));\n                                                }\n                                            })\n                                        },\n                                        trigger:\"change\"\n                                    }*/\n                                ]\n                            },null,4)\n                        },\n                        imageUpload:{\n                            name:'图片上传',\n                            options:JSON.stringify({\n                                label:'头像',\n                                type:'upload',\n                                placeholder:'头像',\n                                defaultValue:'',\n                                value:'',\n                                prop:'businessLicense',\n                                tip:'请上传高清图片，仅支持PNG格式。',\n                                validateRules:[\n                                    {\n                                        required:true,\n                                    }\n                                ]\n                            },null,4)\n                        },\n                        fileUpload:{\n                            name:'文件上传',\n                            options:JSON.stringify({\n                                label:'应用APK',\n                                name:'文件上传',\n                                type:'upload',\n                                placeholder:'应用APK',\n                                defaultValue:'',\n                                span:24,\n                                value:'',\n                                prop:'apkUrl',\n                                tip:'请上传高清图片作为应用ICON108*108像素，仅支持PNG格式，大小不超过300KB。',\n                                imgUploadConfig:{\n                                    notImage:true,\n                                    beforeUpload:`\n                                        (...params)=>{\n                                        //console.log(\">>>>>\",...params);\n                                        let file=params[0];\n                                        const AndroidAppType ='application/vnd.android.package-archive';\n                                        /*if(!(file.type==AndroidAppType||/\\\\.apk$/.test(file.name))){\n                                            return Promise.reject({code:0,msg:'请选择apk文件'})\n                                        }\n                                        if(file.size>500*1024*1024){\n                                            return Promise.reject({code:0,msg:'应用不能大于500Mb'})\n                                        }*/\n                                        return Promise.resolve({code:1,msg:'success'})\n                                    }\n                                    `,\n                                    successUpload:`\n                                        (response,file,queryItem,form)=>{\n                                        //console.log(\">>>>>\",response,file,queryItem,form);\n                                        form[\"appSizeView\"]=(file.size/1024/1024).toFixed(2)+'Mb';\n                                        form[\"appSize\"]=file.size;\n                                        return Promise.resolve({code:1,msg:'success',data:response.data.fileUrls[0]})\n                                    }\n                                    `\n                                },\n                            },null,4)},\n                    },\n                    getLine:{\n                        name:'分割线',\n                        fenGexian:{\n                            name:'自定义分割线',\n                            options:JSON.stringify({\n                                label:'',\n                                type:'html',\n                                placeholder:'',\n                                default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">你的信息</div>',\n                                background:'transparent',\n                                prop:'labelInfoZCRXX',\n                            },null,4)\n                        },\n                        callBackFenGeXian:{\n                            name:'函数方式自定义分割线',\n                            options:JSON.stringify({\n                                label:'',\n                                type:'html',\n                                placeholder:'',\n                                defaultValue:'',\n                                dataHandler(auditTypeName,...params){\n                                    return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\"></div>`\n                                },\n                                prop:'auditTypeNameNoProp',\n                                subText:'',\n                                background:'transparent',\n                            },null,4)\n                        },\n                    },\n                    buttons:{\n                        name:'各种按钮',\n                        chooseBtn:{\n                            name:'选择按钮',\n                            options:JSON.stringify({\n                                label:'选择应用',\n                                type:'chooseBtn',\n                                placeholder:'',\n                                default:'',\n                                isPop:false,\n                                readonly:false,\n                                span:24,\n                                width:'800px',\n                                dataBus:true,\n                                chooseBtnLabel:'选择应用',\n                                chooseResultViewHandler:`(choosedResultArray,readonly)=>{\n                                   // console.log(choosedResultArray)\n                                    return _.flatten(Object.values(choosedResultArray)).map(item=>'<el-button type=\"info\">'+item.applicationName+'</el-button>').join(\",\")\n                                }`,\n                                popChooseViewHandler:`(choosedResultArray,readonly)=>{\n                                   // console.log(choosedResultArray)\n                                    return _.flatten(Object.values(choosedResultArray)).map(item=>'<el-button type=\"info\">'+item.applicationName+'</el-button>').join(\",\")\n                                }`,\n                                tableListConfig:{\n                                   url:'/thirdparty/upgrade/getUpgradeInfoList.json',\n                                   queryElements:[\n                                       {type:'input',label:'应用名称',prop:'applicationName'},\n                                       {type:'search',label:'应用名称',}\n                                   ],\n                                   selection:false,\n                                   pager:{\n                                       pageSize:5\n                                   },\n                                   columns:[\n                                       {\n                                           label:'名称',\n                                           prop:'applicationName',\n                                           width:'auto'\n                                       },\n                                       {\n                                           label:'版本号',\n                                           prop:'appVersion',\n                                           width:'200px'\n                                       },\n                                       {\n                                           label:'图标',\n                                           prop:'appIconUrl',\n                                           type:'img',\n                                           width:'200px'\n                                       }\n                                   ],\n                                   operator:{\n                                       columns:[\n                                           {\n                                               label:'选择',\n                                               type:'button'\n                                           }\n                                       ]\n                                   }\n                                },\n                                prop:'appIds',\n                            },null,4)\n                        },\n                    },\n                },\n                templateHtml:`\n                    {\n                        label:'属性名称',//属性名称\n                        prop:'prop',//属性值 如name、 age、\n                        type:'input',//字段类型 如 input,datetimerange,chooseBtn,addInput,upload,import,\n                        inputType:'textarea',addImages,cascader,//input类型是否显示为多行文本输入\n                        rows:'3',//显示多行文本行高\n                        placeholder:'',//属性名称占位\n                        defaultValue:'',//默认值\n                        readonly:false,//是否为只读\n                        value:'',//值\n                        html:true,//是否显示html方式\n                        viewHandler:(proValue,formValue){//<div style=\"display:inline-block;color:#f00;font-size:12px;\">回调处理函数参数默认为</div>\n                            console.log(\"aaa\")\n                        },\n                        subText:'',//右侧提示文字  比如字数提示 用户名必须20个字以内 可以为html\n                                    //<span style=\"color: #f0a\">红色的字体</span>\n                        style:{ //元素样式控制\n                            display:'inline-block',\n                            width:'auto',\n                            minWidth:'400px'\n                        },\n                        span:18,//元素容器宽度现在 1-24,\n                        validateRules:[//校验规则\n                            { //对象配置模式\n                                required:true\n                            },\n                            { //函数配置模式\n                                validator:(\n                                                validator,//校验所有规则\n                                                value,//当前值\n                                                callback,//处理完成之后的回调 如 next()\n                                                validate, //校验辅助函数 有各种基础校验 如  mobile,数字类型,email,version,password,\n                                                                        //required,maxvalue,minvalue,maxlength,minlength,\n                                                allRuleInOne,//规则打包之后对象\n                                                that.form,//当前表单所有值 为做关联校验时候使用\n                                            )=>{//函数模式\n                                                    let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                                                    errorMessage.then(data=>{\n                                                        if(data.code==1){\n                                                            callback();\n                                                        }else{\n                                                            callback(new Error(data.msg));\n                                                        }\n                                                    })\n                                                },\n                                trigger:\"change\"//校验函数触发方式 blur,change,click\n                            }\n\n                        ],\n                        formData:[],//当type为addInput时 给属性自动赋值,\n                        dataBus:true,//是否需要数据传输 适合自定义类元素有自己的处理逻辑 处理完成后同步数据函数\n                        containerStyle:{//属性元素容器 适用于多个属性排列在一行等 有单独布局的情况\n                            width:'auto'\n                        },\n                        groupedName:'默认分组',//分组名称\n                        groupedStyle:{//分组样式对象  可以将多个不同的属性进行分组 以便更清晰明了的显示\n                            display:'flex',\n                            flexDirection:'row',\n                            justContent:'flex-start',\n                            alignItems:'center',\n                            backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                            width:'80%',\n                            marginLeft:'10%',\n                            padding: '20px 0px',\n                        },\n                        imagesListConfig:{//图片上传时候的各种校验\n                            imageConfig:{//简单的高宽大小校验\n                                //size:2.45*1024*1024,\n                                width:430,\n                                height:270\n                            },\n                            readonly:false,\n                            /*validatorHandler:validatorHandler,*///函数式的校验你自己来决定是否能通过\n                            data:[],\n                            dataBus:true,//标记是否需要数据传输\n                            maxNum:5,//多图上传 最大能上传个数\n                            tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',//多图上传的提示性文字\n                            prop:'showUrls'\n                        },\n                        watch:{//级联或关联属性 观察其它属性的配置对象\n                            props:[\"enterpriseName\"],\n                            watchValue:{\n                                enterpriseName:{//枚举其它属性的某些值可以显示或隐藏\n                                    \"好好啊\":true,//当观察属性enterpriseName为好好啊的时候可以显示\n                                    \"ccc\":true,\n                                    \"看不见\":false//当观察属性enterpriseName为\"看不见\"的时候不显示\n                                },\n                                dddd: (...data)=>{//函数式校验\n                                    console.log(\">>>>>\",...data)\n                                    return false\n                                },\n                                ee:null//无效的配置会被忽略掉\n                            }\n                        },\n                        dataHandler(auditTypeName,...params){//根据数据动态显示内容\n                            return <span style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\">hahahah</span>\n                        },\n                        cascaderOptions:[],//级联对象显示数据源\n                        itemLabel:'label',//级联对象的显示名称\n                        itemValue:'areaId',//级联对象的显示值\n                        rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n                        rightBtnClick:data=>{//右侧需要有按钮的点击处理函数\n                            return '';\n                        },\n                        dataUrl:'/jump/getJumpType.json',//下拉选择数据接口地址\n                        initQuery:true,//是否需要初始化\n                        dataHandler:\\`(data)=>{//数据处理函数 下拉显示 label 或name  value或code\n                            console.log(data)\n                            (data.data||[]).map(item=>{\n                                item.label=item.desc;\n                                item.value=item.code;\n                            })\n                            return data.data\n                        }\\`,\n                    }\n                `,\n            }\n        },\n        methods:{\n            saveInput(param){\n                console.log(param,this.form);\n                if(!this.form[this.config.prop]) return;\n                this.items.push(this.form[this.config.prop]);\n                this.form[this.config.prop]=\"\";\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,this.items);\n                    }\n                }\n            },\n            addQueryElement(){\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,JSON.parse(this.elementConfig[this.type][this.elementItemType].options),{\n                            functionType:this.type,\n                            elementType:this.elementItemType,\n                        });\n                    }\n                }\n            },\n            deleteItem(item,index){\n                this.items.splice(index,1);\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,this.items);\n                    }\n                }\n            },\n            showTemplate(template){\n                return (template||'').replace(/\\n/g,\"<br/>\").replace(/\\s{4}/g,\"<span style='display: inline-block;width: 10px;'></span>\")\n            }\n\n        },\n        computed:{\n            currentChoosed(){\n                return Object.keys(this.elementConfig[this.type]).filter((item,seq)=>seq)\n            }\n        },\n        created() {\n            let config=this.$attrs.config;\n            //console.log(\"config\",config);\n            this.config=config;\n            let formData=config.formData;\n            if(formData){\n                /*Object.keys(formData).forEach(key=>{\n                    that.$set(that.form,key,formData[key]);\n                })*/\n                this.items=JSON.parse(JSON.stringify(formData))\n                if(this.config.dataBus){\n                    if(typeof this.config.dataBus ===\"function\"){\n                        this.config.dataBus(this.config,this.items);\n                    }\n                }\n            }\n\n        }\n    }\n</script>\n\n<style scoped>\n    #container {\n        height: 300px;\n        width:800px;\n    }\n\n    .queryElement{\n        display: block;\n        width: 100%;\n        border:0px solid #f00;\n    }\n    .addInputItemContainer{\n        display: inline-block;\n        padding: 5px 10px;\n        border:1px solid #f00;\n        border-radius: 5px;\n        color: #f00;\n        line-height: 20px;\n        margin-right: 10px;\n        margin-bottom: 10px;\n        position: relative;\n    }\n    .deleteIcon{\n        display: inline-block;\n        position: absolute;\n        right: -8px;\n        top: -8px;\n        width: 16px;\n        height: 16px;\n        line-height: 16px;\n        font-size: 12px;\n        font-weight: bold;\n        text-align: center;\n        background: #f00;\n        color: #fff;\n        border-radius: 50%;\n        cursor: pointer;\n    }\n</style>\n<style>\n    .addElement{\n        text-align: left;\n    }\n    .addElement .el-radio{\n        min-width: 165px;\n        margin-right: 10px;\n\n    }\n    .optionsElementContainer{\n        display: inline-block;\n        border: 0px dashed #faa;\n        width: 60%;\n        margin-right: 20px;\n    }\n    .chooseItemElementContainer{\n        display: inline-block;\n        border: 1px dashed #faa;\n        padding: 10px 15px;\n        margin-bottom: 15px;\n        margin-right: 15px;\n        border-radius: 5px;\n    }\n    .operateContainer{\n        display: flex;\n        width: 100%;\n        border: 0px solid #f00;\n        flex-direction: row;\n        justify-content:flex-start;\n        align-items: center;\n    }\n</style>\n"]}]}