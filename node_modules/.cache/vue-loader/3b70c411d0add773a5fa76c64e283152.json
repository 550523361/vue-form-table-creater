{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/formCreater/addQueryElement.vue?vue&type=template&id=18f6d010&scoped=true&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/formCreater/addQueryElement.vue","mtime":1553594436447},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"addElement\" },\n    [\n      _c(\n        \"div\",\n        { staticStyle: { padding: \"15px 5px\", background: \"#f0f0f0\" } },\n        _vm._l(Object.keys(_vm.elementConfig), function(element, index) {\n          return _c(\n            \"el-radio\",\n            {\n              key: index + \"_radio_\" + element,\n              staticStyle: { \"margin-left\": \"0px\" },\n              attrs: { label: element },\n              model: {\n                value: _vm.type,\n                callback: function($$v) {\n                  _vm.type = $$v\n                },\n                expression: \"type\"\n              }\n            },\n            [_vm._v(_vm._s(_vm.elementConfig[element].name))]\n          )\n        }),\n        1\n      ),\n      _vm._l(Object.keys(_vm.elementConfig), function(element, index) {\n        return _vm.type == element\n          ? _c(\n              \"div\",\n              {\n                key: index + \"\" + element,\n                staticStyle: { background: \"#dfe6ec\", padding: \"10px 5px\" }\n              },\n              [\n                _vm._l(Object.keys(_vm.elementConfig[element]), function(\n                  elementOption,\n                  index\n                ) {\n                  return _vm.elementConfig[element][elementOption].name\n                    ? _c(\n                        \"span\",\n                        { key: index + \"_radio_option_\" + element },\n                        [\n                          _vm.elementConfig[element][elementOption].name == \"br\"\n                            ? _c(\"div\", {\n                                staticStyle: {\n                                  background: \"transparent\",\n                                  height: \"15px\"\n                                }\n                              })\n                            : [\n                                _c(\n                                  \"el-radio\",\n                                  {\n                                    attrs: { label: elementOption },\n                                    model: {\n                                      value: _vm.elementItemType,\n                                      callback: function($$v) {\n                                        _vm.elementItemType = $$v\n                                      },\n                                      expression: \"elementItemType\"\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.elementConfig[element][\n                                          elementOption\n                                        ].name\n                                      )\n                                    )\n                                  ]\n                                )\n                              ]\n                        ],\n                        2\n                      )\n                    : _vm._e()\n                }),\n                _c(\"div\", {\n                  staticStyle: {\n                    \"margin-top\": \"15px\",\n                    background: \"transparent\"\n                  }\n                }),\n                _vm._l(Object.keys(_vm.elementConfig[element]), function(\n                  elementType,\n                  index\n                ) {\n                  return element == _vm.type &&\n                    _vm.elementItemType == elementType\n                    ? _c(\n                        \"span\",\n                        { key: index + \"\" + element + \"_\" + elementType },\n                        [\n                          _c(\"el-input\", {\n                            attrs: { type: \"textarea\", rows: 10 },\n                            nativeOn: {\n                              keyup: function($event) {\n                                if (\n                                  !$event.type.indexOf(\"key\") &&\n                                  _vm._k(\n                                    $event.keyCode,\n                                    \"enter\",\n                                    13,\n                                    $event.key,\n                                    \"Enter\"\n                                  )\n                                ) {\n                                  return null\n                                }\n                                return _vm.saveInput($event)\n                              }\n                            },\n                            model: {\n                              value:\n                                _vm.elementConfig[_vm.type][_vm.elementItemType]\n                                  .options,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.elementConfig[_vm.type][\n                                    _vm.elementItemType\n                                  ],\n                                  \"options\",\n                                  $$v\n                                )\n                              },\n                              expression:\n                                \"elementConfig[type][elementItemType].options\"\n                            }\n                          }),\n                          _c(\n                            \"div\",\n                            {\n                              staticStyle: {\n                                \"font-size\": \"12px\",\n                                color: \"#f00\",\n                                \"margin-top\": \"5px\"\n                              }\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(_vm.elementConfig[element].name) +\n                                  \"==>\" +\n                                  _vm._s(\n                                    _vm.elementConfig[element][elementType].name\n                                  ) +\n                                  \"--\" +\n                                  _vm._s(elementType) +\n                                  \"---\" +\n                                  _vm._s(_vm.type) +\n                                  \"--->\" +\n                                  _vm._s(_vm.elementItemType)\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    : _vm._e()\n                })\n              ],\n              2\n            )\n          : _vm._e()\n      }),\n      _c(\n        \"el-button\",\n        {\n          staticStyle: { \"margin-top\": \"15px\" },\n          attrs: { type: \"info\" },\n          on: { click: _vm.addQueryElement }\n        },\n        [_vm._v(\"确定\")]\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}