{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/tableQueryParamComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/tableQueryParamComponent.vue","mtime":1553656260042},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport backendService from \"../remoteService/backendService\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"table-query-param\",\n  data: function() {\n    return {\n      queryElements: [],\n      dataQuery: {\n        query: {}\n      },\n      readonly: {},\n      queryParam: {},\n      watchMap: {},\n      context: null\n    };\n  },\n  methods: {\n    queryListData(params) {\n      let requestParam = JSON.parse(JSON.stringify(params.queryParam)) || {};\n      delete requestParam[\"timeRange\"];\n      return backendService\n        .getData({\n          url: params.url,\n          method: params.method || \"post\",\n          data: requestParam\n        })\n        .then(function(result) {\n          return Promise.resolve(result);\n        });\n    },\n    changeQueryParam: function(data, operate) {\n      let that = this;\n      this.$nextTick(function() {\n        that.changeHelp(data, operate);\n      });\n    },\n    changeHelp(prop) {\n      let that = this;\n      let currentSwitchValue = this.queryParam[prop.prop];\n      let watchElements = this.watchMap[prop.prop] || {};\n      if (Object.keys(watchElements).length == 0 && prop.type != \"tab\") return;\n      that.initElementsPromise(watchElements, currentSwitchValue, prop).then(\n        success => {\n          console.log(\"changeHelp success**** ---\", success);\n          if (prop.type == \"tab\") {\n            that.$parent.fresh();\n          }\n        },\n        error => {\n          console.log(\"changeHelp error **** ---\", error);\n        }\n      );\n    },\n    restoreQueryParam() {\n      let that = this;\n      that.dataQuery.query = {};\n      this.queryParam = {};\n      this.initQueryElementPromise().then(\n        success => {\n          console.log(\"restoreQueryParam  ---> success--->\", success);\n        },\n        error => {\n          console.log(\"restoreQueryParam  ---> error--->\", error);\n        }\n      );\n    },\n\n    getElement(prop) {\n      let elementItem = {};\n      this.queryElements.forEach(item => {\n        if (item.prop == prop) {\n          elementItem = item;\n        }\n      });\n      return elementItem;\n    },\n\n    initQueryElementPromise() {\n      let that = this;\n      let watchMap = {};\n      /*n 级 级联查询开始*/\n      if (this.queryElements == null || this.queryElements.length == 0)\n        return Promise.resolve({ code: 1, msg: \"no elements need init!\" });\n      var requestUrlParam = [].filter.call(this.queryElements, function(item) {\n        /*发现关联关系 当值被观察的时候有变动会处理级联变动的相关元素 最常见是为 tab切换做相关下来元素的初始化*/\n        if (item.watch && item.watch.props && item.watch.props.length) {\n          item.watch.props.forEach(watchKey => {\n            if (watchMap[watchKey]) {\n              watchMap[watchKey][item.prop] = item;\n            } else {\n              let tempKeyMap = {};\n              tempKeyMap[item.prop] = item;\n              watchMap[watchKey] = tempKeyMap;\n            }\n          });\n        }\n\n        /*兼容之前老版本 start*/\n        if (item.casecadeChild) {\n          if (watchMap[item.prop]) {\n            watchMap[item.prop][item.casecadeChild] = that.getElement(\n              item.casecadeChild\n            );\n          } else {\n            let tempKeyMap = {};\n            tempKeyMap[item.casecadeChild] = that.getElement(\n              item.casecadeChild\n            );\n            watchMap[item.prop] = tempKeyMap;\n          }\n        }\n\n        if (item.casecadeGrandsonList) {\n          item.casecadeGrandsonList.forEach(childElementProp => {\n            if (watchMap[item.prop]) {\n              if (!watchMap[item.prop][childElementProp]) {\n                watchMap[item.prop][childElementProp] = that.getElement(\n                  childElementProp\n                );\n              }\n            } else {\n              let tempKeyMap = {};\n              tempKeyMap[childElementProp] = that.getElement(childElementProp);\n              watchMap[item.prop] = tempKeyMap;\n            }\n          });\n        }\n\n        if (item.casecadeParen) {\n          if (watchMap[item.casecadeParen]) {\n            watchMap[item.casecadeParen][item.prop] = item;\n          } else {\n            let tempKeyMap = {};\n            tempKeyMap[item.prop] = item;\n            watchMap[item.casecadeParen] = tempKeyMap;\n          }\n        }\n\n        /*兼容之前老版本 end*/\n\n        if (item.dataUrl && item.initQuery) {\n          that.$set(\n            that.queryParam,\n            item.prop,\n            item.defaultValue || item.value\n          );\n          return item;\n        } else {\n          if (\n            !(\n              item.type == \"search\" ||\n              item.type == \"button\" ||\n              item.prop == \"deleteProps\"\n            )\n          ) {\n            that.$set(\n              that.queryParam,\n              item.prop,\n              item.defaultValue || item.value\n            );\n          }\n        }\n      });\n      that.$set(that, \"watchMap\", watchMap);\n\n      let promiseList = [];\n\n      for (let seq in requestUrlParam) {\n        let initElementPromise = new Promise(function(resolve, reject) {\n          let item = requestUrlParam[seq];\n          if (\n            item.casecadeParen == null ||\n            item.casecadeParen == \"\" ||\n            item.includeInit == true\n          ) {\n            let submitParam = JSON.parse(JSON.stringify(that.queryParam));\n            if (submitParam.timeRange) {\n              submitParam[\"startTime\"] = that.queryParam.timeRange[0] || \"\";\n              submitParam[\"endTime\"] = that.queryParam.timeRange[1] || \"\";\n            }\n\n            if (that.queryParam.deleteProps) {\n              console.log(that.queryParam.deleteProps);\n              that.queryParam.deleteProps.forEach(item => {\n                delete submitParam[item];\n              });\n              delete submitParam[\"deleteProps\"];\n            }\n            if (item.watchParams) {\n              Object.keys(item.watchParams).forEach(key => {\n                submitParam[key] =\n                  that.readonly[key] || that.queryParam[key] || \"\";\n              });\n            }\n\n            if (item.otherParams) {\n              Object.keys(item.otherParams).forEach(key => {\n                submitParam[key] = item.otherParams[key] || \"\";\n              });\n            }\n\n            /*顶级元素优先查询完成一级数据初始化*/\n            that\n              .queryListData({\n                url: item.dataUrl,\n                queryParam: submitParam,\n                method: item.httpMethod || \"get\"\n              })\n              .then(\n                listData => {\n                  if (!listData)\n                    return resolve({ url: item.dataUrl, data: listData });\n                  that.$set(\n                    that.dataQuery.query,\n                    item.propList,\n                    item.dataHandler\n                      ? item.dataHandler(listData)\n                      : listData[item.propValueList]\n                  );\n                  that.$set(that.queryParam, item.prop, item.defaultValue);\n                  resolve({ url: item.dataUrl, data: listData });\n                  //console.log(\"****\",this.dataQuery.query)\n                },\n                error => {\n                  console.log(error);\n                  reject({ url: item.dataUrl, error });\n                }\n              );\n          }\n        });\n        promiseList.push(initElementPromise);\n      }\n      return Promise.all(promiseList);\n    },\n\n    initElementsPromise(elements, currentSwitchValue, parentElement) {\n      /*被关注的元素值发生变动执行的初始化操作*/\n      let that = this;\n      let promiseList = [];\n      for (let seq in elements) {\n        let initElementPromise = new Promise(function(resolve, reject) {\n          let item = elements[seq];\n          if (item) {\n            let defaultPrevent = {};\n            defaultPrevent[parentElement.prop] = \"\";\n            item.preventRequestValue = item.preventRequestValue\n              ? item.preventRequestValue\n              : defaultPrevent;\n            if (item.preventRequestValue) {\n              let keys = Object.keys(item.preventRequestValue);\n              if (keys.length) {\n                let preventKeys = keys.filter(key => {\n                  return that.queryParam[key] == item.preventRequestValue[key];\n                });\n\n                if (preventKeys.length) {\n                  let listData = [];\n                  that.$set(that.dataQuery.query, item.propList, listData);\n                  that.$set(that.queryParam, item.prop, item.defaultValue);\n                  resolve({ url: item.dataUrl, data: listData });\n                  return;\n                }\n              }\n            }\n\n            let submitParam = JSON.parse(JSON.stringify(that.queryParam));\n            if (submitParam.timeRange) {\n              submitParam[\"startTime\"] = that.queryParam.timeRange[0] || \"\";\n              submitParam[\"endTime\"] = that.queryParam.timeRange[1] || \"\";\n            }\n\n            if (item.deleteProps) {\n              console.log(item.deleteProps);\n              item.deleteProps.forEach(item => {\n                delete submitParam[item];\n              });\n              delete submitParam[\"deleteProps\"];\n            }\n\n            if (item.watchParams) {\n              Object.keys(item.watchParams).forEach(key => {\n                submitParam[key] =\n                  that.readonly[key] || that.queryParam[key] || \"\";\n              });\n            }\n\n            for (let key in item.dropProps) {\n              delete submitParam[item.dropProps[key]];\n            }\n            //console.log(\"item\",item)\n\n            if (item.watch && item.watch.watchValue) {\n              // console.log(\"needInitSelected.watch.watchValue\",item.watch.watchValue)\n              Object.keys(item.watch.watchValue).forEach(key => {\n                submitParam[key] = that.readonly[key] || submitParam[key] || \"\";\n              });\n            }\n\n            if (item.otherParams) {\n              Object.keys(item.otherParams).forEach(key => {\n                submitParam[key] = item.otherParams[key] || \"\";\n              });\n            }\n\n            if (item.extendsProp) {\n              for (let seq in item.extendsProp) {\n                submitParam[item.extendsProp[seq]] = currentSwitchValue;\n              }\n            }\n\n            if (!item.dataUrl) {\n              that.$set(that.queryParam, item.prop, item.defaultValue);\n              resolve({ url: item.dataUrl, data: {} });\n              return;\n            }\n\n            /*顶级元素优先查询完成一级数据初始化*/\n            that\n              .queryListData({\n                url: item.dataUrl,\n                queryParam: submitParam,\n                method: item.httpMethod || \"get\"\n              })\n              .then(\n                listData => {\n                  if (!listData)\n                    return resolve({ url: item.dataUrl, data: listData });\n                  that.$set(\n                    that.dataQuery.query,\n                    item.propList,\n                    item.dataHandler\n                      ? item.dataHandler(listData)\n                      : listData[item.propValueList]\n                  );\n                  that.$set(that.queryParam, item.prop, item.defaultValue);\n                  resolve({ url: item.dataUrl, data: listData });\n                  //console.log(\"****\",this.dataQuery.query)\n                },\n                error => {\n                  console.log(error);\n                  reject({ url: item.dataUrl, error });\n                }\n              );\n          }\n        });\n        promiseList.push(initElementPromise);\n      }\n      return Promise.all(promiseList);\n    },\n\n    queryBtnClick(params, btn, ...otherParams) {\n      let that = this;\n      console.log(\"queryBtnClick\", params, btn, ...otherParams);\n      if (!params.timeRange) {\n        params.timeRange = [\"\", \"\"];\n      }\n\n      if (btn.type == \"tab\" && btn.needReinit) {\n        //this.initQueryElement();\n        this.$nextTick(data => {\n          console.log(\"queryBtnClick\", params, btn);\n          this.reInitQueryElement();\n        });\n      }\n\n      if (btn.click && typeof btn.click == \"function\") {\n        if (btn.check && typeof btn.check == \"function\") {\n          let checkResult = btn.check(\n            params,\n            btn,\n            this.dataQuery.query,\n            ...otherParams\n          );\n          if (checkResult instanceof Promise) {\n            checkResult.then(\n              success => {\n                btn.click(success.params, btn, ...otherParams);\n              },\n              error => {\n                btn.errorTip &&\n                  typeof btn.errorTip === \"function\" &&\n                  btn.errorTip();\n                console.log(\"验证失败 不搜索!调用错误提示方法\");\n                //btn.click(params,btn);\n              }\n            );\n          } else if (checkResult) {\n            //console.log(\"checkResult\",checkResult)\n            btn.click(\n              checkResult.params,\n              btn,\n              this.dataQuery.query,\n              ...otherParams\n            );\n          } else {\n            console.error(\n              \"验证没有返回,请返回 {params:参数对象} 或 Promise对象\"\n            );\n            that.$message({\n              type: \"error\",\n              message: \"验证没有返回 不请求 请查看控制台帮助..\"\n            });\n          }\n        } else {\n          btn.click(params, btn, ...otherParams);\n        }\n      } else {\n        if (\n          this.$attrs.clickConfig &&\n          typeof this.$attrs.clickConfig == \"function\"\n        ) {\n          if (btn.check && typeof btn.check == \"function\") {\n            let checkResult = btn.check(params, btn, ...otherParams);\n            if (checkResult instanceof Promise) {\n              checkResult.then(\n                success => {\n                  this.$parent.$emit(\n                    this.$attrs.queryConfig.listenerId,\n                    success.params\n                  );\n                  this.$attrs.clickConfig(\n                    success.params,\n                    btn,\n                    that.queryParam,\n                    ...otherParams\n                  );\n                },\n                error => {\n                  if (btn.errorTip && typeof btn.errorTip === \"function\") {\n                    btn.errorTip();\n                  } else {\n                    this.$message({ type: \"error\", message: error.msg });\n                  }\n                  console.log(\"验证失败 不搜索!调用错误提示方法\");\n                  //btn.click(params,btn);\n                }\n              );\n            } else if (checkResult) {\n              console.log(\"checkResult***************\", checkResult.params);\n              //this.$parent.$emit(this.$attrs.queryConfig.listenerId,checkResult.params)\n              this.$attrs.clickConfig(\n                checkResult.params,\n                btn,\n                that.queryParam,\n                ...otherParams\n              );\n            } else {\n              console.error(\n                \"验证没有返回,请返回 {params:参数对象} 或 Promise对象\"\n              );\n              that.$message({\n                type: \"error\",\n                message: \"验证没有返回 不请求 请查看控制台帮助..\"\n              });\n            }\n          } else {\n            //this.$parent.$emit(this.$attrs.queryConfig.listenerId,params,btn)\n            this.$attrs.clickConfig(\n              params,\n              btn,\n              that.queryParam,\n              ...otherParams\n            );\n          }\n        }\n      }\n    },\n    initPage() {\n      let that = this;\n\n      /*挑选出需要初始化的查询元素 组合成promise.all 排序依赖元素*/\n      that.readonly = this.$attrs.readData || {};\n      this.queryElements = that.$attrs.queryConfig.queryElements;\n\n      //静态值和动态值均已初始化完毕 可以调用table 进行数据查询了\n      that.initQueryElementPromise().then(\n        success => {\n          console.log(\"params init success  page init first\", success);\n          that.$parent.fresh();\n        },\n        error => {\n          console.log(\"error\", error);\n        }\n      );\n\n      that.$watch(\n        \"$attrs.queryConfig.queryElements\",\n        function(newValue, oldValue) {\n          that.$set(that, \"queryElements\", newValue);\n          that.$nextTick(function() {\n            that.restoreQueryParam();\n          });\n        },\n        { deep: true }\n      );\n    },\n    groupedStyle(groupElements) {\n      let groupStyle = null;\n      groupElements.forEach(item => {\n        if (!groupStyle && item.groupedStyle) {\n          groupStyle = item.groupedStyle;\n        }\n      });\n      console.log(\"groupElements\", groupElements);\n      return groupStyle || {};\n    }\n  },\n  created: function() {\n    this.initPage();\n  },\n  watch: {\n    $route(to, from) {\n      //console.log(\"this.$route.params\",this.$route.params)\n      //this.initPage();\n    }\n  },\n  computed: {\n    groupedElements() {\n      return (\n        _.groupBy(\n          this.$attrs.queryConfig.queryElements,\n          item => item.groupName\n        ) || {}\n      );\n    }\n  }\n};\n",{"version":3,"sources":["tableQueryParamComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"tableQueryParamComponent.vue","sourceRoot":"src/components/tableList","sourcesContent":["<template>\n  <div :style=\"$attrs.queryConfig.containerStyle||{}\">\n    <div\n      v-for=\"(groupName,groupElementIndex) in Object.keys(groupedElements)\"\n      :style=\"groupedStyle(groupedElements[groupName])\"\n      class=\"searchContainer\"\n      :key=\"groupElementIndex+'_'+groupName\"\n    >\n      <div class=\"elementsContainer\" :style=\"$attrs.queryConfig.elementsContainer||{}\">\n        <span\n          class=\"queryElement\"\n          :style=\"queryItem.style||{}\"\n          :class=\"{hidden:queryItem.type=='hidden',switchElementContainer:queryItem.switchElements,tabContainer:queryItem.type=='tab',datetimerange:queryItem.type=='datetimerange',tipHtml:queryItem.type=='tipHtml'}\"\n          v-for=\"(queryItem,paramIndex) in  groupedElements[groupName]\"\n          :key=\"paramIndex+'_'+queryItem.prop+'_query'+queryItem.label\"\n        >\n          <template\n            v-if=\"queryItem.type=='input'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <span class=\"form-inline\" style=\"margin-top:10px;padding-right: 10px;\">\n              <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n              <el-input\n                type=\"text\"\n                style=\"margin-bottom: 15px;\"\n                :placeholder=\"queryItem.placeholder\"\n                v-model=\"queryParam[queryItem.prop]\"\n                @input=\"changeQueryParam(queryItem)\"\n              />\n              <span\n                v-if=\"queryItem.rightBtn\"\n                @click=\"queryBtnClick(queryParam,queryItem.rightBtn)\"\n                class=\"rightBtnStyle\"\n                :style=\"queryItem.rightBtn.style\"\n              >{{queryItem.rightBtn.label||'搜索'}}</span>\n            </span>\n          </template>\n          <template\n            v-if=\"queryItem.type=='date'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <span class=\"form-inline\" style=\"margin-top:10px;padding-right: 10px;\">\n              <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n              <input\n                type=\"text\"\n                :placeholder=\"queryItem.placeholder\"\n                :id=\"queryItem.id\"\n                class\n                v-model=\"queryParam[queryItem.prop]\"\n              >\n            </span>\n          </template>\n          <template\n            v-if=\"queryItem.type=='datetimerange'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <span\n              class=\"form-inline\"\n              v-if=\"queryItem.type=='datetimerange'\"\n              style=\"margin-top:10px;padding-right: 10px;\"\n            >\n              <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n              <el-date-picker\n                v-model=\"queryParam[queryItem.prop]\"\n                type=\"datetimerange\"\n                :picker-options=\"queryItem.options\"\n                :range-separator=\"queryItem.centerLabel||'至'\"\n                :placeholder=\"queryItem.placeholder||'请选择时间范围'\"\n                format=\"yyyy-MM-dd HH:mm:ss\"\n                @change=\"data=>{\n                                                queryParam[queryItem.prop]=data.split((queryItem.centerLabel||'至'))\n                                            }\"\n                align=\"right\"\n              ></el-date-picker>\n            </span>\n          </template>\n          <template\n            v-if=\"queryItem.type=='composite'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <span class=\"form-inline\" style=\"margin-top:10px;padding-right: 10px;\">\n              <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n              <span\n                v-for=\"component in queryItem.components\"\n                :key=\"component.prop+'_query'+queryItem.label+'_'+paramIndex\"\n              >\n                <input\n                  type=\"text\"\n                  class=\"width170\"\n                  v-model=\"queryParam[component.prop]\"\n                  :placeholder=\"component.placeholder\"\n                  :id=\"component.id\"\n                  :maxelementid=\"component.maxelementid\"\n                  :minelementid=\"component.minelementid\"\n                >\n                <span v-if=\"$index==0\">{{queryItem.link}}</span>\n              </span>\n            </span>\n          </template>\n          <template\n            v-if=\"queryItem.type=='select'&&(queryItem.watch&&queryItem.watch.props?JSON.parse(JSON.stringify(queryItem.watch.props)).map(prop=>{\n                        if(Object.keys(queryItem.watch.watchValue[prop]).length==0){\n                            return false;\n                        }\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <span\n              class=\"form-inline\"\n              :class=\"{switchContainer:queryItem.switchElements}\"\n              style=\"margin-top:10px;padding-right: 10px;\"\n            >\n              <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n              <span v-if=\"!queryItem.dataUrl\">\n                <el-select\n                  class=\"width170\"\n                  v-model=\"queryParam[queryItem.prop]\"\n                  filterable\n                  @change=\"changeQueryParam(queryItem)\"\n                >\n                  <el-option value>{{queryItem.placeholder||'请选择'}}</el-option>\n                  <el-option\n                    v-for=\"component in queryItem.options\"\n                    :value=\"component.value||component.code\"\n                    :key=\"component.code+component.value+component.id+'_query'+component.label\"\n                    :label=\"component.label||component.name\"\n                  >{{component.label||component.name}}</el-option>\n                </el-select>\n              </span>\n              <span v-if=\"queryItem.dataUrl\">\n                <el-select\n                  class=\"width170\"\n                  v-model=\"queryParam[queryItem.prop]\"\n                  filterable\n                  @change=\"changeQueryParam(queryItem)\"\n                >\n                  <el-option value>{{queryItem.placeholder||'请选择'}}</el-option>\n                  <el-option\n                    v-for=\"component in dataQuery.query[queryItem.propList]\"\n                    :key=\"queryItem.prop+'_select_'+component.id+'_value_'+component.value+'_code_'+component.code\"\n                    :value=\"component.code||component.id||component.value\"\n                    :code=\"component.id||component.code||component.value\"\n                    :label=\"component.label||component.name||component.desc\"\n                  >{{component.name||component.label||component.desc}}</el-option>\n                </el-select>\n              </span>\n            </span>\n          </template>\n          <template\n            v-if=\"queryItem.type=='tipHtml'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <span\n              class=\"form-inline\"\n              :style=\"queryItem.style||{'margin-top':'10px','padding-right': '10px'}\"\n            >\n              <div\n                v-for=\"(tip,indexTip) in queryItem.items\"\n                @click=\"(!tip.items)&&queryBtnClick(queryParam,queryItem,indexTip)\"\n                :key=\"indexTip+'_'+queryItem.prop\"\n              >\n                <template v-if=\"tip.items\">\n                  <span\n                    v-for=\"(innerItem,innerItemIndex) in tip.items\"\n                    @click=\"queryBtnClick(queryParam,queryItem,indexTip,innerItemIndex)\"\n                    :key=\"'innerItemIndex'+'_'+innerItemIndex\"\n                    v-html=\"innerItem\"\n                  ></span>\n                </template>\n                <span v-else v-html=\"tip\"></span>\n              </div>\n            </span>\n          </template>\n          <template\n            v-if=\"queryItem.type=='tab'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n          >\n            <ul class=\"myTabsContainer\">\n              <li\n                v-for=\"(component,labelIndex) in !(queryItem.dataUrl&&queryItem.initQuery)?queryItem.components:dataQuery.query[queryItem.propList]\"\n                :key=\"component.code+component.prop+component.id+'__query'+component.label\"\n              >\n                <input\n                  type=\"radio\"\n                  :name=\"component.prop\"\n                  :id=\"component.prop+'_'+labelIndex\"\n                  :value=\"component.value||component.code\"\n                  @change=\"queryBtnClick(queryParam,queryItem,component)\"\n                  v-model=\"queryParam[queryItem.prop]\"\n                >\n                <label\n                  :for=\"component.prop+'_'+labelIndex\"\n                  :class=\"['btn',{checkedStyle:queryParam[queryItem.prop]==component.value}]\"\n                >{{component.label||component.desc||component.name}}</label>\n              </li>\n            </ul>\n          </template>\n        </span>\n        <span\n          v-for=\"(queryItem,paramIndex) in groupedElements[groupName]\"\n          v-if=\"queryItem.type=='button'||queryItem.type=='search'\"\n          :style=\"queryItem.style||{paddingTop:'10px'}\"\n          v-bind:hidden=\"queryItem.hidden\"\n          :key=\"queryItem.prop+'_query'+queryItem.label+'_'+paramIndex\"\n          @click=\"queryBtnClick(queryParam,queryItem)\"\n        >\n          <template v-if=\"queryItem.viewHandler\">\n            <template v-if=\"!queryItem.html\">\n              <span\n                v-if=\"queryItem.type!='search'\"\n                :class=\"['btn','btn-default','el-button el-button--default',queryItem.type=='search'?'el-button el-button--info':'',queryItem.btnClass]\"\n              >{{queryItem.viewHandler(queryItem,$route.params,queryParam,context)}}</span>\n            </template>\n            <template v-else>\n              <span\n                v-if=\"queryItem.type!='search'\"\n                v-html=\"queryItem.viewHandler(queryItem,$route.params,queryParam,context)\"\n              ></span>\n            </template>\n          </template>\n          <template v-else>\n            <span\n              v-if=\"queryItem.type!='search'\"\n              :style=\"queryItem.style||{}\"\n              :class=\"['btn','btn-default','el-button el-button--default',queryItem.type=='search'?'el-button el-button--info':'',queryItem.btnClass]\"\n            >{{queryItem.label}}</span>\n            <el-button v-else type=\"primary\" icon=\"search\">搜索</el-button>\n          </template>\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport backendService from \"../remoteService/backendService\";\nimport _ from \"lodash\";\n\nexport default {\n  name: \"table-query-param\",\n  data: function() {\n    return {\n      queryElements: [],\n      dataQuery: {\n        query: {}\n      },\n      readonly: {},\n      queryParam: {},\n      watchMap: {},\n      context: null\n    };\n  },\n  methods: {\n    queryListData(params) {\n      let requestParam = JSON.parse(JSON.stringify(params.queryParam)) || {};\n      delete requestParam[\"timeRange\"];\n      return backendService\n        .getData({\n          url: params.url,\n          method: params.method || \"post\",\n          data: requestParam\n        })\n        .then(function(result) {\n          return Promise.resolve(result);\n        });\n    },\n    changeQueryParam: function(data, operate) {\n      let that = this;\n      this.$nextTick(function() {\n        that.changeHelp(data, operate);\n      });\n    },\n    changeHelp(prop) {\n      let that = this;\n      let currentSwitchValue = this.queryParam[prop.prop];\n      let watchElements = this.watchMap[prop.prop] || {};\n      if (Object.keys(watchElements).length == 0 && prop.type != \"tab\") return;\n      that.initElementsPromise(watchElements, currentSwitchValue, prop).then(\n        success => {\n          console.log(\"changeHelp success**** ---\", success);\n          if (prop.type == \"tab\") {\n            that.$parent.fresh();\n          }\n        },\n        error => {\n          console.log(\"changeHelp error **** ---\", error);\n        }\n      );\n    },\n    restoreQueryParam() {\n      let that = this;\n      that.dataQuery.query = {};\n      this.queryParam = {};\n      this.initQueryElementPromise().then(\n        success => {\n          console.log(\"restoreQueryParam  ---> success--->\", success);\n        },\n        error => {\n          console.log(\"restoreQueryParam  ---> error--->\", error);\n        }\n      );\n    },\n\n    getElement(prop) {\n      let elementItem = {};\n      this.queryElements.forEach(item => {\n        if (item.prop == prop) {\n          elementItem = item;\n        }\n      });\n      return elementItem;\n    },\n\n    initQueryElementPromise() {\n      let that = this;\n      let watchMap = {};\n      /*n 级 级联查询开始*/\n      if (this.queryElements == null || this.queryElements.length == 0)\n        return Promise.resolve({ code: 1, msg: \"no elements need init!\" });\n      var requestUrlParam = [].filter.call(this.queryElements, function(item) {\n        /*发现关联关系 当值被观察的时候有变动会处理级联变动的相关元素 最常见是为 tab切换做相关下来元素的初始化*/\n        if (item.watch && item.watch.props && item.watch.props.length) {\n          item.watch.props.forEach(watchKey => {\n            if (watchMap[watchKey]) {\n              watchMap[watchKey][item.prop] = item;\n            } else {\n              let tempKeyMap = {};\n              tempKeyMap[item.prop] = item;\n              watchMap[watchKey] = tempKeyMap;\n            }\n          });\n        }\n\n        /*兼容之前老版本 start*/\n        if (item.casecadeChild) {\n          if (watchMap[item.prop]) {\n            watchMap[item.prop][item.casecadeChild] = that.getElement(\n              item.casecadeChild\n            );\n          } else {\n            let tempKeyMap = {};\n            tempKeyMap[item.casecadeChild] = that.getElement(\n              item.casecadeChild\n            );\n            watchMap[item.prop] = tempKeyMap;\n          }\n        }\n\n        if (item.casecadeGrandsonList) {\n          item.casecadeGrandsonList.forEach(childElementProp => {\n            if (watchMap[item.prop]) {\n              if (!watchMap[item.prop][childElementProp]) {\n                watchMap[item.prop][childElementProp] = that.getElement(\n                  childElementProp\n                );\n              }\n            } else {\n              let tempKeyMap = {};\n              tempKeyMap[childElementProp] = that.getElement(childElementProp);\n              watchMap[item.prop] = tempKeyMap;\n            }\n          });\n        }\n\n        if (item.casecadeParen) {\n          if (watchMap[item.casecadeParen]) {\n            watchMap[item.casecadeParen][item.prop] = item;\n          } else {\n            let tempKeyMap = {};\n            tempKeyMap[item.prop] = item;\n            watchMap[item.casecadeParen] = tempKeyMap;\n          }\n        }\n\n        /*兼容之前老版本 end*/\n\n        if (item.dataUrl && item.initQuery) {\n          that.$set(\n            that.queryParam,\n            item.prop,\n            item.defaultValue || item.value\n          );\n          return item;\n        } else {\n          if (\n            !(\n              item.type == \"search\" ||\n              item.type == \"button\" ||\n              item.prop == \"deleteProps\"\n            )\n          ) {\n            that.$set(\n              that.queryParam,\n              item.prop,\n              item.defaultValue || item.value\n            );\n          }\n        }\n      });\n      that.$set(that, \"watchMap\", watchMap);\n\n      let promiseList = [];\n\n      for (let seq in requestUrlParam) {\n        let initElementPromise = new Promise(function(resolve, reject) {\n          let item = requestUrlParam[seq];\n          if (\n            item.casecadeParen == null ||\n            item.casecadeParen == \"\" ||\n            item.includeInit == true\n          ) {\n            let submitParam = JSON.parse(JSON.stringify(that.queryParam));\n            if (submitParam.timeRange) {\n              submitParam[\"startTime\"] = that.queryParam.timeRange[0] || \"\";\n              submitParam[\"endTime\"] = that.queryParam.timeRange[1] || \"\";\n            }\n\n            if (that.queryParam.deleteProps) {\n              console.log(that.queryParam.deleteProps);\n              that.queryParam.deleteProps.forEach(item => {\n                delete submitParam[item];\n              });\n              delete submitParam[\"deleteProps\"];\n            }\n            if (item.watchParams) {\n              Object.keys(item.watchParams).forEach(key => {\n                submitParam[key] =\n                  that.readonly[key] || that.queryParam[key] || \"\";\n              });\n            }\n\n            if (item.otherParams) {\n              Object.keys(item.otherParams).forEach(key => {\n                submitParam[key] = item.otherParams[key] || \"\";\n              });\n            }\n\n            /*顶级元素优先查询完成一级数据初始化*/\n            that\n              .queryListData({\n                url: item.dataUrl,\n                queryParam: submitParam,\n                method: item.httpMethod || \"get\"\n              })\n              .then(\n                listData => {\n                  if (!listData)\n                    return resolve({ url: item.dataUrl, data: listData });\n                  that.$set(\n                    that.dataQuery.query,\n                    item.propList,\n                    item.dataHandler\n                      ? item.dataHandler(listData)\n                      : listData[item.propValueList]\n                  );\n                  that.$set(that.queryParam, item.prop, item.defaultValue);\n                  resolve({ url: item.dataUrl, data: listData });\n                  //console.log(\"****\",this.dataQuery.query)\n                },\n                error => {\n                  console.log(error);\n                  reject({ url: item.dataUrl, error });\n                }\n              );\n          }\n        });\n        promiseList.push(initElementPromise);\n      }\n      return Promise.all(promiseList);\n    },\n\n    initElementsPromise(elements, currentSwitchValue, parentElement) {\n      /*被关注的元素值发生变动执行的初始化操作*/\n      let that = this;\n      let promiseList = [];\n      for (let seq in elements) {\n        let initElementPromise = new Promise(function(resolve, reject) {\n          let item = elements[seq];\n          if (item) {\n            let defaultPrevent = {};\n            defaultPrevent[parentElement.prop] = \"\";\n            item.preventRequestValue = item.preventRequestValue\n              ? item.preventRequestValue\n              : defaultPrevent;\n            if (item.preventRequestValue) {\n              let keys = Object.keys(item.preventRequestValue);\n              if (keys.length) {\n                let preventKeys = keys.filter(key => {\n                  return that.queryParam[key] == item.preventRequestValue[key];\n                });\n\n                if (preventKeys.length) {\n                  let listData = [];\n                  that.$set(that.dataQuery.query, item.propList, listData);\n                  that.$set(that.queryParam, item.prop, item.defaultValue);\n                  resolve({ url: item.dataUrl, data: listData });\n                  return;\n                }\n              }\n            }\n\n            let submitParam = JSON.parse(JSON.stringify(that.queryParam));\n            if (submitParam.timeRange) {\n              submitParam[\"startTime\"] = that.queryParam.timeRange[0] || \"\";\n              submitParam[\"endTime\"] = that.queryParam.timeRange[1] || \"\";\n            }\n\n            if (item.deleteProps) {\n              console.log(item.deleteProps);\n              item.deleteProps.forEach(item => {\n                delete submitParam[item];\n              });\n              delete submitParam[\"deleteProps\"];\n            }\n\n            if (item.watchParams) {\n              Object.keys(item.watchParams).forEach(key => {\n                submitParam[key] =\n                  that.readonly[key] || that.queryParam[key] || \"\";\n              });\n            }\n\n            for (let key in item.dropProps) {\n              delete submitParam[item.dropProps[key]];\n            }\n            //console.log(\"item\",item)\n\n            if (item.watch && item.watch.watchValue) {\n              // console.log(\"needInitSelected.watch.watchValue\",item.watch.watchValue)\n              Object.keys(item.watch.watchValue).forEach(key => {\n                submitParam[key] = that.readonly[key] || submitParam[key] || \"\";\n              });\n            }\n\n            if (item.otherParams) {\n              Object.keys(item.otherParams).forEach(key => {\n                submitParam[key] = item.otherParams[key] || \"\";\n              });\n            }\n\n            if (item.extendsProp) {\n              for (let seq in item.extendsProp) {\n                submitParam[item.extendsProp[seq]] = currentSwitchValue;\n              }\n            }\n\n            if (!item.dataUrl) {\n              that.$set(that.queryParam, item.prop, item.defaultValue);\n              resolve({ url: item.dataUrl, data: {} });\n              return;\n            }\n\n            /*顶级元素优先查询完成一级数据初始化*/\n            that\n              .queryListData({\n                url: item.dataUrl,\n                queryParam: submitParam,\n                method: item.httpMethod || \"get\"\n              })\n              .then(\n                listData => {\n                  if (!listData)\n                    return resolve({ url: item.dataUrl, data: listData });\n                  that.$set(\n                    that.dataQuery.query,\n                    item.propList,\n                    item.dataHandler\n                      ? item.dataHandler(listData)\n                      : listData[item.propValueList]\n                  );\n                  that.$set(that.queryParam, item.prop, item.defaultValue);\n                  resolve({ url: item.dataUrl, data: listData });\n                  //console.log(\"****\",this.dataQuery.query)\n                },\n                error => {\n                  console.log(error);\n                  reject({ url: item.dataUrl, error });\n                }\n              );\n          }\n        });\n        promiseList.push(initElementPromise);\n      }\n      return Promise.all(promiseList);\n    },\n\n    queryBtnClick(params, btn, ...otherParams) {\n      let that = this;\n      console.log(\"queryBtnClick\", params, btn, ...otherParams);\n      if (!params.timeRange) {\n        params.timeRange = [\"\", \"\"];\n      }\n\n      if (btn.type == \"tab\" && btn.needReinit) {\n        //this.initQueryElement();\n        this.$nextTick(data => {\n          console.log(\"queryBtnClick\", params, btn);\n          this.reInitQueryElement();\n        });\n      }\n\n      if (btn.click && typeof btn.click == \"function\") {\n        if (btn.check && typeof btn.check == \"function\") {\n          let checkResult = btn.check(\n            params,\n            btn,\n            this.dataQuery.query,\n            ...otherParams\n          );\n          if (checkResult instanceof Promise) {\n            checkResult.then(\n              success => {\n                btn.click(success.params, btn, ...otherParams);\n              },\n              error => {\n                btn.errorTip &&\n                  typeof btn.errorTip === \"function\" &&\n                  btn.errorTip();\n                console.log(\"验证失败 不搜索!调用错误提示方法\");\n                //btn.click(params,btn);\n              }\n            );\n          } else if (checkResult) {\n            //console.log(\"checkResult\",checkResult)\n            btn.click(\n              checkResult.params,\n              btn,\n              this.dataQuery.query,\n              ...otherParams\n            );\n          } else {\n            console.error(\n              \"验证没有返回,请返回 {params:参数对象} 或 Promise对象\"\n            );\n            that.$message({\n              type: \"error\",\n              message: \"验证没有返回 不请求 请查看控制台帮助..\"\n            });\n          }\n        } else {\n          btn.click(params, btn, ...otherParams);\n        }\n      } else {\n        if (\n          this.$attrs.clickConfig &&\n          typeof this.$attrs.clickConfig == \"function\"\n        ) {\n          if (btn.check && typeof btn.check == \"function\") {\n            let checkResult = btn.check(params, btn, ...otherParams);\n            if (checkResult instanceof Promise) {\n              checkResult.then(\n                success => {\n                  this.$parent.$emit(\n                    this.$attrs.queryConfig.listenerId,\n                    success.params\n                  );\n                  this.$attrs.clickConfig(\n                    success.params,\n                    btn,\n                    that.queryParam,\n                    ...otherParams\n                  );\n                },\n                error => {\n                  if (btn.errorTip && typeof btn.errorTip === \"function\") {\n                    btn.errorTip();\n                  } else {\n                    this.$message({ type: \"error\", message: error.msg });\n                  }\n                  console.log(\"验证失败 不搜索!调用错误提示方法\");\n                  //btn.click(params,btn);\n                }\n              );\n            } else if (checkResult) {\n              console.log(\"checkResult***************\", checkResult.params);\n              //this.$parent.$emit(this.$attrs.queryConfig.listenerId,checkResult.params)\n              this.$attrs.clickConfig(\n                checkResult.params,\n                btn,\n                that.queryParam,\n                ...otherParams\n              );\n            } else {\n              console.error(\n                \"验证没有返回,请返回 {params:参数对象} 或 Promise对象\"\n              );\n              that.$message({\n                type: \"error\",\n                message: \"验证没有返回 不请求 请查看控制台帮助..\"\n              });\n            }\n          } else {\n            //this.$parent.$emit(this.$attrs.queryConfig.listenerId,params,btn)\n            this.$attrs.clickConfig(\n              params,\n              btn,\n              that.queryParam,\n              ...otherParams\n            );\n          }\n        }\n      }\n    },\n    initPage() {\n      let that = this;\n\n      /*挑选出需要初始化的查询元素 组合成promise.all 排序依赖元素*/\n      that.readonly = this.$attrs.readData || {};\n      this.queryElements = that.$attrs.queryConfig.queryElements;\n\n      //静态值和动态值均已初始化完毕 可以调用table 进行数据查询了\n      that.initQueryElementPromise().then(\n        success => {\n          console.log(\"params init success  page init first\", success);\n          that.$parent.fresh();\n        },\n        error => {\n          console.log(\"error\", error);\n        }\n      );\n\n      that.$watch(\n        \"$attrs.queryConfig.queryElements\",\n        function(newValue, oldValue) {\n          that.$set(that, \"queryElements\", newValue);\n          that.$nextTick(function() {\n            that.restoreQueryParam();\n          });\n        },\n        { deep: true }\n      );\n    },\n    groupedStyle(groupElements) {\n      let groupStyle = null;\n      groupElements.forEach(item => {\n        if (!groupStyle && item.groupedStyle) {\n          groupStyle = item.groupedStyle;\n        }\n      });\n      console.log(\"groupElements\", groupElements);\n      return groupStyle || {};\n    }\n  },\n  created: function() {\n    this.initPage();\n  },\n  watch: {\n    $route(to, from) {\n      //console.log(\"this.$route.params\",this.$route.params)\n      //this.initPage();\n    }\n  },\n  computed: {\n    groupedElements() {\n      return (\n        _.groupBy(\n          this.$attrs.queryConfig.queryElements,\n          item => item.groupName\n        ) || {}\n      );\n    }\n  }\n};\n</script>\n\n<style scoped>\ninput,\nselect,\n.queryParamInput {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: #fff;\n  background-image: none;\n  border-radius: 4px;\n  border: 1px solid #bfcbd9;\n  box-sizing: border-box;\n  color: #1f2d3d;\n  font-size: inherit;\n  height: 36px;\n  line-height: 1;\n  outline: 0;\n  padding: 3px 10px;\n  transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\n\n  width: 220px;\n}\n\ninput,\nselect,\n.queryParamInput,\n.el-select,\n.datetimerange {\n  margin-bottom: 15px;\n}\n\nlabel.btn,\n.btn,\n.el-button {\n  display: inline-block;\n  line-height: 1;\n  white-space: nowrap;\n  cursor: pointer;\n  /*border: 1px solid #c4c4c4;*/\n  /*color: #fff;*/\n  margin: 0;\n  padding: 10px 15px;\n  border-radius: 4px;\n  margin-bottom: 15px;\n  margin-right: 10px;\n}\nlabel.btn {\n  margin-right: 0px;\n  border: 0px solid #fff;\n  color: #48576a;\n}\n.searchContainer {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  background: rgba(0, 0, 0, 0);\n  padding: 10px;\n  border: 0px solid #f00;\n  background: linear-gradient(180deg, #6cb4ff, rgb(255, 255, 255));\n}\n.elementsContainer {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  flex-shrink: 1;\n  position: relative;\n}\n.queryElement {\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  width: auto;\n}\n.queryElement span[flagkey=\"hidden\"],\n.hidden {\n  display: none !important;\n  background: #f00;\n}\n\n.tabContainer {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 100%;\n}\n.tabContainer ul {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.tabContainer ul li {\n  display: inline-block;\n  padding: 0px;\n  margin: 0px;\n  border-radius: 0px;\n}\n.tabContainer ul li label {\n  display: inline-block;\n  padding: 10px 35px;\n  border-radius: 0px;\n  margin-bottom: 0px;\n  border-left: none;\n}\n.tabContainer ul li:nth-child(1) label {\n  display: inline-block;\n  padding: 10px 35px;\n  border-left: 0px solid #1f2d3d;\n}\n.tabContainer > span {\n  display: inline-block;\n  width: 100%;\n}\n.tabContainer input {\n  display: none;\n}\n.tabContainer .label_checkbox {\n  display: inline-block;\n  width: 100%;\n  text-align: left;\n  background: #f0a;\n}\n.tabContainer .form-inline {\n  width: 100%;\n}\n.label_checkbox input:checked + label {\n  background: #ffffff !important;\n  color: #20a0ff;\n  border-radius: 0px !important;\n  border-top-left-radius: 5px !important;\n  border-top-right-radius: 5px !important;\n  border: 1px solid #1f2d3d;\n  border-bottom: 1px solid #fff;\n  transform: translateY(1px);\n}\n.datetimerange,\n.tipHtml {\n  /* width: 100%;*/\n  display: inline-block;\n}\n.tabContainer ul li label {\n  border-radius: 0px;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n  border-right: 0px solid #1f2d3d;\n  border-top: 0px solid #1f2d3d;\n  transform: translateY(1px);\n}\n.queryItemLabel {\n  display: inline-block;\n  text-align: right;\n  flex-grow: 0;\n  flex-shrink: 0;\n  margin-bottom: 15px;\n}\n\n.rightBtnStyle {\n  background: #00a0e9;\n  display: inline-block;\n  padding: 5px 10px;\n  color: #fff;\n  cursor: pointer;\n  border-radius: 5px;\n}\n\n.form-inline {\n  display: flex;\n  width: auto;\n  border: 0px solid #f0a;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.myTabsContainer {\n  display: inline-block;\n  border-bottom: 0px solid #333;\n  width: 100%;\n  text-align: left;\n  padding-left: 0px;\n  margin: 0px;\n}\n.checkedStyle {\n  color: green !important;\n  background: #fff;\n}\n</style>"]}]}