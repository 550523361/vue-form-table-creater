{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/views/baseInfo/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/views/baseInfo/index.vue","mtime":1553226104179},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapState} from 'vuex'\nimport backendService from './../../components/remoteService/backendService'\nimport cityData from './../../components/cityData/data'\nimport validate from './../../components/validate/validate'\nimport formCreater from './../../components/formCreater/baseFormCreater'\n\nlet queryElements=[\n    {\n        label:'',\n        type:'html',\n        placeholder:'',\n        default:'<div style=\"border-bottom:1px solid #eee;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);color:#f00;\">审核信息</div>',\n        background:'transparent',\n        prop:'platformTypeCheckState',\n    },\n    {\n        label:'详细信息',\n        type:'html',\n        placeholder:'',\n        defaultValue:'',\n        dataHandler(auditTypeName,...params){\n            let testText='' +\n                '1、身份证已过期<br/>  ' +\n                '2、照片模糊不清<br/>  ' +\n                '3、企业信息不存在<br/>  ' +\n                '4、企业头像图片不清晰<br/>  ' +\n                '5、营业执照与企业信息不匹配<br/>  ' +\n                '6、身份证号码非法<br/>  ' +\n                '7、企业简介描述中含有非法内容<br/>  ' ;\n            let remark=(params[0].remark||'').replace(/\\n/g,\"<br/>\");\n            return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#ff2222;line-height: 25px;word-break: break-all;width: 80%;padding-top: 7px;\">\n                ${auditTypeName}\n                <p style=\"color:#222;\">\n                    ${params[0].auditType==0?'':remark}\n                </p>\n             </div>`\n        },\n        prop:'auditTypeName',\n        subText:'',\n        background:'transparent',\n    },{\n        label:'',\n        type:'html',\n        placeholder:'',\n        defaultValue:'',\n        dataHandler(auditTypeName,...params){\n            return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\"></div>`\n        },\n        prop:'auditTypeNameNoProp',\n        subText:'',\n        background:'transparent',\n    },{\n        label:'',\n        type:'html',\n        placeholder:'',\n        default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">企业信息</div>',\n        background:'transparent',\n        prop:'platformType',\n    },\n    {\n        label:'企业名称',\n        type:'input',\n        placeholder:'企业名称',\n        defaultValue:'',\n        value:'',\n        prop:'enterpriseName',\n        subText:'*最多15个字',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'400px'\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n     \n    {\n        label:'企业简介',\n        type:'input',\n        placeholder:'企业简介',\n        defaultValue:'',\n        inputType:'textarea',\n        rows:3,\n        value:'',\n        prop:'enterpriseIntroduction',\n        subText:'最多100个字',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'400px',\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n        watch:{\n            props:[\"enterpriseName\"],\n            watchValue:{\n                enterpriseName:{\n                    \"好好啊\":true,\n                    \"ccc\":true,\n                },\n                dddd: (...data)=>{\n                    console.log(\">>>>>\",...data)\n                     return false\n                },\n                ee:null\n            }\n        }\n    },\n    {\n        label:'公司标签',\n        prop:'enterpriseLabels',\n        formData:[],\n        type:'addInput',\n        dataBus:true,\n        validateRules:[\n            {\n                required:true\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n                    console.log(\"value\",value)\n                    if(value.split(\"||||\").length>5){\n                        callback(new Error(\"标签最多不能大于5个\"));\n                    }else{\n                        callback();\n                    }\n                    /*errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })*/\n                },\n                trigger:\"change\"\n            }\n        ]\n    },\n    {\n        label:'公司宣传图',\n        prop:'enterpriseShowImages',\n        formData:[],\n        defaultValue:[],\n        type:'addImages',\n        dataBus:true,\n        imagesListConfig:{\n            imageConfig:{\n                //size:2.45*1024*1024,\n                width:430,\n                height:270\n            },\n            readonly:false,\n            /*validatorHandler:validatorHandler,*/\n            data:[],\n            dataBus:true,\n            maxNum:5,\n            tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n            prop:'showUrls'\n        },\n        validateRules:[\n            {\n                required:true\n            },\n            /*{\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                    console.log(\"value\",value)\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }*/\n        ]\n    },\n    {\n        label:'公司省',\n        prop:'enterpriseProvince',\n        default:1,\n        type:'hidden'\n    },\n    {\n        label:'公司市',\n        prop:'enterpriseCity',\n        default:1,\n        type:'hidden'\n    },\n    {\n        label:'公司区',\n        prop:'enterpriseArea',\n        default:1,\n        type:'hidden'\n    },\n    {\n        label:'公司区省市区',\n        prop:'enterpriseAreaLocal',\n        cascaderOptions:cityData,\n        type:'cascader',\n        itemLabel:'label',\n        itemValue:'areaId',\n        default:[],\n        span:12,\n        validateRules:[\n            {\n                required:true,\n            }\n        ]\n    },\n    {\n        label:'详细地址',\n        type:'input',\n        placeholder:'详细地址',\n        defaultValue:'',\n        inputType:'textarea',\n        rows:3,\n        value:'',\n        prop:'enterpriseAddress',\n        subText:'最多100个字',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'400px',\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n    {\n        label:'企业头像',\n        type:'upload',\n        placeholder:'企业头像',\n        defaultValue:1,\n        value:'',\n        prop:'enterpriseIconUrl',\n        tip:'',\n        validateRules:[\n            {\n                required:true,\n            }\n        ]\n\n    },\n    {\n        label:'营业执照',\n        type:'upload',\n        placeholder:'营业执照',\n        defaultValue:1,\n        value:'',\n        prop:'businessLicense',\n        tip:'请上传高清图片，仅支持PNG格式。',\n        validateRules:[\n            {\n                required:true,\n            }\n        ]\n    },\n    {\n        label:'',\n        type:'html',\n        placeholder:'',\n        default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">注册人信息</div>',\n        background:'transparent',\n        prop:'labelInfoZCRXX',\n    },\n    {\n        label:'真实名称',\n        type:'input',\n        placeholder:'真实名称',\n        defaultValue:'',\n        value:'',\n        prop:'name',\n        subText:'*最多15个字',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'400px'\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n    {\n        label:'手机号码',\n        type:'input',\n        placeholder:'手机号码',\n        defaultValue:'',\n        value:'',\n        prop:'mobile',\n        subText:'*11个数字',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'400px'\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:11,mobile:true});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n    {\n        label:'手机验证码',\n        type:'input',\n        placeholder:'手机验证码',\n        defaultValue:'',\n        value:'',\n        prop:'verificationCode',\n        subText:'*4位验证码',\n        rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n        rightBtnClick:data=>{\n            return '';\n        },\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'250px'\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:4});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n    {\n        label:'用户详细地址',\n        type:'textare',\n        placeholder:'用户详细地址',\n        defaultValue:1,\n        value:'',\n        prop:'userAddress',\n        items:[\n            {\n                label:'周边商城',\n                value:1,\n                code:1\n            },\n            {\n                label:'物业缴费',\n                value:2,\n                code:2\n            }\n        ]\n    },\n    \n    {\n        label:'用户省',\n        prop:'userProvince',\n        default:1,\n        type:'hidden'\n    },\n    {\n        label:'用户市',\n        prop:'userCity',\n        default:1,\n        type:'hidden'\n    },\n    {\n        label:'用户区',\n        prop:'userArea',\n        default:1,\n        type:'hidden'\n    },\n    {\n        label:'用户区省市区',\n        prop:'userAreaLocal',\n        cascaderOptions:cityData,\n        type:'cascader',\n        itemLabel:'label',\n        itemValue:'areaId',\n        default:[],\n        span:12,\n        validateRules:[\n            {\n                required:true,\n            }\n        ]\n    },\n    {\n        label:'详细地址',\n        type:'input',\n        placeholder:'详细地址',\n        defaultValue:'',\n        inputType:'textarea',\n        rows:3,\n        value:'',\n        prop:'userAddress',\n        subText:'最多100个字',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto',\n            minWidth:'400px',\n        },\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n    {\n        label:'身份证号码',\n        type:'input',\n        placeholder:'身份证号码',\n        defaultValue:'',\n        value:'',\n        subText:'<span style=\"margin-left: 20px;color:#21211f;\">请输入正确的身份证号码</span>',\n        span:18,\n        style:{\n            display:'inline-block',\n            width:'auto'\n        },\n        prop:'idCard',\n        tip:'',\n        validateRules:[\n            {\n                required:true,\n            },\n            {\n                validator:(validator,value,callback)=>{\n                    let errorMessage=validate.validator(value,{required:true,minlength:16,maxlength:18});\n                    errorMessage.then(data=>{\n                        if(data.code==1){\n                            callback();\n                        }else{\n                            callback(new Error(data.msg));\n                        }\n                    })\n                },\n                trigger:\"change\"\n            }\n        ],\n    },\n    {\n        label:'身份证正面',\n        type:'upload',\n        placeholder:'身份证正面',\n        defaultValue:'',\n        value:'',\n        groupedName:'idCardGroup',\n        style:{\n            width:'auto'\n        },\n        containerStyle:{\n            width:'auto'\n        },\n        prop:'cardFrontUrl',\n        validateRules:[\n            {\n                required:true,\n            }\n        ],\n    },\n    {\n        label:'身份证背面',\n        type:'upload',\n        placeholder:'身份证背面',\n        groupedName:'idCardGroup',\n        defaultValue:'',\n        value:'',\n        style:{\n            width:'auto'\n        },\n        containerStyle:{\n            width:'auto'\n        },\n        groupedStyle:{\n            display:'flex',\n            flexDirection:'row',\n            justContent:'flex-start',\n            alignItems:'center',\n            backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n            width:'80%',\n            marginLeft:'10%',\n            padding: '20px 0px',\n        },\n        prop:'cardBackUrl',\n        validateRules:[\n            {\n                required:true,\n            }\n        ],\n    },\n    \n     \n    \n];\n\nexport default {\n    name: 'list',\n    components:{\n        'form-creater':formCreater\n    },\n    data(){\n        return{\n            validate:validate,\n            couponId:0,\n            dataQuery:{\n                query:{}\n            },\n            config:{\n                queryElements:[],\n                cancle:this.cancle,\n                cancleBtnStyle:{\n                    display:'none'\n                },\n                saveBtnlabel:'保存信息'\n            },\n            timeDownId:0,\n            canSendCode:true,\n        }\n    },\n    methods:{\n        operateClick:function (data,operate) {\n            operate['click']&&operate['click'](data)\n        },\n        saveDataStep1(params){\n            console.log(\"****9999*****\",params,this);\n            let that=this;\n\n            if(params.enterpriseAreaLocal.length==0){\n                params.enterpriseArea=[0,0,0]\n            }\n            if(params.userAreaLocal.length==0){\n                params.enterpriseAreaLocal=[0,0,0]\n            }\n\n            params.enterpriseProvince=params.enterpriseAreaLocal[0];\n            params.enterpriseCity=params.enterpriseAreaLocal[1];\n            params.enterpriseArea=params.enterpriseAreaLocal[2]; \n\n            params.userProvince=params.userAreaLocal[0];\n            params.userCity=params.userAreaLocal[1];\n            params.userArea=params.userAreaLocal[2]; \n\n            var templateData={\n                  \n            };\n\n            \n\n            let postData=Object.assign(params,templateData)\n            postData.userName=\"\";\n            postData.userId=this.uid;\n\n            delete postData.labelInfoZCRXX;\n            delete postData.platformType;\n            delete postData.scopeValue;\n            delete postData.enterpriseAreaLocal;\n            delete postData.userAreaLocal;\n\n            return backendService.getData({\n                url:'/user/saveUserExtend.json',\n                headers:{\n                    \"Content-Type\":\"application/json; charset=utf-8\"\n                },\n                method:\"post\",\n                data:postData\n            }).then(function (result) {\n                console.log(\"result\",result)\n                if(result.code==1){\n                    that.$message({\n                        message: '信息保存成功!',\n                        type: 'success'\n                    });\n                    if(that.userInfo.userInfo.step==2){\n                        that.getUserState()\n                    }else{\n                        that.$router.push(\"/mainLayout/appManager/list/appList2\");\n                    }\n                }else{\n                    that.$message({\n                        message: result.msg,\n                        type: 'error'\n                    });\n                }\n\n            })\n\n        },\n        cancle(){\n            this.$router.push(\"/mainLayout/appManager/list/appList2\");\n        },\n        getUserState(){\n            let that = this;\n            this.$store.commit('GET_USER_STATE',{\n                cb: (data)=>{\n                    if(data==1){\n                        that.$router.push('/mainLayout/activationEmail/activationEmail/'+that.form.username)\n                    }else if(data==2){\n                        that.$router.push('/mainLayout/baseInfo/companyInfo')\n                        that.queryItemInfo()\n                    }else if(data==3){\n                        that.$router.push('/mainLayout/appManager/list/appList2/')\n                    }\n                }\n            })\n        },\n        queryItemInfo(id){\n            let url=\"/user/getUserInfo.json\";\n            let that = this;\n            backendService.getData({\n                url:url,\n                method:\"post\",\n                data:{\n                }\n            }).then(function (data) {\n                if(data.code == '1'){\n\n                    data.data.enterpriseAreaLocal=[data.data.enterpriseProvince,data.data.enterpriseCity,data.data.enterpriseArea];\n                    data.data.userAreaLocal=[data.data.userProvince,data.data.userCity,data.data.userArea];\n\n                    that.config.queryElements=[];\n                    that.config.queryElements=queryElements;\n                    that.config.saveData=that.saveDataStep1;\n                    that.config.formData=data.data;\n                    if(data.data.auditType==0){\n                        that.config.readonly=true;\n                    }else if(data.data.auditType==2){\n                        that.config.readonly=false;\n                    }else{\n                        that.config.readonly=true;\n                    }\n                }else{\n                    that.$message({\n                        message: data.msg,\n                        type: 'error'\n                    });\n                }\n            })\n        },\n        sendMobileCode(data,queryItem){\n            let url=\"/user/sendVrificationCode.json\";\n            let that = this;\n            if(!that.canSendCode){\n                return;\n            }\n            let i=0;\n            let seconds=120;\n            let normalBtn=\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\"\n            if(this.timeDownId){\n                this.$message({type:'error',message:\"请倒计时结束再获取!\"})\n                return;\n            }\n            if(!/^\\d{11}$/.test(data.mobile)){\n                that.$message({\n                        message: '请填写手机号码',\n                        type: 'error'\n                });  \n                return;    \n            }\n            that.canSendCode=false;\n            backendService.getData({\n                url:url,\n                method:\"post\",\n                data:{\n                    mobile:data.mobile\n                }\n            }).then(function (data) {\n                if(data.code == '1'){\n                    that.$message({\n                        message: '验证码已发送',\n                        type: 'success'\n                    });\n                    that.timeDownId&&clearInterval(that.timeDownId)\n                    that.timeDownId=setInterval(data=>{\n                        queryItem.rightBtn=`<span style='border:1px solid #eee;padding:0px 15px;text-align:center;border-radius:5px;display:inline-block;margin-left:15px;color:#ddd;'><span style=\"color: #f00;\">${seconds-++i}</span>秒后重新获取</span>`\n                        if(seconds-i<=0){\n                            clearInterval(that.timeDownId);\n                            that.timeDownId=0;\n                            queryItem.rightBtn=normalBtn;\n                            that.canSendCode=true;\n                        }\n                    },1000)\n                }else{\n                    that.$message({\n                        message: data.msg,\n                        type: 'error'\n                    });\n                    that.canSendCode=true;\n                }\n            })\n        }\n\n    },\n    computed:mapState({\n        userInfo: state => state.login,\n        uid: state => state.login.uid,\n        username: state => state.login.username,\n    }),\n    created() {\n\n        let that=this;\n            that.config.queryElements=queryElements;\n            that.config.saveData=that.saveDataStep1;\n            this.config.readonly=false;\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"index.vue","sourceRoot":"src/views/baseInfo","sourcesContent":["<template>\n        <div>\n                <div style=\"text-align: center;margin-bottom: 20px;\">\n                        <el-steps :active=\"2\" align-center>\n                                <el-step title=\"账号注册\" description=\"\"></el-step>\n                                <el-step title=\"邮箱激活\" description=\"\"></el-step>\n                                <el-step title=\"完善企业资料\" description=\"\"></el-step>\n                        </el-steps>\n                </div>\n                <form-creater v-if=\"config.queryElements.length>0\" :config=\"config\" ref=\"formCreater\"></form-creater>\n        </div>\n\n</template>\n<script>\n    import {mapState} from 'vuex'\n    import backendService from './../../components/remoteService/backendService'\n    import cityData from './../../components/cityData/data'\n    import validate from './../../components/validate/validate'\n    import formCreater from './../../components/formCreater/baseFormCreater'\n\n    let queryElements=[\n        {\n            label:'',\n            type:'html',\n            placeholder:'',\n            default:'<div style=\"border-bottom:1px solid #eee;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);color:#f00;\">审核信息</div>',\n            background:'transparent',\n            prop:'platformTypeCheckState',\n        },\n        {\n            label:'详细信息',\n            type:'html',\n            placeholder:'',\n            defaultValue:'',\n            dataHandler(auditTypeName,...params){\n                let testText='' +\n                    '1、身份证已过期<br/>  ' +\n                    '2、照片模糊不清<br/>  ' +\n                    '3、企业信息不存在<br/>  ' +\n                    '4、企业头像图片不清晰<br/>  ' +\n                    '5、营业执照与企业信息不匹配<br/>  ' +\n                    '6、身份证号码非法<br/>  ' +\n                    '7、企业简介描述中含有非法内容<br/>  ' ;\n                let remark=(params[0].remark||'').replace(/\\n/g,\"<br/>\");\n                return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#ff2222;line-height: 25px;word-break: break-all;width: 80%;padding-top: 7px;\">\n                    ${auditTypeName}\n                    <p style=\"color:#222;\">\n                        ${params[0].auditType==0?'':remark}\n                    </p>\n                 </div>`\n            },\n            prop:'auditTypeName',\n            subText:'',\n            background:'transparent',\n        },{\n            label:'',\n            type:'html',\n            placeholder:'',\n            defaultValue:'',\n            dataHandler(auditTypeName,...params){\n                return `<div style=\"color: #f00;font-size: 14px;background: transparent;color:#a00;margin-bottom: 20px;\"></div>`\n            },\n            prop:'auditTypeNameNoProp',\n            subText:'',\n            background:'transparent',\n        },{\n            label:'',\n            type:'html',\n            placeholder:'',\n            default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">企业信息</div>',\n            background:'transparent',\n            prop:'platformType',\n        },\n        {\n            label:'企业名称',\n            type:'input',\n            placeholder:'企业名称',\n            defaultValue:'',\n            value:'',\n            prop:'enterpriseName',\n            subText:'*最多15个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n         \n        {\n            label:'企业简介',\n            type:'input',\n            placeholder:'企业简介',\n            defaultValue:'',\n            inputType:'textarea',\n            rows:3,\n            value:'',\n            prop:'enterpriseIntroduction',\n            subText:'最多100个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px',\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n            watch:{\n                props:[\"enterpriseName\"],\n                watchValue:{\n                    enterpriseName:{\n                        \"好好啊\":true,\n                        \"ccc\":true,\n                    },\n                    dddd: (...data)=>{\n                        console.log(\">>>>>\",...data)\n                         return false\n                    },\n                    ee:null\n                }\n            }\n        },\n        {\n            label:'公司标签',\n            prop:'enterpriseLabels',\n            formData:[],\n            type:'addInput',\n            dataBus:true,\n            validateRules:[\n                {\n                    required:true\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        //let errorMessage=validate.validator(value,{required:true,maxNumber:5});\n                        console.log(\"value\",value)\n                        if(value.split(\"||||\").length>5){\n                            callback(new Error(\"标签最多不能大于5个\"));\n                        }else{\n                            callback();\n                        }\n                        /*errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })*/\n                    },\n                    trigger:\"change\"\n                }\n            ]\n        },\n        {\n            label:'公司宣传图',\n            prop:'enterpriseShowImages',\n            formData:[],\n            defaultValue:[],\n            type:'addImages',\n            dataBus:true,\n            imagesListConfig:{\n                imageConfig:{\n                    //size:2.45*1024*1024,\n                    width:430,\n                    height:270\n                },\n                readonly:false,\n                /*validatorHandler:validatorHandler,*/\n                data:[],\n                dataBus:true,\n                maxNum:5,\n                tip:'请上传高清图片430px*270px，仅支持PNG格式。最多5个图片',\n                prop:'showUrls'\n            },\n            validateRules:[\n                {\n                    required:true\n                },\n                /*{\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        console.log(\"value\",value)\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }*/\n            ]\n        },\n        {\n            label:'公司省',\n            prop:'enterpriseProvince',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'公司市',\n            prop:'enterpriseCity',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'公司区',\n            prop:'enterpriseArea',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'公司区省市区',\n            prop:'enterpriseAreaLocal',\n            cascaderOptions:cityData,\n            type:'cascader',\n            itemLabel:'label',\n            itemValue:'areaId',\n            default:[],\n            span:12,\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n        },\n        {\n            label:'详细地址',\n            type:'input',\n            placeholder:'详细地址',\n            defaultValue:'',\n            inputType:'textarea',\n            rows:3,\n            value:'',\n            prop:'enterpriseAddress',\n            subText:'最多100个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px',\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'企业头像',\n            type:'upload',\n            placeholder:'企业头像',\n            defaultValue:1,\n            value:'',\n            prop:'enterpriseIconUrl',\n            tip:'',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n\n        },\n        {\n            label:'营业执照',\n            type:'upload',\n            placeholder:'营业执照',\n            defaultValue:1,\n            value:'',\n            prop:'businessLicense',\n            tip:'请上传高清图片，仅支持PNG格式。',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n        },\n        {\n            label:'',\n            type:'html',\n            placeholder:'',\n            default:'<div style=\"border-bottom:1px solid #222;padding-bottom:4px;font-size:18px;width:100%;transform: translateX(-106px);\">注册人信息</div>',\n            background:'transparent',\n            prop:'labelInfoZCRXX',\n        },\n        {\n            label:'真实名称',\n            type:'input',\n            placeholder:'真实名称',\n            defaultValue:'',\n            value:'',\n            prop:'name',\n            subText:'*最多15个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:15});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'手机号码',\n            type:'input',\n            placeholder:'手机号码',\n            defaultValue:'',\n            value:'',\n            prop:'mobile',\n            subText:'*11个数字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:11,mobile:true});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'手机验证码',\n            type:'input',\n            placeholder:'手机验证码',\n            defaultValue:'',\n            value:'',\n            prop:'verificationCode',\n            subText:'*4位验证码',\n            rightBtn:\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\",\n            rightBtnClick:data=>{\n                return '';\n            },\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'250px'\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:4});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'用户详细地址',\n            type:'textare',\n            placeholder:'用户详细地址',\n            defaultValue:1,\n            value:'',\n            prop:'userAddress',\n            items:[\n                {\n                    label:'周边商城',\n                    value:1,\n                    code:1\n                },\n                {\n                    label:'物业缴费',\n                    value:2,\n                    code:2\n                }\n            ]\n        },\n        \n        {\n            label:'用户省',\n            prop:'userProvince',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'用户市',\n            prop:'userCity',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'用户区',\n            prop:'userArea',\n            default:1,\n            type:'hidden'\n        },\n        {\n            label:'用户区省市区',\n            prop:'userAreaLocal',\n            cascaderOptions:cityData,\n            type:'cascader',\n            itemLabel:'label',\n            itemValue:'areaId',\n            default:[],\n            span:12,\n            validateRules:[\n                {\n                    required:true,\n                }\n            ]\n        },\n        {\n            label:'详细地址',\n            type:'input',\n            placeholder:'详细地址',\n            defaultValue:'',\n            inputType:'textarea',\n            rows:3,\n            value:'',\n            prop:'userAddress',\n            subText:'最多100个字',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto',\n                minWidth:'400px',\n            },\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,maxlength:100});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'身份证号码',\n            type:'input',\n            placeholder:'身份证号码',\n            defaultValue:'',\n            value:'',\n            subText:'<span style=\"margin-left: 20px;color:#21211f;\">请输入正确的身份证号码</span>',\n            span:18,\n            style:{\n                display:'inline-block',\n                width:'auto'\n            },\n            prop:'idCard',\n            tip:'',\n            validateRules:[\n                {\n                    required:true,\n                },\n                {\n                    validator:(validator,value,callback)=>{\n                        let errorMessage=validate.validator(value,{required:true,minlength:16,maxlength:18});\n                        errorMessage.then(data=>{\n                            if(data.code==1){\n                                callback();\n                            }else{\n                                callback(new Error(data.msg));\n                            }\n                        })\n                    },\n                    trigger:\"change\"\n                }\n            ],\n        },\n        {\n            label:'身份证正面',\n            type:'upload',\n            placeholder:'身份证正面',\n            defaultValue:'',\n            value:'',\n            groupedName:'idCardGroup',\n            style:{\n                width:'auto'\n            },\n            containerStyle:{\n                width:'auto'\n            },\n            prop:'cardFrontUrl',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ],\n        },\n        {\n            label:'身份证背面',\n            type:'upload',\n            placeholder:'身份证背面',\n            groupedName:'idCardGroup',\n            defaultValue:'',\n            value:'',\n            style:{\n                width:'auto'\n            },\n            containerStyle:{\n                width:'auto'\n            },\n            groupedStyle:{\n                display:'flex',\n                flexDirection:'row',\n                justContent:'flex-start',\n                alignItems:'center',\n                backgroundColor:'linear-gradient(180deg,#67c23a61, #409eff8c)',\n                width:'80%',\n                marginLeft:'10%',\n                padding: '20px 0px',\n            },\n            prop:'cardBackUrl',\n            validateRules:[\n                {\n                    required:true,\n                }\n            ],\n        },\n        \n         \n        \n    ];\n\n    export default {\n        name: 'list',\n        components:{\n            'form-creater':formCreater\n        },\n        data(){\n            return{\n                validate:validate,\n                couponId:0,\n                dataQuery:{\n                    query:{}\n                },\n                config:{\n                    queryElements:[],\n                    cancle:this.cancle,\n                    cancleBtnStyle:{\n                        display:'none'\n                    },\n                    saveBtnlabel:'保存信息'\n                },\n                timeDownId:0,\n                canSendCode:true,\n            }\n        },\n        methods:{\n            operateClick:function (data,operate) {\n                operate['click']&&operate['click'](data)\n            },\n            saveDataStep1(params){\n                console.log(\"****9999*****\",params,this);\n                let that=this;\n\n                if(params.enterpriseAreaLocal.length==0){\n                    params.enterpriseArea=[0,0,0]\n                }\n                if(params.userAreaLocal.length==0){\n                    params.enterpriseAreaLocal=[0,0,0]\n                }\n\n                params.enterpriseProvince=params.enterpriseAreaLocal[0];\n                params.enterpriseCity=params.enterpriseAreaLocal[1];\n                params.enterpriseArea=params.enterpriseAreaLocal[2]; \n\n                params.userProvince=params.userAreaLocal[0];\n                params.userCity=params.userAreaLocal[1];\n                params.userArea=params.userAreaLocal[2]; \n\n                var templateData={\n                      \n                };\n\n                \n\n                let postData=Object.assign(params,templateData)\n                postData.userName=\"\";\n                postData.userId=this.uid;\n\n                delete postData.labelInfoZCRXX;\n                delete postData.platformType;\n                delete postData.scopeValue;\n                delete postData.enterpriseAreaLocal;\n                delete postData.userAreaLocal;\n\n                return backendService.getData({\n                    url:'/user/saveUserExtend.json',\n                    headers:{\n                        \"Content-Type\":\"application/json; charset=utf-8\"\n                    },\n                    method:\"post\",\n                    data:postData\n                }).then(function (result) {\n                    console.log(\"result\",result)\n                    if(result.code==1){\n                        that.$message({\n                            message: '信息保存成功!',\n                            type: 'success'\n                        });\n                        if(that.userInfo.userInfo.step==2){\n                            that.getUserState()\n                        }else{\n                            that.$router.push(\"/mainLayout/appManager/list/appList2\");\n                        }\n                    }else{\n                        that.$message({\n                            message: result.msg,\n                            type: 'error'\n                        });\n                    }\n\n                })\n\n            },\n            cancle(){\n                this.$router.push(\"/mainLayout/appManager/list/appList2\");\n            },\n            getUserState(){\n                let that = this;\n                this.$store.commit('GET_USER_STATE',{\n                    cb: (data)=>{\n                        if(data==1){\n                            that.$router.push('/mainLayout/activationEmail/activationEmail/'+that.form.username)\n                        }else if(data==2){\n                            that.$router.push('/mainLayout/baseInfo/companyInfo')\n                            that.queryItemInfo()\n                        }else if(data==3){\n                            that.$router.push('/mainLayout/appManager/list/appList2/')\n                        }\n                    }\n                })\n            },\n            queryItemInfo(id){\n                let url=\"/user/getUserInfo.json\";\n                let that = this;\n                backendService.getData({\n                    url:url,\n                    method:\"post\",\n                    data:{\n                    }\n                }).then(function (data) {\n                    if(data.code == '1'){\n\n                        data.data.enterpriseAreaLocal=[data.data.enterpriseProvince,data.data.enterpriseCity,data.data.enterpriseArea];\n                        data.data.userAreaLocal=[data.data.userProvince,data.data.userCity,data.data.userArea];\n\n                        that.config.queryElements=[];\n                        that.config.queryElements=queryElements;\n                        that.config.saveData=that.saveDataStep1;\n                        that.config.formData=data.data;\n                        if(data.data.auditType==0){\n                            that.config.readonly=true;\n                        }else if(data.data.auditType==2){\n                            that.config.readonly=false;\n                        }else{\n                            that.config.readonly=true;\n                        }\n                    }else{\n                        that.$message({\n                            message: data.msg,\n                            type: 'error'\n                        });\n                    }\n                })\n            },\n            sendMobileCode(data,queryItem){\n                let url=\"/user/sendVrificationCode.json\";\n                let that = this;\n                if(!that.canSendCode){\n                    return;\n                }\n                let i=0;\n                let seconds=120;\n                let normalBtn=\"<span style='border:1px solid green;padding:0px 15px;text-align:center;border-radius:5px;cursor: pointer;display:inline-block;margin-left:15px;'>获取验证码</span>\"\n                if(this.timeDownId){\n                    this.$message({type:'error',message:\"请倒计时结束再获取!\"})\n                    return;\n                }\n                if(!/^\\d{11}$/.test(data.mobile)){\n                    that.$message({\n                            message: '请填写手机号码',\n                            type: 'error'\n                    });  \n                    return;    \n                }\n                that.canSendCode=false;\n                backendService.getData({\n                    url:url,\n                    method:\"post\",\n                    data:{\n                        mobile:data.mobile\n                    }\n                }).then(function (data) {\n                    if(data.code == '1'){\n                        that.$message({\n                            message: '验证码已发送',\n                            type: 'success'\n                        });\n                        that.timeDownId&&clearInterval(that.timeDownId)\n                        that.timeDownId=setInterval(data=>{\n                            queryItem.rightBtn=`<span style='border:1px solid #eee;padding:0px 15px;text-align:center;border-radius:5px;display:inline-block;margin-left:15px;color:#ddd;'><span style=\"color: #f00;\">${seconds-++i}</span>秒后重新获取</span>`\n                            if(seconds-i<=0){\n                                clearInterval(that.timeDownId);\n                                that.timeDownId=0;\n                                queryItem.rightBtn=normalBtn;\n                                that.canSendCode=true;\n                            }\n                        },1000)\n                    }else{\n                        that.$message({\n                            message: data.msg,\n                            type: 'error'\n                        });\n                        that.canSendCode=true;\n                    }\n                })\n            }\n\n        },\n        computed:mapState({\n            userInfo: state => state.login,\n            uid: state => state.login.uid,\n            username: state => state.login.username,\n        }),\n        created() {\n\n            let that=this;\n                that.config.queryElements=queryElements;\n                that.config.saveData=that.saveDataStep1;\n                this.config.readonly=false;\n        }\n    }\n</script>\n\n<style scoped>\n    #container {\n        height: 300px;\n        width:800px;\n    }\n\n    .queryElement{\n        display: block;\n        width: 100%;\n        border:0px solid #f00;\n    }\n</style>\n<style>\n        .el-step__title,.el-step__description{\n                text-align: center;\n        }\n</style>\n"]}]}