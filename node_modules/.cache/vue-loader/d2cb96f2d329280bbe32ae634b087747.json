{"remainingRequest":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/tableQueryParamComponent.vue?vue&type=style&index=0&id=15c788d8&scoped=true&lang=css&","dependencies":[{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/src/components/tableList/tableQueryParamComponent.vue","mtime":1553139827684},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iriskang/xkfeng/formAndTableCreater/vue-form-table-creater/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput ,select,.queryParamInput{\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    background-color: #fff;\n    background-image: none;\n    border-radius: 4px;\n    border: 1px solid #bfcbd9;\n    box-sizing: border-box;\n    color: #1f2d3d;\n    font-size: inherit;\n    height: 36px;\n    line-height: 1;\n    outline: 0;\n    padding: 3px 10px;\n    transition: border-color .2s cubic-bezier(.645,.045,.355,1);\n\n    width: 220px;\n}\n\ninput ,select,.queryParamInput,.el-select,.datetimerange{\n    margin-bottom: 15px;\n}\n\nlabel.btn,.btn,.el-button {\n    display: inline-block;\n    line-height: 1;\n    white-space: nowrap;\n    cursor: pointer;\n    /*border: 1px solid #c4c4c4;*/\n    /*color: #fff;*/\n    margin: 0;\n    padding: 10px 15px;\n    border-radius: 4px;\n    margin-bottom: 15px;\n    margin-right: 10px;\n}\nlabel.btn{\n    margin-right: 0px;\n    border: 0px solid #fff;\n    color: #48576a;\n}\n.searchContainer{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    background: rgba(0,0,0,.00);\n    padding: 10px;\n    border: 0px solid #f00;\n    background: linear-gradient(180deg, #6cb4ff, rgb(255, 255, 255))\n}\n.elementsContainer{\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction: row;\n    flex-wrap: wrap;\n    flex-grow: 1;\n    flex-shrink: 1;\n    position: relative;\n}\n.queryElement{\n    display: inline-block;\n    flex-grow: 0;\n    flex-shrink: 0;\n    width: auto;\n}\n.queryElement  span[flagkey=\"hidden\"],.hidden{\n    display: none!important;\n    background: #f00;\n}\n\n.tabContainer{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 100%;\n}\n.tabContainer ul{\n     display: flex;\n     flex-direction: row;\n     justify-content: flex-start;\n     align-items: flex-start;\n }\n.tabContainer ul li{\n    display: inline-block;\n    padding: 0px;\n    margin: 0px;\n    border-radius: 0px;\n}\n.tabContainer ul li label{\n     display: inline-block;\n     padding: 10px 35px;\n     border-radius: 0px;\n     margin-bottom: 0px;\n    border-left: none;\n }\n.tabContainer ul li:nth-child(1) label{\n    display: inline-block;\n    padding: 10px 35px;\n    border-left: 1px solid #1f2d3d;\n}\n.tabContainer > span{\n    display: inline-block;\n    width: 100%;\n}\n.tabContainer input{\n    display: none;\n}\n.tabContainer .label_checkbox{\n    display: inline-block;\n    width: 100%;\n    text-align:left;\n    background: #f0a;\n}\n.tabContainer .form-inline{\n    width: 100%;\n}\n.label_checkbox input:checked+label{\n    background: #ffffff!important;\n    color: #20a0ff;\n    border-radius: 0px!important;\n    border-top-left-radius: 5px!important;\n    border-top-right-radius: 5px!important;\n    border: 1px solid #1f2d3d;\n    border-bottom: 1px solid #fff;\n    transform: translateY(1px);\n}\n.datetimerange,.tipHtml{\n   /* width: 100%;*/\n    display: inline-block;\n}\n.tabContainer ul li label{\n    border-radius: 0px;\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n    border-right: 1px solid #1f2d3d;\n    border-top: 1px solid #1f2d3d;\n    transform: translateY(1px);\n}\n.queryItemLabel{\n    display: inline-block;\n    text-align: right;\n    flex-grow: 0;\n    flex-shrink: 0;\n    margin-bottom: 15px;\n\n}\n\n.rightBtnStyle{\n    background: #00a0e9;display: inline-block;padding: 5px 10px;color: #fff;cursor: pointer;border-radius: 5px;\n}\n\n.form-inline{\n    display: flex;\n    width: auto;\n    border: 0px solid #f0a;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    align-items: center;\n}\n.myTabsContainer{\n    display: inline-block;\n    border-bottom:1px solid #333;\n    width: 100%;\n    text-align: left;\n    padding-left: 0px;\n    margin: 0px;\n}\n.checkedStyle{\n    color: green!important;\n    background: #fff;\n}\n",{"version":3,"sources":["tableQueryParamComponent.vue"],"names":[],"mappingswifile":"tableQueryParamComponent.vue","sourceRoot":"src/components/tableList","sourcesContent":["<template>\n    <div :style=\"$attrs.queryConfig.containerStyle||{}\">\n        <div v-for=\"(groupName,groupElementIndex) in Object.keys(groupedElements)\" :style=\"groupedStyle(groupedElements[groupName])\" class=\"searchContainer\" :key=\"groupElementIndex+'_'+groupName\" >\n            <div class=\"elementsContainer\" :style=\"$attrs.queryConfig.elementsContainer||{}\">\n              <span class=\"queryElement\" :style=\"queryItem.style||{}\" :class=\"{hidden:queryItem.type=='hidden',switchElementContainer:queryItem.switchElements,tabContainer:queryItem.type=='tab',datetimerange:queryItem.type=='datetimerange',tipHtml:queryItem.type=='tipHtml'}\" v-for=\"(queryItem,paramIndex) in  groupedElements[groupName]\" :key=\"paramIndex+'_'+queryItem.prop+'_query'+queryItem.label\">\n                    <template v-if=\"queryItem.type=='input'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                        <span class=\"form-inline\"   style=\"margin-top:10px;padding-right: 10px;\">\n                            <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n                            <el-input type=\"text\" style=\"margin-bottom: 15px;\"  :placeholder=\"queryItem.placeholder\"  v-model=\"queryParam[queryItem.prop]\"  @input=\"changeQueryParam(queryItem)\" />\n                            <span v-if=\"queryItem.rightBtn\" @click=\"queryBtnClick(queryParam,queryItem.rightBtn)\" class=\"rightBtnStyle\" :style=\"queryItem.rightBtn.style\">\n                                {{queryItem.rightBtn.label||'搜索'}}\n                            </span>\n                        </span>\n                    </template>\n                    <template v-if=\"queryItem.type=='date'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                        <span class=\"form-inline \"   style=\"margin-top:10px;padding-right: 10px;\">\n                            <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n                            <input type=\"text\"    :placeholder=\"queryItem.placeholder\"  :id=\"queryItem.id\"\n                                   class=\"\" v-model=\"queryParam[queryItem.prop]\">\n                        </span>\n                    </template>\n                    <template v-if=\"queryItem.type=='datetimerange'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                        <span class=\"form-inline \" v-if=\"queryItem.type=='datetimerange'\"  style=\"margin-top:10px;padding-right: 10px;\">\n                                    <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n                                    <el-date-picker\n                                            v-model=\"queryParam[queryItem.prop]\"\n                                            type=\"datetimerange\"\n                                            :picker-options=\"queryItem.options\"\n                                            :range-separator=\"queryItem.centerLabel||'至'\"\n                                            :placeholder=\"queryItem.placeholder||'请选择时间范围'\"\n                                            format=\"yyyy-MM-dd HH:mm:ss\"\n                                            @change=\"data=>{\n                                                queryParam[queryItem.prop]=data.split((queryItem.centerLabel||'至'))\n                                            }\"\n                                            align=\"right\"></el-date-picker>\n                        </span>\n                    </template>\n                    <template v-if=\"queryItem.type=='composite'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                        <span class=\"form-inline \"   style=\"margin-top:10px;padding-right: 10px;\">\n                            <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n                            <span  v-for=\"component in queryItem.components\" :key=\"component.prop+'_query'+queryItem.label+'_'+paramIndex\">\n                                <input type=\"text\" class=\" width170\" v-model=\"queryParam[component.prop]\" :placeholder=\"component.placeholder\"\n                                       :id=\"component.id\" :maxelementid=\"component.maxelementid\" :minelementid=\"component.minelementid\"\n                                >\n                                        <span v-if=\"$index==0\">{{queryItem.link}}</span>\n                             </span>\n                        </span>\n                    </template>\n                    <template v-if=\"queryItem.type=='select'&&(queryItem.watch&&queryItem.watch.props?JSON.parse(JSON.stringify(queryItem.watch.props)).map(prop=>{\n                        if(Object.keys(queryItem.watch.watchValue[prop]).length==0){\n                            return false;\n                        }\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                        <span class=\"form-inline \" :class=\"{switchContainer:queryItem.switchElements}\" style=\"margin-top:10px;padding-right: 10px;\">\n                                <span class=\"queryItemLabel\" v-if=\"queryItem.label\">{{queryItem.label}}</span>\n                                <span v-if=\"!queryItem.dataUrl\">\n                                  <el-select    class=\" width170\" v-model=\"queryParam[queryItem.prop]\" filterable  @change=\"changeQueryParam(queryItem)\">\n                                      <el-option value=\"\">{{queryItem.placeholder||'请选择'}}</el-option>\n                                      <el-option  v-for=\"component in queryItem.options\" :value=\"component.value||component.code\" :key=\"component.code+component.value+component.id+'_query'+component.label\" :label=\"component.label||component.name\">{{component.label||component.name}}</el-option>\n                                  </el-select>\n                                </span>\n                                <span v-if=\"queryItem.dataUrl\">\n                                  <el-select  class=\" width170\" v-model=\"queryParam[queryItem.prop]\" filterable  @change=\"changeQueryParam(queryItem)\">\n                                      <el-option value=\"\">{{queryItem.placeholder||'请选择'}}</el-option>\n                                      <el-option v-for=\"component in dataQuery.query[queryItem.propList]\" :key=\"queryItem.prop+'_select_'+component.id+'_value_'+component.value+'_code_'+component.code\" :value=\"component.code||component.id||component.value\" :code=\"component.id||component.code||component.value\" :label=\"component.label||component.name||component.desc\">{{component.name||component.label||component.desc}}</el-option>\n                                  </el-select>\n                                </span>\n                            </span>\n                    </template>\n                    <template  v-if=\"queryItem.type=='tipHtml'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                        <span class=\"form-inline \"  :style=\"queryItem.style||{'margin-top':'10px','padding-right': '10px'}\">\n                                <div v-for=\"(tip,indexTip) in queryItem.items\" @click=\"(!tip.items)&&queryBtnClick(queryParam,queryItem,indexTip)\" :key=\"indexTip+'_'+queryItem.prop\">\n                                    <template v-if=\"tip.items\" >\n                                        <span v-for=\"(innerItem,innerItemIndex) in tip.items\" @click=\"queryBtnClick(queryParam,queryItem,indexTip,innerItemIndex)\" :key=\"'innerItemIndex'+'_'+innerItemIndex\" v-html=\"innerItem\"></span>\n                                    </template>\n                                    <span  v-else v-html=\"tip\"></span>\n                                </div>\n                        </span>\n                    </template>\n                    <template  v-if=\"queryItem.type=='tab'&&(queryItem.watch&&queryItem.watch.props?queryItem.watch.props.map(prop=>{\n                        return queryItem.watch.watchValue[prop]&&queryItem.watch.watchValue[prop][queryParam[prop]]!=true\n                    }).filter(item=>item==true).length==0:true)\"\n                    >\n                            <ul class=\"myTabsContainer\">\n                                <li v-for=\"(component,labelIndex) in !(queryItem.dataUrl&&queryItem.initQuery)?queryItem.components:dataQuery.query[queryItem.propList]\" :key=\"component.code+component.prop+component.id+'__query'+component.label\">\n                                    <input type=\"radio\" :name=\"component.prop\" :id=\"component.prop+'_'+labelIndex\" :value=\"component.value||component.code\"\n                                           @change=\"queryBtnClick(queryParam,queryItem,component)\"\n                                           v-model=\"queryParam[queryItem.prop]\">\n                                    <label :for=\"component.prop+'_'+labelIndex\" :class=\"['btn',{checkedStyle:queryParam[queryItem.prop]==component.value}]\">{{component.label||component.desc||component.name}}</label>\n                                </li>\n                            </ul>\n                    </template>\n              </span>\n              <span v-for=\"(queryItem,paramIndex) in groupedElements[groupName]\" v-if=\"queryItem.type=='button'||queryItem.type=='search'\" :style=\"queryItem.style||{paddingTop:'10px'}\" v-bind:hidden=\"queryItem.hidden\" :key=\"queryItem.prop+'_query'+queryItem.label+'_'+paramIndex\"   @click=\"queryBtnClick(queryParam,queryItem)\">\n                  <template v-if=\"queryItem.viewHandler\">\n                      <template v-if=\"!queryItem.html\">\n                          <span v-if=\"queryItem.type!='search'\" :class=\"['btn','btn-default','el-button el-button--default',queryItem.type=='search'?'el-button el-button--info':'',queryItem.btnClass]\">\n                                {{queryItem.viewHandler(queryItem,$route.params,queryParam,context)}}\n                          </span>\n                      </template>\n                      <template v-else=\"!queryItem.html\">\n                          <span v-if=\"queryItem.type!='search'\" v-html=\"queryItem.viewHandler(queryItem,$route.params,queryParam,context)\"></span>\n                      </template>\n                  </template>\n                  <template v-else=\"queryItem.viewHandler\">\n                      <span v-if=\"queryItem.type!='search'\" :style=\"queryItem.style||{}\" :class=\"['btn','btn-default','el-button el-button--default',queryItem.type=='search'?'el-button el-button--info':'',queryItem.btnClass]\">\n                            {{queryItem.label}}\n                      </span>\n                      <el-button v-else=\"queryItem.type=='search'\" type=\"primary\" icon=\"search\">搜索</el-button>\n                  </template>\n              </span>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import backendService from '../remoteService/backendService'\n    import _ from 'lodash'\n\n    export default {\n        name: \"mytablequery\",\n        props:{\n\n        },\n        data:function(){\n            return {\n                queryElements:[],\n                dataQuery:{\n                    query:{}\n                },\n                readonly:{},\n                queryParam:{},\n                watchMap:{},\n                /*tabItem:{prop:'null'},*/\n                context:null,\n            }\n        },\n        methods:{\n            queryListData(params){\n                let requestParam=JSON.parse(JSON.stringify(params.queryParam))||{};\n                delete requestParam[\"timeRange\"];\n                return backendService.getData({\n                    url:params.url,\n                    method:params.method||\"post\",\n                    data:requestParam\n                }).then(function (result) {\n                    return Promise.resolve(result)\n                })\n            },\n            changeQueryParam:function (data,operate) {\n                let that=this;\n                this.$nextTick(function () {\n                    that.changeHelp(data,operate);\n                })\n            },\n            changeHelp(prop){\n                let that=this;\n                let currentSwitchValue=this.queryParam[prop.prop];\n                let watchElements=this.watchMap[prop.prop]||{};\n                if(Object.keys(watchElements).length==0&&prop.type!=\"tab\") return;\n                that.initElementsPromise(watchElements,currentSwitchValue,prop).then(success=>{\n                    console.log(\"changeHelp success**** ---\",success)\n                    if(prop.type==\"tab\"){\n                        that.$parent.fresh();\n                    }\n                },error=>{\n                    console.log(\"changeHelp error **** ---\",error)\n                })\n            },\n            restoreQueryParam(){\n                let that=this;\n                that.dataQuery.query={};\n                this.queryParam={};\n                this.initQueryElementPromise().then(success=>{\n                    console.log(\"restoreQueryParam  ---> success--->\",success)\n                },error=>{\n                    console.log(\"restoreQueryParam  ---> error--->\",error)\n                });\n            },\n\n            getElement(prop){\n                let elementItem={};\n                this.queryElements.forEach(item=>{\n                    if(item.prop==prop){\n                        elementItem=item;\n                    }\n                })\n                return elementItem;\n            },\n\n            initQueryElementPromise(){\n                let that=this;\n                let watchMap={};\n                /*n 级 级联查询开始*/\n                if(this.queryElements==null||this.queryElements.length==0) return Promise.resolve({code:1,msg:'no elements need init!'});\n                var requestUrlParam= [].filter.call(this.queryElements, function (item) {\n\n                    /*发现关联关系 当值被观察的时候有变动会处理级联变动的相关元素 最常见是为 tab切换做相关下来元素的初始化*/\n                    if(item.watch&&item.watch.props&&item.watch.props.length){\n                        item.watch.props.forEach(watchKey=>{\n                            if(watchMap[watchKey]){\n                                watchMap[watchKey][item.prop]=item;\n                            }else{\n                                let tempKeyMap={};\n                                tempKeyMap[item.prop]=item;\n                                watchMap[watchKey]=tempKeyMap;\n                            }\n                        })\n                    }\n\n                    /*兼容之前老版本 start*/\n                    if(item.casecadeChild){\n                        if(watchMap[item.prop]){\n                            watchMap[item.prop][item.casecadeChild]=that.getElement(item.casecadeChild);\n                        }else{\n                            let tempKeyMap={};\n                            tempKeyMap[item.casecadeChild]=that.getElement(item.casecadeChild);\n                            watchMap[item.prop]=tempKeyMap;\n                        }\n                    }\n\n                    if(item.casecadeGrandsonList){\n                        item.casecadeGrandsonList.forEach(childElementProp=>{\n                            if(watchMap[item.prop]){\n                                if(!watchMap[item.prop][childElementProp]){\n                                    watchMap[item.prop][childElementProp]=that.getElement(childElementProp);\n                                }\n                            }else{\n                                let tempKeyMap={};\n                                tempKeyMap[childElementProp]=that.getElement(childElementProp);\n                                watchMap[item.prop]=tempKeyMap;\n                            }\n                        })\n                    }\n\n                    if(item.casecadeParen){\n                        if(watchMap[item.casecadeParen]){\n                            watchMap[item.casecadeParen][item.prop]=item;\n                        }else{\n                            let tempKeyMap={};\n                            tempKeyMap[item.prop]=item;\n                            watchMap[item.casecadeParen]=tempKeyMap;\n                        }\n                    }\n\n                    /*兼容之前老版本 end*/\n\n\n                    if(item.dataUrl&&item.initQuery){\n                        that.$set(that.queryParam,item.prop,item.defaultValue||item.value)\n                        return item;\n                    }else{\n                        if(!(item.type=='search'||item.type=='button'||item.prop=='deleteProps')){\n                            that.$set(that.queryParam,item.prop,item.defaultValue||item.value)\n                        }\n                    }\n                });\n                that.$set(that,\"watchMap\",watchMap);\n\n                let promiseList=[];\n\n                for(let seq in requestUrlParam){\n                    let initElementPromise=new Promise(function (resolve,reject) {\n                        let item=requestUrlParam[seq];\n                        if(item.casecadeParen==null||item.casecadeParen==\"\"||item.includeInit==true){\n                            let submitParam=JSON.parse(JSON.stringify(that.queryParam));\n                            if(submitParam.timeRange){\n                                submitParam[\"startTime\"]=that.queryParam.timeRange[0]||''\n                                submitParam[\"endTime\"]=that.queryParam.timeRange[1]||''\n                            }\n\n                            if(that.queryParam.deleteProps){\n                                console.log(that.queryParam.deleteProps)\n                                that.queryParam.deleteProps.forEach(item=>{\n                                    delete submitParam[item];\n                                })\n                                delete submitParam[\"deleteProps\"];\n                            }\n                            if(item.watchParams){\n                                Object.keys(item.watchParams).forEach(key=>{\n                                    submitParam[key]=that.readonly[key]||that.queryParam[key]||'';\n                                })\n                            }\n\n                            if(item.otherParams){\n                                Object.keys(item.otherParams).forEach(key=>{\n                                    submitParam[key]=item.otherParams[key]||'';\n                                })\n                            }\n\n                            /*顶级元素优先查询完成一级数据初始化*/\n                            that.queryListData({url:item.dataUrl,queryParam:submitParam,method:item.httpMethod||\"get\"}).then((listData)=>{\n                                if(!listData) return resolve({url:item.dataUrl,data:listData});\n                                that.$set(that.dataQuery.query,item.propList,item.dataHandler?item.dataHandler(listData):listData[item.propValueList])\n                                that.$set(that.queryParam,item.prop,item.defaultValue)\n                                resolve({url:item.dataUrl,data:listData})\n                                //console.log(\"****\",this.dataQuery.query)\n                            },(error)=>{\n                                console.log(error);\n                                reject({url:item.dataUrl,error})\n                            });\n                        }\n                    })\n                    promiseList.push(initElementPromise);\n                }\n                return Promise.all(promiseList);\n            },\n\n            initElementsPromise(elements,currentSwitchValue,parentElement){/*被关注的元素值发生变动执行的初始化操作*/\n                let that=this;\n                let promiseList=[];\n                for(let seq in elements){\n                    let initElementPromise=new Promise(function (resolve,reject) {\n                        let item=elements[seq];\n                        if(item){\n                            let defaultPrevent={};\n                            defaultPrevent[parentElement.prop]=\"\";\n                            item.preventRequestValue=item.preventRequestValue?item.preventRequestValue:defaultPrevent;\n                            if(item.preventRequestValue){\n                                let keys=Object.keys(item.preventRequestValue);\n                                if(keys.length){\n\n                                   let preventKeys=keys.filter(key=>{\n                                        return that.queryParam[key]==item.preventRequestValue[key]\n                                    })\n\n                                    if(preventKeys.length){\n                                        let listData=[];\n                                        that.$set(that.dataQuery.query,item.propList,listData)\n                                        that.$set(that.queryParam,item.prop,item.defaultValue)\n                                        resolve({url:item.dataUrl,data:listData});\n                                        return ;\n                                    }\n                                }\n                            }\n\n                            let submitParam=JSON.parse(JSON.stringify(that.queryParam));\n                            if(submitParam.timeRange){\n                                submitParam[\"startTime\"]=that.queryParam.timeRange[0]||''\n                                submitParam[\"endTime\"]=that.queryParam.timeRange[1]||''\n                            }\n\n                            if(item.deleteProps){\n                                console.log(item.deleteProps)\n                                item.deleteProps.forEach(item=>{\n                                    delete submitParam[item];\n                                })\n                                delete submitParam[\"deleteProps\"];\n                            }\n\n                            if(item.watchParams){\n                                Object.keys(item.watchParams).forEach(key=>{\n                                    submitParam[key]=that.readonly[key]||that.queryParam[key]||'';\n                                })\n                            }\n\n                            for(let key in item.dropProps){\n                                delete submitParam[item.dropProps[key]];\n                            }\n                            //console.log(\"item\",item)\n\n                            if(item.watch&&item.watch.watchValue){\n                               // console.log(\"needInitSelected.watch.watchValue\",item.watch.watchValue)\n                                Object.keys(item.watch.watchValue).forEach(key=>{\n                                    submitParam[key]=that.readonly[key]||submitParam[key]||'';\n                                })\n                            }\n\n                            if(item.otherParams){\n                                Object.keys(item.otherParams).forEach(key=>{\n                                    submitParam[key]=item.otherParams[key]||'';\n                                })\n                            }\n\n                            if(item.extendsProp){\n                                for(let seq in item.extendsProp){\n                                    submitParam[item.extendsProp[seq]]=currentSwitchValue;\n                                }\n                            }\n\n                            if(!item.dataUrl){\n                                that.$set(that.queryParam,item.prop,item.defaultValue);\n                                resolve({url:item.dataUrl,data:{}})\n                                return;\n                            }\n\n                            /*顶级元素优先查询完成一级数据初始化*/\n                            that.queryListData({url:item.dataUrl,queryParam:submitParam,method:item.httpMethod||\"get\"}).then((listData)=>{\n                                if(!listData) return resolve({url:item.dataUrl,data:listData});\n                                that.$set(that.dataQuery.query,item.propList,item.dataHandler?item.dataHandler(listData):listData[item.propValueList])\n                                that.$set(that.queryParam,item.prop,item.defaultValue)\n                                resolve({url:item.dataUrl,data:listData})\n                                //console.log(\"****\",this.dataQuery.query)\n                            },(error)=>{\n                                console.log(error);\n                                reject({url:item.dataUrl,error})\n                            });\n                        }\n                    })\n                    promiseList.push(initElementPromise);\n                }\n                return Promise.all(promiseList);\n            },\n\n            queryBtnClick(params,btn,...otherParams){\n                let that=this;\n                console.log(\"queryBtnClick\",params,btn,...otherParams);\n                if(!params.timeRange){\n                    params.timeRange=['',''];\n                }\n\n                if(btn.type=='tab'&&btn.needReinit){\n                    //this.initQueryElement();\n                    this.$nextTick(data=>{\n                        console.log(\"queryBtnClick\",params,btn);\n                        this.reInitQueryElement();\n                    })\n                }\n\n                if(btn.click&& typeof btn.click==\"function\"){\n                    if(btn.check&& typeof btn.check==\"function\"){\n                        let checkResult=btn.check(params,btn,this.dataQuery.query,...otherParams);\n                        if(checkResult instanceof Promise){\n                            checkResult.then(success=>{\n                                btn.click(success.params,btn,...otherParams);\n                            },error=>{\n                                btn.errorTip&&typeof btn.errorTip === \"function\"&&btn.errorTip()\n                                console.log(\"验证失败 不搜索!调用错误提示方法\")\n                                //btn.click(params,btn);\n                            })\n                        }else if(checkResult){\n                            //console.log(\"checkResult\",checkResult)\n                            btn.click(checkResult.params,btn,this.dataQuery.query,...otherParams);\n                        }else{\n                            console.error(\"验证没有返回,请返回 {params:参数对象} 或 Promise对象\")\n                            that.$message({\n                                type:'error',\n                                message:\"验证没有返回 不请求 请查看控制台帮助..\"\n                            })\n                        }\n                    }else{\n                        btn.click(params,btn,...otherParams);\n                    }\n\n                }else{\n                    if(this.$attrs.clickConfig&& typeof this.$attrs.clickConfig==\"function\"){\n                        if(btn.check&& typeof btn.check==\"function\"){\n                            let checkResult=btn.check(params,btn,...otherParams);\n                            if(checkResult instanceof Promise){\n                                checkResult.then(success=>{\n                                    this.$parent.$emit(this.$attrs.queryConfig.listenerId,success.params)\n                                    this.$attrs.clickConfig(success.params,btn,that.queryParam,...otherParams);\n                                },error=>{\n                                    if(btn.errorTip&&typeof btn.errorTip === \"function\"){\n                                        btn.errorTip()\n                                    }else{\n                                        this.$message({type:'error',message:error.msg})\n                                    }\n                                    console.log(\"验证失败 不搜索!调用错误提示方法\")\n                                    //btn.click(params,btn);\n                                })\n                            }else if(checkResult){\n                                console.log(\"checkResult***************\",checkResult.params)\n                                this.$parent.$emit(this.$attrs.queryConfig.listenerId,checkResult.params)\n                                this.$attrs.clickConfig(checkResult.params,btn,that.queryParam,...otherParams);\n                            }else{\n                                console.error(\"验证没有返回,请返回 {params:参数对象} 或 Promise对象\")\n                                that.$message({\n                                    type:'error',\n                                    message:\"验证没有返回 不请求 请查看控制台帮助..\"\n                                })\n                            }\n                        }else{\n                            //this.$parent.$emit(this.$attrs.queryConfig.listenerId,params,btn)\n                            this.$attrs.clickConfig(params,btn,that.queryParam,...otherParams)\n                        }\n                    }\n                }\n            },\n            initPage(){\n                let that=this;\n\n                /*挑选出需要初始化的查询元素 组合成promise.all 排序依赖元素*/\n                that.readonly=this.$attrs.readData||{};\n                this.queryElements=that.$attrs.queryConfig.queryElements;\n\n                //静态值和动态值均已初始化完毕 可以调用table 进行数据查询了\n                that.initQueryElementPromise().then(success=>{\n                    console.log(\"params init success  page init first\",success)\n                    that.$parent.fresh();\n                },error=>{\n                    console.log(\"error\",error)\n                })\n\n                that.$watch('$attrs.queryConfig.queryElements',function (newValue,oldValue) {\n                    that.$set(that,\"queryElements\",newValue)\n                    that.$nextTick(function () {\n                        that.restoreQueryParam();\n                    })\n                },{deep:true})\n            },\n            groupedStyle(groupElements){\n                let groupStyle=null;\n                groupElements.forEach(item=>{\n                    if(!groupStyle&&item.groupedStyle){\n                        groupStyle=item.groupedStyle;\n                    }\n                })\n                console.log(\"groupElements\",groupElements)\n                return groupStyle||{};\n            }\n        },\n        created:function () {\n            this.initPage();\n        },\n        watch:{\n            '$route'(to,from){\n                //console.log(\"this.$route.params\",this.$route.params)\n                //this.initPage();\n            }\n        },\n        computed:{\n            groupedElements(){\n                return _.groupBy(this.$attrs.queryConfig.queryElements,item=>item.groupName)||{}\n            },\n            tabItem(){\n                return _.find(this.$attrs.queryConfig.queryElements,item=>item.type=='tabs')\n            }\n        }\n\n    }\n</script>\n\n<style scoped>\n    input ,select,.queryParamInput{\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        background-color: #fff;\n        background-image: none;\n        border-radius: 4px;\n        border: 1px solid #bfcbd9;\n        box-sizing: border-box;\n        color: #1f2d3d;\n        font-size: inherit;\n        height: 36px;\n        line-height: 1;\n        outline: 0;\n        padding: 3px 10px;\n        transition: border-color .2s cubic-bezier(.645,.045,.355,1);\n\n        width: 220px;\n    }\n\n    input ,select,.queryParamInput,.el-select,.datetimerange{\n        margin-bottom: 15px;\n    }\n\n    label.btn,.btn,.el-button {\n        display: inline-block;\n        line-height: 1;\n        white-space: nowrap;\n        cursor: pointer;\n        /*border: 1px solid #c4c4c4;*/\n        /*color: #fff;*/\n        margin: 0;\n        padding: 10px 15px;\n        border-radius: 4px;\n        margin-bottom: 15px;\n        margin-right: 10px;\n    }\n    label.btn{\n        margin-right: 0px;\n        border: 0px solid #fff;\n        color: #48576a;\n    }\n    .searchContainer{\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center;\n        background: rgba(0,0,0,.00);\n        padding: 10px;\n        border: 0px solid #f00;\n        background: linear-gradient(180deg, #6cb4ff, rgb(255, 255, 255))\n    }\n    .elementsContainer{\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        flex-direction: row;\n        flex-wrap: wrap;\n        flex-grow: 1;\n        flex-shrink: 1;\n        position: relative;\n    }\n    .queryElement{\n        display: inline-block;\n        flex-grow: 0;\n        flex-shrink: 0;\n        width: auto;\n    }\n    .queryElement  span[flagkey=\"hidden\"],.hidden{\n        display: none!important;\n        background: #f00;\n    }\n\n    .tabContainer{\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: flex-start;\n        width: 100%;\n    }\n    .tabContainer ul{\n         display: flex;\n         flex-direction: row;\n         justify-content: flex-start;\n         align-items: flex-start;\n     }\n    .tabContainer ul li{\n        display: inline-block;\n        padding: 0px;\n        margin: 0px;\n        border-radius: 0px;\n    }\n    .tabContainer ul li label{\n         display: inline-block;\n         padding: 10px 35px;\n         border-radius: 0px;\n         margin-bottom: 0px;\n        border-left: none;\n     }\n    .tabContainer ul li:nth-child(1) label{\n        display: inline-block;\n        padding: 10px 35px;\n        border-left: 1px solid #1f2d3d;\n    }\n    .tabContainer > span{\n        display: inline-block;\n        width: 100%;\n    }\n    .tabContainer input{\n        display: none;\n    }\n    .tabContainer .label_checkbox{\n        display: inline-block;\n        width: 100%;\n        text-align:left;\n        background: #f0a;\n    }\n    .tabContainer .form-inline{\n        width: 100%;\n    }\n    .label_checkbox input:checked+label{\n        background: #ffffff!important;\n        color: #20a0ff;\n        border-radius: 0px!important;\n        border-top-left-radius: 5px!important;\n        border-top-right-radius: 5px!important;\n        border: 1px solid #1f2d3d;\n        border-bottom: 1px solid #fff;\n        transform: translateY(1px);\n    }\n    .datetimerange,.tipHtml{\n       /* width: 100%;*/\n        display: inline-block;\n    }\n    .tabContainer ul li label{\n        border-radius: 0px;\n        border-top-left-radius: 6px;\n        border-top-right-radius: 6px;\n        border-right: 1px solid #1f2d3d;\n        border-top: 1px solid #1f2d3d;\n        transform: translateY(1px);\n    }\n    .queryItemLabel{\n        display: inline-block;\n        text-align: right;\n        flex-grow: 0;\n        flex-shrink: 0;\n        margin-bottom: 15px;\n\n    }\n\n    .rightBtnStyle{\n        background: #00a0e9;display: inline-block;padding: 5px 10px;color: #fff;cursor: pointer;border-radius: 5px;\n    }\n\n    .form-inline{\n        display: flex;\n        width: auto;\n        border: 0px solid #f0a;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        align-items: center;\n    }\n    .myTabsContainer{\n        display: inline-block;\n        border-bottom:1px solid #333;\n        width: 100%;\n        text-align: left;\n        padding-left: 0px;\n        margin: 0px;\n    }\n    .checkedStyle{\n        color: green!important;\n        background: #fff;\n    }\n</style>"]}]}